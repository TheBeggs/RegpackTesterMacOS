run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m0.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 105600).

Output array: C (24, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.948833 ms

xsmm-reference Time (libxsmm): 1.948833 ms

xsmm-reference No. of CPU cycles: 1948833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.9488333333333334

xsmm-reference avg execution time: 1.9488333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1956102213 cleaned_data/example_mats/hex/p1/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m0.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 105600).

Output array: C (24, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 8

lda= 105600, ldb= 8, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.061400 ms

xsmm-custom Time (libxsmm): 2.061400 ms

xsmm-custom No. of CPU cycles: 2061400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.0613999999999999

xsmm-custom avg execution time: 2.0613999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 48, 'a_rows': 24, 'a_size': 192, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9453930985414444, 'speedup_best_over_ref': 0.9453930985414444, 'xsmm_custom_avg': 2.0614, 'xsmm_custom_best': 2.0614, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.9488333333333334, 'xsmm_reference_best': 1.9488333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m3.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 105600).

Output array: C (8, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.747700 ms

xsmm-reference Time (libxsmm): 1.747667 ms

xsmm-reference No. of CPU cycles: 1747666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.7476999999999998

xsmm-reference avg execution time: 1.7476999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1152781336 cleaned_data/example_mats/hex/p1/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m3.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 105600).

Output array: C (8, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 24

lda= 105600, ldb= 24, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.766267 ms

xsmm-custom Time (libxsmm): 1.766267 ms

xsmm-custom No. of CPU cycles: 1766266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.7662666666666667

xsmm-custom avg execution time: 1.7662666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 48, 'a_rows': 8, 'a_size': 192, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9894881860043783, 'speedup_best_over_ref': 0.9894881860043783, 'xsmm_custom_avg': 1.7662666666666667, 'xsmm_custom_best': 1.7662666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.7476999999999998, 'xsmm_reference_best': 1.7476999999999998, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m6.txt...

Read matrix has 24 rows and 24 columns.

Input arrays: A (24, 24), B (24, 105600).

Output array: C (24, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.948767 ms

xsmm-reference Time (libxsmm): 3.948767 ms

xsmm-reference No. of CPU cycles: 3948766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.9487666666666663

xsmm-reference avg execution time: 3.9487666666666663

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 855243671 cleaned_data/example_mats/hex/p1/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m6.txt...

Read matrix has 24 rows and 24 columns.

Input arrays: A (24, 24), B (24, 105600).

Output array: C (24, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 24

lda= 105600, ldb= 24, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.145200 ms

xsmm-custom Time (libxsmm): 4.145200 ms

xsmm-custom No. of CPU cycles: 4145200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.1452

xsmm-custom avg execution time: 4.1452

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 48, 'a_rows': 24, 'a_size': 576, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.08333333333333333, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9526118562835729, 'speedup_best_over_ref': 0.9526118562835729, 'xsmm_custom_avg': 4.1452, 'xsmm_custom_best': 4.1452, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.9487666666666663, 'xsmm_reference_best': 3.9487666666666663, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m132.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 105600).

Output array: C (8, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.778233 ms

xsmm-reference Time (libxsmm): 1.778233 ms

xsmm-reference No. of CPU cycles: 1778233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.7782333333333333

xsmm-reference avg execution time: 1.7782333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1820524295 cleaned_data/example_mats/hex/p1/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m132.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 105600).

Output array: C (8, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 24

lda= 105600, ldb= 24, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.778800 ms

xsmm-custom Time (libxsmm): 1.778767 ms

xsmm-custom No. of CPU cycles: 1778766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.7787999999999999

xsmm-custom avg execution time: 1.7787999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 48, 'a_rows': 8, 'a_size': 192, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9996814331759238, 'speedup_best_over_ref': 0.9996814331759238, 'xsmm_custom_avg': 1.7788, 'xsmm_custom_best': 1.7788, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.7782333333333333, 'xsmm_reference_best': 1.7782333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m460.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 105600).

Output array: C (24, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.946333 ms

xsmm-reference Time (libxsmm): 1.946333 ms

xsmm-reference No. of CPU cycles: 1946333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.9463333333333332

xsmm-reference avg execution time: 1.9463333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 253525751 cleaned_data/example_mats/hex/p1/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m460.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 105600).

Output array: C (24, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 8

lda= 105600, ldb= 8, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.045133 ms

xsmm-custom Time (libxsmm): 2.045133 ms

xsmm-custom No. of CPU cycles: 2045133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.0451333333333332

xsmm-custom avg execution time: 2.0451333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 48, 'a_rows': 24, 'a_size': 192, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9516901913485674, 'speedup_best_over_ref': 0.9516901913485674, 'xsmm_custom_avg': 2.0451333333333332, 'xsmm_custom_best': 2.0451333333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.9463333333333332, 'xsmm_reference_best': 1.9463333333333332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 105600).

Output array: C (54, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.857200 ms

xsmm-reference Time (libxsmm): 8.857200 ms

xsmm-reference No. of CPU cycles: 8857200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.8572000000000006

xsmm-reference avg execution time: 8.8572000000000006

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 176999357 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 105600).

Output array: C (54, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 54, k= 27

lda= 105600, ldb= 27, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 9.042267 ms

xsmm-custom Time (libxsmm): 9.042267 ms

xsmm-custom No. of CPU cycles: 9042266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 9.0422666666666682

xsmm-custom avg execution time: 9.0422666666666682

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 54, 'a_rows': 54, 'a_size': 1458, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.037037037037037035, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9795331554035123, 'speedup_best_over_ref': 0.9795331554035123, 'xsmm_custom_avg': 9.042266666666668, 'xsmm_custom_best': 9.042266666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.8572, 'xsmm_reference_best': 8.8572, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 105600).

Output array: C (27, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.954833 ms

xsmm-reference Time (libxsmm): 8.954833 ms

xsmm-reference No. of CPU cycles: 8954833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.9548333333333332

xsmm-reference avg execution time: 8.9548333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1503506747 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 105600).

Output array: C (27, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 54

lda= 105600, ldb= 54, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.997900 ms

xsmm-custom Time (libxsmm): 8.997867 ms

xsmm-custom No. of CPU cycles: 8997866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.9978999999999996

xsmm-custom avg execution time: 8.9978999999999996

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 27, 'a_size': 1458, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9952136980110174, 'speedup_best_over_ref': 0.9952136980110174, 'xsmm_custom_avg': 8.9979, 'xsmm_custom_best': 8.9979, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.954833333333333, 'xsmm_reference_best': 8.954833333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 105600).

Output array: C (81, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 26.101233 ms

xsmm-reference Time (libxsmm): 26.101233 ms

xsmm-reference No. of CPU cycles: 26101233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 26.101233333333333

xsmm-reference avg execution time: 26.101233333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 2084484797 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 105600).

Output array: C (81, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 54

lda= 105600, ldb= 54, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 24.370900 ms

xsmm-custom Time (libxsmm): 24.370900 ms

xsmm-custom No. of CPU cycles: 24370900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 24.370899999999999

xsmm-custom avg execution time: 24.370899999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 81, 'a_size': 4374, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.037037037037037035, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0709999767482257, 'speedup_best_over_ref': 1.0709999767482257, 'xsmm_custom_avg': 24.3709, 'xsmm_custom_best': 24.3709, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 26.101233333333333, 'xsmm_reference_best': 26.101233333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 105600).

Output array: C (27, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 12.931367 ms

xsmm-reference Time (libxsmm): 12.931333 ms

xsmm-reference No. of CPU cycles: 12931333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 12.931366666666666

xsmm-reference avg execution time: 12.931366666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 637770285 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 105600).

Output array: C (27, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 81

lda= 105600, ldb= 81, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 12.852367 ms

xsmm-custom Time (libxsmm): 12.852333 ms

xsmm-custom No. of CPU cycles: 12852333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 12.852366666666667

xsmm-custom avg execution time: 12.852366666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 81, 'a_nonzero': 216, 'a_rows': 27, 'a_size': 2187, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0061467278400087, 'speedup_best_over_ref': 1.0061467278400087, 'xsmm_custom_avg': 12.852366666666667, 'xsmm_custom_best': 12.852366666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 12.931366666666666, 'xsmm_reference_best': 12.931366666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 105600).

Output array: C (81, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 13.203533 ms

xsmm-reference Time (libxsmm): 13.203533 ms

xsmm-reference No. of CPU cycles: 13203533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 13.203533333333333

xsmm-reference avg execution time: 13.203533333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 678248796 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 105600).

Output array: C (81, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 27

lda= 105600, ldb= 27, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 13.234667 ms

xsmm-custom Time (libxsmm): 13.234667 ms

xsmm-custom No. of CPU cycles: 13234666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 13.234666666666667

xsmm-custom avg execution time: 13.234666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 216, 'a_rows': 81, 'a_size': 2187, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9976475921821478, 'speedup_best_over_ref': 0.9976475921821478, 'xsmm_custom_avg': 13.234666666666667, 'xsmm_custom_best': 13.234666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 13.203533333333333, 'xsmm_reference_best': 13.203533333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 105600).

Output array: C (54, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.834867 ms

xsmm-reference Time (libxsmm): 8.834867 ms

xsmm-reference No. of CPU cycles: 8834866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.8348666666666684

xsmm-reference avg execution time: 8.8348666666666684

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 2086392103 cleaned_data/example_mats/hex/p2/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 105600).

Output array: C (54, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 54, k= 27

lda= 105600, ldb= 27, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 9.002700 ms

xsmm-custom Time (libxsmm): 9.002667 ms

xsmm-custom No. of CPU cycles: 9002666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 9.0027000000000008

xsmm-custom avg execution time: 9.0027000000000008

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 162, 'a_rows': 54, 'a_size': 1458, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9813574446184664, 'speedup_best_over_ref': 0.9813574446184664, 'xsmm_custom_avg': 9.0027, 'xsmm_custom_best': 9.0027, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.834866666666668, 'xsmm_reference_best': 8.834866666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 105600).

Output array: C (27, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.912700 ms

xsmm-reference Time (libxsmm): 8.912667 ms

xsmm-reference No. of CPU cycles: 8912666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.9126999999999992

xsmm-reference avg execution time: 8.9126999999999992

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1302673076 cleaned_data/example_mats/hex/p2/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 105600).

Output array: C (27, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 54

lda= 105600, ldb= 54, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 9.103400 ms

xsmm-custom Time (libxsmm): 9.103367 ms

xsmm-custom No. of CPU cycles: 9103366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 9.1033999999999988

xsmm-custom avg execution time: 9.1033999999999988

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 27, 'a_size': 1458, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9790517828503636, 'speedup_best_over_ref': 0.9790517828503636, 'xsmm_custom_avg': 9.103399999999999, 'xsmm_custom_best': 9.103399999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.9127, 'xsmm_reference_best': 8.9127, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 105600).

Output array: C (81, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 24.225033 ms

xsmm-reference Time (libxsmm): 24.225000 ms

xsmm-reference No. of CPU cycles: 24225000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 24.225033333333332

xsmm-reference avg execution time: 24.225033333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 561873294 cleaned_data/example_mats/hex/p2/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 105600).

Output array: C (81, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 54

lda= 105600, ldb= 54, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 24.196133 ms

xsmm-custom Time (libxsmm): 24.196133 ms

xsmm-custom No. of CPU cycles: 24196133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 24.196133333333332

xsmm-custom avg execution time: 24.196133333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 81, 'a_size': 4374, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.037037037037037035, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.001194405717718, 'speedup_best_over_ref': 1.001194405717718, 'xsmm_custom_avg': 24.196133333333332, 'xsmm_custom_best': 24.196133333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 24.225033333333332, 'xsmm_reference_best': 24.225033333333332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 105600).

Output array: C (27, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 12.761167 ms

xsmm-reference Time (libxsmm): 12.761133 ms

xsmm-reference No. of CPU cycles: 12761133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 12.761166666666666

xsmm-reference avg execution time: 12.761166666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 2048619261 cleaned_data/example_mats/hex/p2/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 105600).

Output array: C (27, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 81

lda= 105600, ldb= 81, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 12.804667 ms

xsmm-custom Time (libxsmm): 12.804633 ms

xsmm-custom No. of CPU cycles: 12804633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 12.804666666666666

xsmm-custom avg execution time: 12.804666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 81, 'a_nonzero': 216, 'a_rows': 27, 'a_size': 2187, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9966028010621127, 'speedup_best_over_ref': 0.9966028010621127, 'xsmm_custom_avg': 12.804666666666666, 'xsmm_custom_best': 12.804666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 12.761166666666666, 'xsmm_reference_best': 12.761166666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 105600).

Output array: C (81, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 13.118333 ms

xsmm-reference Time (libxsmm): 13.118300 ms

xsmm-reference No. of CPU cycles: 13118300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 13.118333333333334

xsmm-reference avg execution time: 13.118333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1944779735 cleaned_data/example_mats/hex/p2/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 105600).

Output array: C (81, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 27

lda= 105600, ldb= 27, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 13.166467 ms

xsmm-custom Time (libxsmm): 13.166433 ms

xsmm-custom No. of CPU cycles: 13166433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 13.166466666666668

xsmm-custom avg execution time: 13.166466666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 216, 'a_rows': 81, 'a_size': 2187, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9963442482670622, 'speedup_best_over_ref': 0.9963442482670622, 'xsmm_custom_avg': 13.166466666666668, 'xsmm_custom_best': 13.166466666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 13.118333333333334, 'xsmm_reference_best': 13.118333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 105600).

Output array: C (96, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 36.470067 ms

xsmm-reference Time (libxsmm): 36.470067 ms

xsmm-reference No. of CPU cycles: 36470066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 36.470066666666668

xsmm-reference avg execution time: 36.470066666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 387920651 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 105600).

Output array: C (96, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 96, k= 64

lda= 105600, ldb= 64, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 96

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 36.153233 ms

xsmm-custom Time (libxsmm): 36.153233 ms

xsmm-custom No. of CPU cycles: 36153233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 36.153233333333333

xsmm-custom avg execution time: 36.153233333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 96, 'a_rows': 96, 'a_size': 6144, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.015625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0087636237238349, 'speedup_best_over_ref': 1.0087636237238349, 'xsmm_custom_avg': 36.15323333333333, 'xsmm_custom_best': 36.15323333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 36.47006666666667, 'xsmm_reference_best': 36.47006666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 105600).

Output array: C (64, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 35.684867 ms

xsmm-reference Time (libxsmm): 35.684833 ms

xsmm-reference No. of CPU cycles: 35684833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 35.684866666666672

xsmm-reference avg execution time: 35.684866666666672

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 61097760 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 105600).

Output array: C (64, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 96

lda= 105600, ldb= 96, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 35.519200 ms

xsmm-custom Time (libxsmm): 35.519200 ms

xsmm-custom No. of CPU cycles: 35519200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 35.519199999999998

xsmm-custom avg execution time: 35.519199999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 64, 'a_size': 6144, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0046641440873294, 'speedup_best_over_ref': 1.0046641440873294, 'xsmm_custom_avg': 35.5192, 'xsmm_custom_best': 35.5192, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 35.68486666666667, 'xsmm_reference_best': 35.68486666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 105600).

Output array: C (192, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 95.248667 ms

xsmm-reference Time (libxsmm): 95.248667 ms

xsmm-reference No. of CPU cycles: 95248666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 95.248666666666665

xsmm-reference avg execution time: 95.248666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 2006296250 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 105600).

Output array: C (192, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 96

lda= 105600, ldb= 96, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 95.291700 ms

xsmm-custom Time (libxsmm): 95.291700 ms

xsmm-custom No. of CPU cycles: 95291700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 95.291700000000006

xsmm-custom avg execution time: 95.291700000000006

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 192, 'a_size': 18432, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.020833333333333332, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9995484041807068, 'speedup_best_over_ref': 0.9995484041807068, 'xsmm_custom_avg': 95.2917, 'xsmm_custom_best': 95.2917, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 95.24866666666667, 'xsmm_reference_best': 95.24866666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 105600).

Output array: C (64, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 73.257933 ms

xsmm-reference Time (libxsmm): 73.257933 ms

xsmm-reference No. of CPU cycles: 73257933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 73.257933333333327

xsmm-reference avg execution time: 73.257933333333327

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 24123354 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 105600).

Output array: C (64, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 192

lda= 105600, ldb= 192, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 72.605700 ms

xsmm-custom Time (libxsmm): 72.605700 ms

xsmm-custom No. of CPU cycles: 72605700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 72.605699999999999

xsmm-custom avg execution time: 72.605699999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 192, 'a_nonzero': 672, 'a_rows': 64, 'a_size': 12288, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0546875, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0089832249166846, 'speedup_best_over_ref': 1.0089832249166846, 'xsmm_custom_avg': 72.6057, 'xsmm_custom_best': 72.6057, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 73.25793333333333, 'xsmm_reference_best': 73.25793333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 105600).

Output array: C (192, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 71.171033 ms

xsmm-reference Time (libxsmm): 71.171000 ms

xsmm-reference No. of CPU cycles: 71171000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 71.171033333333327

xsmm-reference avg execution time: 71.171033333333327

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 691824930 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 105600).

Output array: C (192, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 64

lda= 105600, ldb= 64, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 70.781533 ms

xsmm-custom Time (libxsmm): 70.781567 ms

xsmm-custom No. of CPU cycles: 70781566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 70.781533333333329

xsmm-custom avg execution time: 70.781533333333329

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 672, 'a_rows': 192, 'a_size': 12288, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0546875, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0055028477295866, 'speedup_best_over_ref': 1.0055028477295866, 'xsmm_custom_avg': 70.78153333333333, 'xsmm_custom_best': 70.78153333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 71.17103333333333, 'xsmm_reference_best': 71.17103333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 105600).

Output array: C (96, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 36.391367 ms

xsmm-reference Time (libxsmm): 36.391333 ms

xsmm-reference No. of CPU cycles: 36391333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 36.391366666666663

xsmm-reference avg execution time: 36.391366666666663

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 137274550 cleaned_data/example_mats/hex/p3/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 105600).

Output array: C (96, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 96, k= 64

lda= 105600, ldb= 64, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 96

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 35.718267 ms

xsmm-custom Time (libxsmm): 35.718300 ms

xsmm-custom No. of CPU cycles: 35718300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 35.718266666666665

xsmm-custom avg execution time: 35.718266666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 384, 'a_rows': 96, 'a_size': 6144, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0188446994441687, 'speedup_best_over_ref': 1.0188446994441687, 'xsmm_custom_avg': 35.718266666666665, 'xsmm_custom_best': 35.718266666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 36.39136666666666, 'xsmm_reference_best': 36.39136666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 105600).

Output array: C (64, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 35.632533 ms

xsmm-reference Time (libxsmm): 35.632500 ms

xsmm-reference No. of CPU cycles: 35632500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 35.632533333333335

xsmm-reference avg execution time: 35.632533333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1804652127 cleaned_data/example_mats/hex/p3/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 105600).

Output array: C (64, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 96

lda= 105600, ldb= 96, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 35.394000 ms

xsmm-custom Time (libxsmm): 35.394000 ms

xsmm-custom No. of CPU cycles: 35394000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 35.393999999999998

xsmm-custom avg execution time: 35.393999999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 64, 'a_size': 6144, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0067393720216233, 'speedup_best_over_ref': 1.0067393720216233, 'xsmm_custom_avg': 35.394, 'xsmm_custom_best': 35.394, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 35.632533333333335, 'xsmm_reference_best': 35.632533333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 105600).

Output array: C (192, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 95.109267 ms

xsmm-reference Time (libxsmm): 95.109267 ms

xsmm-reference No. of CPU cycles: 95109266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 95.109266666666656

xsmm-reference avg execution time: 95.109266666666656

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1520268124 cleaned_data/example_mats/hex/p3/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 105600).

Output array: C (192, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 96

lda= 105600, ldb= 96, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 95.241733 ms

xsmm-custom Time (libxsmm): 95.241733 ms

xsmm-custom No. of CPU cycles: 95241733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 95.241733333333329

xsmm-custom avg execution time: 95.241733333333329

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 192, 'a_size': 18432, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.020833333333333332, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9986091531303504, 'speedup_best_over_ref': 0.9986091531303504, 'xsmm_custom_avg': 95.24173333333333, 'xsmm_custom_best': 95.24173333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 95.10926666666666, 'xsmm_reference_best': 95.10926666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 105600).

Output array: C (64, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 72.766067 ms

xsmm-reference Time (libxsmm): 72.766033 ms

xsmm-reference No. of CPU cycles: 72766033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 72.76606666666666

xsmm-reference avg execution time: 72.76606666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1416260202 cleaned_data/example_mats/hex/p3/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 105600).

Output array: C (64, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 192

lda= 105600, ldb= 192, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 72.378367 ms

xsmm-custom Time (libxsmm): 72.378333 ms

xsmm-custom No. of CPU cycles: 72378333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 72.378366666666665

xsmm-custom avg execution time: 72.378366666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 192, 'a_nonzero': 768, 'a_rows': 64, 'a_size': 12288, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0053565729354672, 'speedup_best_over_ref': 1.0053565729354672, 'xsmm_custom_avg': 72.37836666666666, 'xsmm_custom_best': 72.37836666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 72.76606666666666, 'xsmm_reference_best': 72.76606666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 105600).

Output array: C (192, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 70.187467 ms

xsmm-reference Time (libxsmm): 70.187433 ms

xsmm-reference No. of CPU cycles: 70187433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 70.187466666666666

xsmm-reference avg execution time: 70.187466666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1125670430 cleaned_data/example_mats/hex/p3/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 105600).

Output array: C (192, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 64

lda= 105600, ldb= 64, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 70.179500 ms

xsmm-custom Time (libxsmm): 70.179467 ms

xsmm-custom No. of CPU cycles: 70179466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 70.179500000000004

xsmm-custom avg execution time: 70.179500000000004

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 768, 'a_rows': 192, 'a_size': 12288, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0001135184301209, 'speedup_best_over_ref': 1.0001135184301209, 'xsmm_custom_avg': 70.1795, 'xsmm_custom_best': 70.1795, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 70.18746666666667, 'xsmm_reference_best': 70.18746666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 105600).

Output array: C (150, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 96.018500 ms

xsmm-reference Time (libxsmm): 96.018500 ms

xsmm-reference No. of CPU cycles: 96018500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 96.018499999999989

xsmm-reference avg execution time: 96.018499999999989

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 295988903 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 105600).

Output array: C (150, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 150, k= 125

lda= 105600, ldb= 125, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 96.835367 ms

xsmm-custom Time (libxsmm): 96.835367 ms

xsmm-custom No. of CPU cycles: 96835366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 96.835366666666673

xsmm-custom avg execution time: 96.835366666666673

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 150, 'a_rows': 150, 'a_size': 18750, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.008, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9915643767893341, 'speedup_best_over_ref': 0.9915643767893341, 'xsmm_custom_avg': 96.83536666666667, 'xsmm_custom_best': 96.83536666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 96.01849999999999, 'xsmm_reference_best': 96.01849999999999, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 105600).

Output array: C (125, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 102.739733 ms

xsmm-reference Time (libxsmm): 102.739733 ms

xsmm-reference No. of CPU cycles: 102739733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 102.73973333333333

xsmm-reference avg execution time: 102.73973333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 287450672 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 105600).

Output array: C (125, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 150

lda= 105600, ldb= 150, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 103.832567 ms

xsmm-custom Time (libxsmm): 103.832567 ms

xsmm-custom No. of CPU cycles: 103832566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 103.83256666666666

xsmm-custom avg execution time: 103.83256666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 125, 'a_size': 18750, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9894750426728672, 'speedup_best_over_ref': 0.9894750426728672, 'xsmm_custom_avg': 103.83256666666666, 'xsmm_custom_best': 103.83256666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 102.73973333333333, 'xsmm_reference_best': 102.73973333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 105600).

Output array: C (375, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 294.354467 ms

xsmm-reference Time (libxsmm): 294.354467 ms

xsmm-reference No. of CPU cycles: 294354466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 294.35446666666667

xsmm-reference avg execution time: 294.35446666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 424476642 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 105600).

Output array: C (375, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 150

lda= 105600, ldb= 150, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 298.323367 ms

xsmm-custom Time (libxsmm): 298.323367 ms

xsmm-custom No. of CPU cycles: 298323366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 298.32336666666663

xsmm-custom avg execution time: 298.32336666666663

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 375, 'a_size': 56250, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.013333333333333334, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.986695980122688, 'speedup_best_over_ref': 0.986695980122688, 'xsmm_custom_avg': 298.32336666666663, 'xsmm_custom_best': 298.32336666666663, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 294.35446666666667, 'xsmm_reference_best': 294.35446666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 105600).

Output array: C (125, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 273.812733 ms

xsmm-reference Time (libxsmm): 273.812733 ms

xsmm-reference No. of CPU cycles: 273812733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 273.81273333333331

xsmm-reference avg execution time: 273.81273333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1347257887 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 105600).

Output array: C (125, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 375

lda= 105600, ldb= 375, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 274.239400 ms

xsmm-custom Time (libxsmm): 274.239400 ms

xsmm-custom No. of CPU cycles: 274239400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 274.23940000000005

xsmm-custom avg execution time: 274.23940000000005

Freeing A

Freeing B

Freeing C

{'a_cols': 375, 'a_nonzero': 1650, 'a_rows': 125, 'a_size': 46875, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0352, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.998444181738048, 'speedup_best_over_ref': 0.998444181738048, 'xsmm_custom_avg': 274.23940000000005, 'xsmm_custom_best': 274.23940000000005, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 273.8127333333333, 'xsmm_reference_best': 273.8127333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 105600).

Output array: C (375, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 233.835667 ms

xsmm-reference Time (libxsmm): 233.835667 ms

xsmm-reference No. of CPU cycles: 233835666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 233.83566666666667

xsmm-reference avg execution time: 233.83566666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 754788664 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 105600).

Output array: C (375, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 125

lda= 105600, ldb= 125, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 234.195400 ms

xsmm-custom Time (libxsmm): 234.195367 ms

xsmm-custom No. of CPU cycles: 234195366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 234.19540000000001

xsmm-custom avg execution time: 234.19540000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 1650, 'a_rows': 375, 'a_size': 46875, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0352, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9984639607211186, 'speedup_best_over_ref': 0.9984639607211186, 'xsmm_custom_avg': 234.1954, 'xsmm_custom_best': 234.1954, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 233.83566666666667, 'xsmm_reference_best': 233.83566666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 105600).

Output array: C (150, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 96.855933 ms

xsmm-reference Time (libxsmm): 96.855933 ms

xsmm-reference No. of CPU cycles: 96855933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 96.855933333333326

xsmm-reference avg execution time: 96.855933333333326

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1936850696 cleaned_data/example_mats/hex/p4/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 105600).

Output array: C (150, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 150, k= 125

lda= 105600, ldb= 125, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 97.297533 ms

xsmm-custom Time (libxsmm): 97.297533 ms

xsmm-custom No. of CPU cycles: 97297533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 97.297533333333334

xsmm-custom avg execution time: 97.297533333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 750, 'a_rows': 150, 'a_size': 18750, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9954613443437756, 'speedup_best_over_ref': 0.9954613443437756, 'xsmm_custom_avg': 97.29753333333333, 'xsmm_custom_best': 97.29753333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 96.85593333333333, 'xsmm_reference_best': 96.85593333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 105600).

Output array: C (125, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 101.813833 ms

xsmm-reference Time (libxsmm): 101.813833 ms

xsmm-reference No. of CPU cycles: 101813833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 101.81383333333333

xsmm-reference avg execution time: 101.81383333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1371479112 cleaned_data/example_mats/hex/p4/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 105600).

Output array: C (125, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 150

lda= 105600, ldb= 150, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 102.224367 ms

xsmm-custom Time (libxsmm): 102.224333 ms

xsmm-custom No. of CPU cycles: 102224333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 102.22436666666665

xsmm-custom avg execution time: 102.22436666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 125, 'a_size': 18750, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9959839972922309, 'speedup_best_over_ref': 0.9959839972922309, 'xsmm_custom_avg': 102.22436666666665, 'xsmm_custom_best': 102.22436666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 101.81383333333333, 'xsmm_reference_best': 101.81383333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 105600).

Output array: C (375, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 296.189267 ms

xsmm-reference Time (libxsmm): 296.189233 ms

xsmm-reference No. of CPU cycles: 296189233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 296.18926666666664

xsmm-reference avg execution time: 296.18926666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 911358597 cleaned_data/example_mats/hex/p4/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 105600).

Output array: C (375, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 150

lda= 105600, ldb= 150, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 297.440800 ms

xsmm-custom Time (libxsmm): 297.440800 ms

xsmm-custom No. of CPU cycles: 297440800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 297.44080000000002

xsmm-custom avg execution time: 297.44080000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 375, 'a_size': 56250, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.013333333333333334, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9957923279747318, 'speedup_best_over_ref': 0.9957923279747318, 'xsmm_custom_avg': 297.4408, 'xsmm_custom_best': 297.4408, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 296.18926666666664, 'xsmm_reference_best': 296.18926666666664, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 105600).

Output array: C (125, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 273.751600 ms

xsmm-reference Time (libxsmm): 273.751567 ms

xsmm-reference No. of CPU cycles: 273751566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 273.7516

xsmm-reference avg execution time: 273.7516

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1527595142 cleaned_data/example_mats/hex/p4/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 105600).

Output array: C (125, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 375

lda= 105600, ldb= 375, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 273.768067 ms

xsmm-custom Time (libxsmm): 273.768067 ms

xsmm-custom No. of CPU cycles: 273768066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 273.76806666666664

xsmm-custom avg execution time: 273.76806666666664

Freeing A

Freeing B

Freeing C

{'a_cols': 375, 'a_nonzero': 1800, 'a_rows': 125, 'a_size': 46875, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0384, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9999398517625991, 'speedup_best_over_ref': 0.9999398517625991, 'xsmm_custom_avg': 273.76806666666664, 'xsmm_custom_best': 273.76806666666664, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 273.7516, 'xsmm_reference_best': 273.7516, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 105600).

Output array: C (375, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 234.161367 ms

xsmm-reference Time (libxsmm): 234.161333 ms

xsmm-reference No. of CPU cycles: 234161333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 234.16136666666668

xsmm-reference avg execution time: 234.16136666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 817607540 cleaned_data/example_mats/hex/p4/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 105600).

Output array: C (375, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 125

lda= 105600, ldb= 125, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 234.666133 ms

xsmm-custom Time (libxsmm): 234.666133 ms

xsmm-custom No. of CPU cycles: 234666133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 234.66613333333333

xsmm-custom avg execution time: 234.66613333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 1800, 'a_rows': 375, 'a_size': 46875, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0384, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9978490007931837, 'speedup_best_over_ref': 0.9978490007931837, 'xsmm_custom_avg': 234.66613333333333, 'xsmm_custom_best': 234.66613333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 234.16136666666668, 'xsmm_reference_best': 234.16136666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 105600).

Output array: C (216, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 252.373200 ms

xsmm-reference Time (libxsmm): 252.373167 ms

xsmm-reference No. of CPU cycles: 252373166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 252.3732

xsmm-reference avg execution time: 252.3732

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 2045292562 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 105600).

Output array: C (216, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 105600, ldb= 216, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 253.739333 ms

xsmm-custom Time (libxsmm): 253.739300 ms

xsmm-custom No. of CPU cycles: 253739300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 253.73933333333335

xsmm-custom avg execution time: 253.73933333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 216, 'a_rows': 216, 'a_size': 46656, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.004629629629629629, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9946159969942907, 'speedup_best_over_ref': 0.9946159969942907, 'xsmm_custom_avg': 253.73933333333335, 'xsmm_custom_best': 253.73933333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 252.3732, 'xsmm_reference_best': 252.3732, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 105600).

Output array: C (216, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 255.028067 ms

xsmm-reference Time (libxsmm): 255.028033 ms

xsmm-reference No. of CPU cycles: 255028033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 255.02806666666666

xsmm-reference avg execution time: 255.02806666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1873802929 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 105600).

Output array: C (216, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 105600, ldb= 216, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 256.061400 ms

xsmm-custom Time (libxsmm): 256.061400 ms

xsmm-custom No. of CPU cycles: 256061400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 256.06139999999999

xsmm-custom avg execution time: 256.06139999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 216, 'a_size': 46656, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9959645095538284, 'speedup_best_over_ref': 0.9959645095538284, 'xsmm_custom_avg': 256.0614, 'xsmm_custom_best': 256.0614, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 255.02806666666666, 'xsmm_reference_best': 255.02806666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 105600).

Output array: C (648, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 744.361567 ms

xsmm-reference Time (libxsmm): 744.361533 ms

xsmm-reference No. of CPU cycles: 744361533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 744.3615666666667

xsmm-reference avg execution time: 744.3615666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 737526973 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 105600).

Output array: C (648, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 105600, ldb= 216, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 746.773100 ms

xsmm-custom Time (libxsmm): 746.773100 ms

xsmm-custom No. of CPU cycles: 746773100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 746.7731

xsmm-custom avg execution time: 746.7731

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 648, 'a_size': 139968, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.009259259259259259, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9967707281725422, 'speedup_best_over_ref': 0.9967707281725422, 'xsmm_custom_avg': 746.7731, 'xsmm_custom_best': 746.7731, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 744.3615666666667, 'xsmm_reference_best': 744.3615666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 105600).

Output array: C (216, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 796.244067 ms

xsmm-reference Time (libxsmm): 796.244033 ms

xsmm-reference No. of CPU cycles: 796244033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 796.24406666666664

xsmm-reference avg execution time: 796.24406666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1352957481 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 105600).

Output array: C (216, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 648

lda= 105600, ldb= 648, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 796.260433 ms

xsmm-custom Time (libxsmm): 796.260400 ms

xsmm-custom No. of CPU cycles: 796260400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 796.26043333333325

xsmm-custom avg execution time: 796.26043333333325

Freeing A

Freeing B

Freeing C

{'a_cols': 648, 'a_nonzero': 3456, 'a_rows': 216, 'a_size': 139968, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.024691358024691357, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9999794455859146, 'speedup_best_over_ref': 0.9999794455859146, 'xsmm_custom_avg': 796.2604333333333, 'xsmm_custom_best': 796.2604333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 796.2440666666666, 'xsmm_reference_best': 796.2440666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 105600).

Output array: C (648, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 742.591733 ms

xsmm-reference Time (libxsmm): 742.591767 ms

xsmm-reference No. of CPU cycles: 742591766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 742.59173333333331

xsmm-reference avg execution time: 742.59173333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 485158556 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 105600).

Output array: C (648, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 105600, ldb= 216, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 745.141467 ms

xsmm-custom Time (libxsmm): 745.141433 ms

xsmm-custom No. of CPU cycles: 745141433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 745.14146666666659

xsmm-custom avg execution time: 745.14146666666659

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 3456, 'a_rows': 648, 'a_size': 139968, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.024691358024691357, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9965781889112422, 'speedup_best_over_ref': 0.9965781889112422, 'xsmm_custom_avg': 745.1414666666666, 'xsmm_custom_best': 745.1414666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 742.5917333333333, 'xsmm_reference_best': 742.5917333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 105600).

Output array: C (216, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 253.062733 ms

xsmm-reference Time (libxsmm): 253.062733 ms

xsmm-reference No. of CPU cycles: 253062733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 253.06273333333331

xsmm-reference avg execution time: 253.06273333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 413774047 cleaned_data/example_mats/hex/p5/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 105600).

Output array: C (216, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 105600, ldb= 216, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 254.912200 ms

xsmm-custom Time (libxsmm): 254.912167 ms

xsmm-custom No. of CPU cycles: 254912166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 254.91220000000001

xsmm-custom avg execution time: 254.91220000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 216, 'a_size': 46656, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9927446914401638, 'speedup_best_over_ref': 0.9927446914401638, 'xsmm_custom_avg': 254.9122, 'xsmm_custom_best': 254.9122, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 253.0627333333333, 'xsmm_reference_best': 253.0627333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 105600).

Output array: C (216, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 254.107800 ms

xsmm-reference Time (libxsmm): 254.107800 ms

xsmm-reference No. of CPU cycles: 254107800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 254.10780000000003

xsmm-reference avg execution time: 254.10780000000003

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 692550870 cleaned_data/example_mats/hex/p5/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 105600).

Output array: C (216, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 105600, ldb= 216, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 255.402433 ms

xsmm-custom Time (libxsmm): 255.402433 ms

xsmm-custom No. of CPU cycles: 255402433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 255.40243333333333

xsmm-custom avg execution time: 255.40243333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 216, 'a_size': 46656, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9949310062694522, 'speedup_best_over_ref': 0.9949310062694522, 'xsmm_custom_avg': 255.40243333333333, 'xsmm_custom_best': 255.40243333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 254.10780000000003, 'xsmm_reference_best': 254.10780000000003, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 105600).

Output array: C (648, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 743.857900 ms

xsmm-reference Time (libxsmm): 743.857867 ms

xsmm-reference No. of CPU cycles: 743857866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 743.85790000000009

xsmm-reference avg execution time: 743.85790000000009

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1754437740 cleaned_data/example_mats/hex/p5/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 105600).

Output array: C (648, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 105600, ldb= 216, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 743.258233 ms

xsmm-custom Time (libxsmm): 743.258200 ms

xsmm-custom No. of CPU cycles: 743258200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 743.25823333333335

xsmm-custom avg execution time: 743.25823333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 648, 'a_size': 139968, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.009259259259259259, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.00080680797033, 'speedup_best_over_ref': 1.00080680797033, 'xsmm_custom_avg': 743.2582333333334, 'xsmm_custom_best': 743.2582333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 743.8579000000001, 'xsmm_reference_best': 743.8579000000001, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 105600).

Output array: C (216, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 793.637333 ms

xsmm-reference Time (libxsmm): 793.637333 ms

xsmm-reference No. of CPU cycles: 793637333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 793.63733333333334

xsmm-reference avg execution time: 793.63733333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1784298157 cleaned_data/example_mats/hex/p5/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 105600).

Output array: C (216, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 648

lda= 105600, ldb= 648, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 796.525767 ms

xsmm-custom Time (libxsmm): 796.525767 ms

xsmm-custom No. of CPU cycles: 796525766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 796.52576666666675

xsmm-custom avg execution time: 796.52576666666675

Freeing A

Freeing B

Freeing C

{'a_cols': 648, 'a_nonzero': 3888, 'a_rows': 216, 'a_size': 139968, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.996373710111826, 'speedup_best_over_ref': 0.996373710111826, 'xsmm_custom_avg': 796.5257666666668, 'xsmm_custom_best': 796.5257666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 793.6373333333333, 'xsmm_reference_best': 793.6373333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 105600).

Output array: C (648, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 744.914000 ms

xsmm-reference Time (libxsmm): 744.913967 ms

xsmm-reference No. of CPU cycles: 744913966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 744.91399999999999

xsmm-reference avg execution time: 744.91399999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1104317826 cleaned_data/example_mats/hex/p5/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 105600).

Output array: C (648, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 105600, ldb= 216, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 745.047100 ms

xsmm-custom Time (libxsmm): 745.047067 ms

xsmm-custom No. of CPU cycles: 745047066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 745.0471

xsmm-custom avg execution time: 745.0471

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 3888, 'a_rows': 648, 'a_size': 139968, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9998213535761699, 'speedup_best_over_ref': 0.9998213535761699, 'xsmm_custom_avg': 745.0471, 'xsmm_custom_best': 745.0471, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 744.914, 'xsmm_reference_best': 744.914, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 105600).

Output array: C (294, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 562.250100 ms

xsmm-reference Time (libxsmm): 562.250100 ms

xsmm-reference No. of CPU cycles: 562250100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 562.25009999999997

xsmm-reference avg execution time: 562.25009999999997

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 202363652 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 105600).

Output array: C (294, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 294, k= 343

lda= 105600, ldb= 343, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 562.762600 ms

xsmm-custom Time (libxsmm): 562.762600 ms

xsmm-custom No. of CPU cycles: 562762600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 562.76260000000002

xsmm-custom avg execution time: 562.76260000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 294, 'a_rows': 294, 'a_size': 100842, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0029154518950437317, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.999089314037571, 'speedup_best_over_ref': 0.999089314037571, 'xsmm_custom_avg': 562.7626, 'xsmm_custom_best': 562.7626, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 562.2501, 'xsmm_reference_best': 562.2501, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 105600).

Output array: C (343, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 563.802633 ms

xsmm-reference Time (libxsmm): 563.802600 ms

xsmm-reference No. of CPU cycles: 563802600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 563.80263333333335

xsmm-reference avg execution time: 563.80263333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1819814829 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 105600).

Output array: C (343, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 294

lda= 105600, ldb= 294, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 560.255833 ms

xsmm-custom Time (libxsmm): 560.255833 ms

xsmm-custom No. of CPU cycles: 560255833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 560.25583333333327

xsmm-custom avg execution time: 560.25583333333327

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 343, 'a_size': 100842, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.006330679287885, 'speedup_best_over_ref': 1.006330679287885, 'xsmm_custom_avg': 560.2558333333333, 'xsmm_custom_best': 560.2558333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 563.8026333333333, 'xsmm_reference_best': 563.8026333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 105600).

Output array: C (1029, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1642.829633 ms

xsmm-reference Time (libxsmm): 1642.829633 ms

xsmm-reference No. of CPU cycles: 1642829633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1642.8296333333335

xsmm-reference avg execution time: 1642.8296333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 219007123 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 105600).

Output array: C (1029, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 294

lda= 105600, ldb= 294, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1642.910267 ms

xsmm-custom Time (libxsmm): 1642.910233 ms

xsmm-custom No. of CPU cycles: 1642910233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1642.9102666666665

xsmm-custom avg execution time: 1642.9102666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 1029, 'a_size': 302526, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.006802721088435374, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9999509204276283, 'speedup_best_over_ref': 0.9999509204276283, 'xsmm_custom_avg': 1642.9102666666665, 'xsmm_custom_best': 1642.9102666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1642.8296333333335, 'xsmm_reference_best': 1642.8296333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 105600).

Output array: C (343, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1941.007233 ms

xsmm-reference Time (libxsmm): 1941.007267 ms

xsmm-reference No. of CPU cycles: 1941007266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1941.0072333333333

xsmm-reference avg execution time: 1941.0072333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 879262785 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 105600).

Output array: C (343, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 1029

lda= 105600, ldb= 1029, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1931.406367 ms

xsmm-custom Time (libxsmm): 1931.406400 ms

xsmm-custom No. of CPU cycles: 1931406400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1931.4063666666666

xsmm-custom avg execution time: 1931.4063666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 1029, 'a_nonzero': 6468, 'a_rows': 343, 'a_size': 352947, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.018325697625989172, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.004970920067555, 'speedup_best_over_ref': 1.004970920067555, 'xsmm_custom_avg': 1931.4063666666666, 'xsmm_custom_best': 1931.4063666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1941.0072333333333, 'xsmm_reference_best': 1941.0072333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 105600).

Output array: C (1029, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1898.117667 ms

xsmm-reference Time (libxsmm): 1898.117667 ms

xsmm-reference No. of CPU cycles: 1898117666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1898.1176666666665

xsmm-reference avg execution time: 1898.1176666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1551020171 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 105600).

Output array: C (1029, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 343

lda= 105600, ldb= 343, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1899.854067 ms

xsmm-custom Time (libxsmm): 1899.854033 ms

xsmm-custom No. of CPU cycles: 1899854033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1899.8540666666668

xsmm-custom avg execution time: 1899.8540666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 6468, 'a_rows': 1029, 'a_size': 352947, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.018325697625989172, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9990860350642369, 'speedup_best_over_ref': 0.9990860350642369, 'xsmm_custom_avg': 1899.8540666666668, 'xsmm_custom_best': 1899.8540666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1898.1176666666665, 'xsmm_reference_best': 1898.1176666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 105600).

Output array: C (294, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 559.530400 ms

xsmm-reference Time (libxsmm): 559.530400 ms

xsmm-reference No. of CPU cycles: 559530400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 559.53039999999999

xsmm-reference avg execution time: 559.53039999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1965968899 cleaned_data/example_mats/hex/p6/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 105600).

Output array: C (294, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 294, k= 343

lda= 105600, ldb= 343, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 559.895867 ms

xsmm-custom Time (libxsmm): 559.895867 ms

xsmm-custom No. of CPU cycles: 559895866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 559.89586666666662

xsmm-custom avg execution time: 559.89586666666662

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 2058, 'a_rows': 294, 'a_size': 100842, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9993472595737446, 'speedup_best_over_ref': 0.9993472595737446, 'xsmm_custom_avg': 559.8958666666666, 'xsmm_custom_best': 559.8958666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 559.5304, 'xsmm_reference_best': 559.5304, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 105600).

Output array: C (343, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 559.206267 ms

xsmm-reference Time (libxsmm): 559.206267 ms

xsmm-reference No. of CPU cycles: 559206266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 559.20626666666658

xsmm-reference avg execution time: 559.20626666666658

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 604750793 cleaned_data/example_mats/hex/p6/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 105600).

Output array: C (343, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 294

lda= 105600, ldb= 294, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 556.483833 ms

xsmm-custom Time (libxsmm): 556.483833 ms

xsmm-custom No. of CPU cycles: 556483833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 556.48383333333334

xsmm-custom avg execution time: 556.48383333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 343, 'a_size': 100842, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.00489220561364, 'speedup_best_over_ref': 1.00489220561364, 'xsmm_custom_avg': 556.4838333333333, 'xsmm_custom_best': 556.4838333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 559.2062666666666, 'xsmm_reference_best': 559.2062666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 105600).

Output array: C (1029, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1638.651367 ms

xsmm-reference Time (libxsmm): 1638.651333 ms

xsmm-reference No. of CPU cycles: 1638651333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1638.6513666666665

xsmm-reference avg execution time: 1638.6513666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1888784432 cleaned_data/example_mats/hex/p6/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 105600).

Output array: C (1029, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 294

lda= 105600, ldb= 294, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1639.274900 ms

xsmm-custom Time (libxsmm): 1639.274867 ms

xsmm-custom No. of CPU cycles: 1639274866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1639.2749000000001

xsmm-custom avg execution time: 1639.2749000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 1029, 'a_size': 302526, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.006802721088435374, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.999619628572771, 'speedup_best_over_ref': 0.999619628572771, 'xsmm_custom_avg': 1639.2749000000001, 'xsmm_custom_best': 1639.2749000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1638.6513666666665, 'xsmm_reference_best': 1638.6513666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 105600).

Output array: C (343, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1938.209167 ms

xsmm-reference Time (libxsmm): 1938.209167 ms

xsmm-reference No. of CPU cycles: 1938209166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1938.2091666666668

xsmm-reference avg execution time: 1938.2091666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 46836307 cleaned_data/example_mats/hex/p6/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 105600).

Output array: C (343, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 1029

lda= 105600, ldb= 1029, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1888.215400 ms

xsmm-custom Time (libxsmm): 1888.215400 ms

xsmm-custom No. of CPU cycles: 1888215400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1888.2154

xsmm-custom avg execution time: 1888.2154

Freeing A

Freeing B

Freeing C

{'a_cols': 1029, 'a_nonzero': 7056, 'a_rows': 343, 'a_size': 352947, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.019991670137442734, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.026476728590746, 'speedup_best_over_ref': 1.026476728590746, 'xsmm_custom_avg': 1888.2154, 'xsmm_custom_best': 1888.2154, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1938.2091666666668, 'xsmm_reference_best': 1938.2091666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 105600).

Output array: C (1029, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1884.620867 ms

xsmm-reference Time (libxsmm): 1884.620867 ms

xsmm-reference No. of CPU cycles: 1884620866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1884.6208666666666

xsmm-reference avg execution time: 1884.6208666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 723481013 cleaned_data/example_mats/hex/p6/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 105600).

Output array: C (1029, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 343

lda= 105600, ldb= 343, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1897.040667 ms

xsmm-custom Time (libxsmm): 1897.040700 ms

xsmm-custom No. of CPU cycles: 1897040700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1897.0406666666668

xsmm-custom avg execution time: 1897.0406666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 7056, 'a_rows': 1029, 'a_size': 352947, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.019991670137442734, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9934530660210763, 'speedup_best_over_ref': 0.9934530660210763, 'xsmm_custom_avg': 1897.0406666666668, 'xsmm_custom_best': 1897.0406666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1884.6208666666666, 'xsmm_reference_best': 1884.6208666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m0.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 105600).

Output array: C (8, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.295333 ms

xsmm-reference Time (libxsmm): 0.295333 ms

xsmm-reference No. of CPU cycles: 295333

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.29533333333333334

xsmm-reference avg execution time: 0.29533333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 405760303 cleaned_data/example_mats/quad/p1/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m0.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 105600).

Output array: C (8, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 4

lda= 105600, ldb= 4, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.343667 ms

xsmm-custom Time (libxsmm): 0.343667 ms

xsmm-custom No. of CPU cycles: 343666

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.34366666666666668

xsmm-custom avg execution time: 0.34366666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 16, 'a_rows': 8, 'a_size': 32, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.8593598448108632, 'speedup_best_over_ref': 0.8593598448108632, 'xsmm_custom_avg': 0.3436666666666667, 'xsmm_custom_best': 0.3436666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.29533333333333334, 'xsmm_reference_best': 0.29533333333333334, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m3.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 105600).

Output array: C (4, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.278000 ms

xsmm-reference Time (libxsmm): 0.277967 ms

xsmm-reference No. of CPU cycles: 277966

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.27799999999999997

xsmm-reference avg execution time: 0.27799999999999997

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 761286452 cleaned_data/example_mats/quad/p1/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m3.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 105600).

Output array: C (4, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 8

lda= 105600, ldb= 8, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.292533 ms

xsmm-custom Time (libxsmm): 0.292533 ms

xsmm-custom No. of CPU cycles: 292533

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.29253333333333331

xsmm-custom avg execution time: 0.29253333333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 16, 'a_rows': 4, 'a_size': 32, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9503190519598905, 'speedup_best_over_ref': 0.9503190519598905, 'xsmm_custom_avg': 0.2925333333333333, 'xsmm_custom_best': 0.2925333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.27799999999999997, 'xsmm_reference_best': 0.27799999999999997, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m6.txt...

Read matrix has 8 rows and 8 columns.

Input arrays: A (8, 8), B (8, 105600).

Output array: C (8, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.448933 ms

xsmm-reference Time (libxsmm): 0.448933 ms

xsmm-reference No. of CPU cycles: 448933

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.44893333333333335

xsmm-reference avg execution time: 0.44893333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1635464906 cleaned_data/example_mats/quad/p1/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m6.txt...

Read matrix has 8 rows and 8 columns.

Input arrays: A (8, 8), B (8, 105600).

Output array: C (8, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 8

lda= 105600, ldb= 8, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.466633 ms

xsmm-custom Time (libxsmm): 0.466633 ms

xsmm-custom No. of CPU cycles: 466633

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.46663333333333334

xsmm-custom avg execution time: 0.46663333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 16, 'a_rows': 8, 'a_size': 64, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9620687191942282, 'speedup_best_over_ref': 0.9620687191942282, 'xsmm_custom_avg': 0.46663333333333334, 'xsmm_custom_best': 0.46663333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.44893333333333335, 'xsmm_reference_best': 0.44893333333333335, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m132.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 105600).

Output array: C (4, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.286067 ms

xsmm-reference Time (libxsmm): 0.286067 ms

xsmm-reference No. of CPU cycles: 286066

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.28606666666666669

xsmm-reference avg execution time: 0.28606666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 2145369381 cleaned_data/example_mats/quad/p1/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m132.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 105600).

Output array: C (4, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 8

lda= 105600, ldb= 8, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.307933 ms

xsmm-custom Time (libxsmm): 0.307933 ms

xsmm-custom No. of CPU cycles: 307933

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.30793333333333334

xsmm-custom avg execution time: 0.30793333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 16, 'a_rows': 4, 'a_size': 32, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9289889586490583, 'speedup_best_over_ref': 0.9289889586490583, 'xsmm_custom_avg': 0.30793333333333334, 'xsmm_custom_best': 0.30793333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.2860666666666667, 'xsmm_reference_best': 0.2860666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m460.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 105600).

Output array: C (8, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.317700 ms

xsmm-reference Time (libxsmm): 0.317700 ms

xsmm-reference No. of CPU cycles: 317700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.31770000000000004

xsmm-reference avg execution time: 0.31770000000000004

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1923495267 cleaned_data/example_mats/quad/p1/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m460.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 105600).

Output array: C (8, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 4

lda= 105600, ldb= 4, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.347200 ms

xsmm-custom Time (libxsmm): 0.347200 ms

xsmm-custom No. of CPU cycles: 347200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.34720000000000001

xsmm-custom avg execution time: 0.34720000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 16, 'a_rows': 8, 'a_size': 32, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9150345622119817, 'speedup_best_over_ref': 0.9150345622119817, 'xsmm_custom_avg': 0.3472, 'xsmm_custom_best': 0.3472, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.31770000000000004, 'xsmm_reference_best': 0.31770000000000004, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 105600).

Output array: C (12, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.602033 ms

xsmm-reference Time (libxsmm): 0.602000 ms

xsmm-reference No. of CPU cycles: 602000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.60203333333333331

xsmm-reference avg execution time: 0.60203333333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 399791828 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 105600).

Output array: C (12, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 9

lda= 105600, ldb= 9, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.621633 ms

xsmm-custom Time (libxsmm): 0.621633 ms

xsmm-custom No. of CPU cycles: 621633

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.62163333333333337

xsmm-custom avg execution time: 0.62163333333333337

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 12, 'a_rows': 12, 'a_size': 108, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.968470159257869, 'speedup_best_over_ref': 0.968470159257869, 'xsmm_custom_avg': 0.6216333333333334, 'xsmm_custom_best': 0.6216333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6020333333333333, 'xsmm_reference_best': 0.6020333333333333, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 105600).

Output array: C (9, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.592933 ms

xsmm-reference Time (libxsmm): 0.592933 ms

xsmm-reference No. of CPU cycles: 592933

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.59293333333333331

xsmm-reference avg execution time: 0.59293333333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 181566801 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 105600).

Output array: C (9, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 12

lda= 105600, ldb= 12, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.603833 ms

xsmm-custom Time (libxsmm): 0.603867 ms

xsmm-custom No. of CPU cycles: 603866

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.60383333333333333

xsmm-custom avg execution time: 0.60383333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 9, 'a_size': 108, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.3333333333333333, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9819486613303892, 'speedup_best_over_ref': 0.9819486613303892, 'xsmm_custom_avg': 0.6038333333333333, 'xsmm_custom_best': 0.6038333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5929333333333333, 'xsmm_reference_best': 0.5929333333333333, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 105600).

Output array: C (18, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.707400 ms

xsmm-reference Time (libxsmm): 1.707433 ms

xsmm-reference No. of CPU cycles: 1707433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.7074

xsmm-reference avg execution time: 1.7074

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 299146866 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 105600).

Output array: C (18, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 12

lda= 105600, ldb= 12, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.805267 ms

xsmm-custom Time (libxsmm): 1.805267 ms

xsmm-custom No. of CPU cycles: 1805266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.8052666666666668

xsmm-custom avg execution time: 1.8052666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 18, 'a_size': 216, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9457882491967945, 'speedup_best_over_ref': 0.9457882491967945, 'xsmm_custom_avg': 1.8052666666666668, 'xsmm_custom_best': 1.8052666666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.7074, 'xsmm_reference_best': 1.7074, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 105600).

Output array: C (9, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.154767 ms

xsmm-reference Time (libxsmm): 1.154767 ms

xsmm-reference No. of CPU cycles: 1154766

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.1547666666666676

xsmm-reference avg execution time: 1.1547666666666676

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 2660837 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 105600).

Output array: C (9, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 18

lda= 105600, ldb= 18, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.231200 ms

xsmm-custom Time (libxsmm): 1.231233 ms

xsmm-custom No. of CPU cycles: 1231233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.2312000000000001

xsmm-custom avg execution time: 1.2312000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 48, 'a_rows': 9, 'a_size': 162, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9379196447909905, 'speedup_best_over_ref': 0.9379196447909905, 'xsmm_custom_avg': 1.2312, 'xsmm_custom_best': 1.2312, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.1547666666666676, 'xsmm_reference_best': 1.1547666666666676, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 105600).

Output array: C (18, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.394100 ms

xsmm-reference Time (libxsmm): 1.394100 ms

xsmm-reference No. of CPU cycles: 1394100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.3941000000000001

xsmm-reference avg execution time: 1.3941000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 503909126 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 105600).

Output array: C (18, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 9

lda= 105600, ldb= 9, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.441933 ms

xsmm-custom Time (libxsmm): 1.441933 ms

xsmm-custom No. of CPU cycles: 1441933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.4419333333333335

xsmm-custom avg execution time: 1.4419333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 48, 'a_rows': 18, 'a_size': 162, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9668269453049146, 'speedup_best_over_ref': 0.9668269453049146, 'xsmm_custom_avg': 1.4419333333333335, 'xsmm_custom_best': 1.4419333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.3941000000000001, 'xsmm_reference_best': 1.3941000000000001, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 105600).

Output array: C (12, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.623733 ms

xsmm-reference Time (libxsmm): 0.623733 ms

xsmm-reference No. of CPU cycles: 623733

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.62373333333333336

xsmm-reference avg execution time: 0.62373333333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1712766907 cleaned_data/example_mats/quad/p2/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 105600).

Output array: C (12, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 9

lda= 105600, ldb= 9, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.611933 ms

xsmm-custom Time (libxsmm): 0.611933 ms

xsmm-custom No. of CPU cycles: 611933

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.61193333333333333

xsmm-custom avg execution time: 0.61193333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 36, 'a_rows': 12, 'a_size': 108, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.3333333333333333, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0192831463122345, 'speedup_best_over_ref': 1.0192831463122345, 'xsmm_custom_avg': 0.6119333333333333, 'xsmm_custom_best': 0.6119333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6237333333333334, 'xsmm_reference_best': 0.6237333333333334, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 105600).

Output array: C (9, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.581933 ms

xsmm-reference Time (libxsmm): 0.581933 ms

xsmm-reference No. of CPU cycles: 581933

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.5819333333333333

xsmm-reference avg execution time: 0.5819333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1717924630 cleaned_data/example_mats/quad/p2/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 105600).

Output array: C (9, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 12

lda= 105600, ldb= 12, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.610300 ms

xsmm-custom Time (libxsmm): 0.610300 ms

xsmm-custom No. of CPU cycles: 610300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.61030000000000006

xsmm-custom avg execution time: 0.61030000000000006

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 9, 'a_size': 108, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.3333333333333333, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.953520126713638, 'speedup_best_over_ref': 0.953520126713638, 'xsmm_custom_avg': 0.6103000000000001, 'xsmm_custom_best': 0.6103000000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5819333333333333, 'xsmm_reference_best': 0.5819333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 105600).

Output array: C (18, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.754167 ms

xsmm-reference Time (libxsmm): 1.754200 ms

xsmm-reference No. of CPU cycles: 1754200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.7541666666666667

xsmm-reference avg execution time: 1.7541666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 967009631 cleaned_data/example_mats/quad/p2/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 105600).

Output array: C (18, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 12

lda= 105600, ldb= 12, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.837000 ms

xsmm-custom Time (libxsmm): 1.837000 ms

xsmm-custom No. of CPU cycles: 1837000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.837

xsmm-custom avg execution time: 1.837

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 18, 'a_size': 216, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9549083650880058, 'speedup_best_over_ref': 0.9549083650880058, 'xsmm_custom_avg': 1.837, 'xsmm_custom_best': 1.837, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.7541666666666667, 'xsmm_reference_best': 1.7541666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 105600).

Output array: C (9, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.150700 ms

xsmm-reference Time (libxsmm): 1.150700 ms

xsmm-reference No. of CPU cycles: 1150700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.1507000000000001

xsmm-reference avg execution time: 1.1507000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 367385587 cleaned_data/example_mats/quad/p2/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 105600).

Output array: C (9, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 18

lda= 105600, ldb= 18, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.198700 ms

xsmm-custom Time (libxsmm): 1.198700 ms

xsmm-custom No. of CPU cycles: 1198700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.1986999999999999

xsmm-custom avg execution time: 1.1986999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 48, 'a_rows': 9, 'a_size': 162, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9599566196713107, 'speedup_best_over_ref': 0.9599566196713107, 'xsmm_custom_avg': 1.1986999999999999, 'xsmm_custom_best': 1.1986999999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.1507, 'xsmm_reference_best': 1.1507, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 105600).

Output array: C (18, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.393067 ms

xsmm-reference Time (libxsmm): 1.393067 ms

xsmm-reference No. of CPU cycles: 1393066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.3930666666666667

xsmm-reference avg execution time: 1.3930666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 467028788 cleaned_data/example_mats/quad/p2/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 105600).

Output array: C (18, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 9

lda= 105600, ldb= 9, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.451533 ms

xsmm-custom Time (libxsmm): 1.451533 ms

xsmm-custom No. of CPU cycles: 1451533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.4515333333333333

xsmm-custom avg execution time: 1.4515333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 48, 'a_rows': 18, 'a_size': 162, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9597207550636109, 'speedup_best_over_ref': 0.9597207550636109, 'xsmm_custom_avg': 1.4515333333333333, 'xsmm_custom_best': 1.4515333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.3930666666666667, 'xsmm_reference_best': 1.3930666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 105600).

Output array: C (16, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.954200 ms

xsmm-reference Time (libxsmm): 1.954200 ms

xsmm-reference No. of CPU cycles: 1954200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.9541999999999999

xsmm-reference avg execution time: 1.9541999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1045043961 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 105600).

Output array: C (16, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 105600, ldb= 16, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.057467 ms

xsmm-custom Time (libxsmm): 2.057467 ms

xsmm-custom No. of CPU cycles: 2057466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.0574666666666666

xsmm-custom avg execution time: 2.0574666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 16, 'a_rows': 16, 'a_size': 256, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9498088263884389, 'speedup_best_over_ref': 0.9498088263884389, 'xsmm_custom_avg': 2.0574666666666666, 'xsmm_custom_best': 2.0574666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.9542, 'xsmm_reference_best': 1.9542, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 105600).

Output array: C (16, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.974067 ms

xsmm-reference Time (libxsmm): 1.974033 ms

xsmm-reference No. of CPU cycles: 1974033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.9740666666666666

xsmm-reference avg execution time: 1.9740666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 649799433 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 105600).

Output array: C (16, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 105600, ldb= 16, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.044533 ms

xsmm-custom Time (libxsmm): 2.044533 ms

xsmm-custom No. of CPU cycles: 2044533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.0445333333333333

xsmm-custom avg execution time: 2.0445333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 16, 'a_size': 256, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9655341072127299, 'speedup_best_over_ref': 0.9655341072127299, 'xsmm_custom_avg': 2.0445333333333333, 'xsmm_custom_best': 2.0445333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.9740666666666666, 'xsmm_reference_best': 1.9740666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 105600).

Output array: C (32, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.593333 ms

xsmm-reference Time (libxsmm): 3.593333 ms

xsmm-reference No. of CPU cycles: 3593333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.5933333333333333

xsmm-reference avg execution time: 3.5933333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1064518929 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 105600).

Output array: C (32, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 105600, ldb= 16, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.656100 ms

xsmm-custom Time (libxsmm): 3.656067 ms

xsmm-custom No. of CPU cycles: 3656066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.6561000000000003

xsmm-custom avg execution time: 3.6561000000000003

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 32, 'a_size': 512, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.125, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9828323441189609, 'speedup_best_over_ref': 0.9828323441189609, 'xsmm_custom_avg': 3.6561000000000003, 'xsmm_custom_best': 3.6561000000000003, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.5933333333333333, 'xsmm_reference_best': 3.5933333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 105600).

Output array: C (16, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.580700 ms

xsmm-reference Time (libxsmm): 3.580700 ms

xsmm-reference No. of CPU cycles: 3580700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.5807000000000002

xsmm-reference avg execution time: 3.5807000000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 2055474963 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 105600).

Output array: C (16, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 32

lda= 105600, ldb= 32, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.784100 ms

xsmm-custom Time (libxsmm): 3.784100 ms

xsmm-custom No. of CPU cycles: 3784100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.7841

xsmm-custom avg execution time: 3.7841

Freeing A

Freeing B

Freeing C

{'a_cols': 32, 'a_nonzero': 112, 'a_rows': 16, 'a_size': 512, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.21875, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9462487777807141, 'speedup_best_over_ref': 0.9462487777807141, 'xsmm_custom_avg': 3.7841, 'xsmm_custom_best': 3.7841, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.5807, 'xsmm_reference_best': 3.5807, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 105600).

Output array: C (32, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.580467 ms

xsmm-reference Time (libxsmm): 3.580467 ms

xsmm-reference No. of CPU cycles: 3580466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.5804666666666667

xsmm-reference avg execution time: 3.5804666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1333392475 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 105600).

Output array: C (32, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 105600, ldb= 16, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.646600 ms

xsmm-custom Time (libxsmm): 3.646600 ms

xsmm-custom No. of CPU cycles: 3646600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.6466000000000007

xsmm-custom avg execution time: 3.6466000000000007

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 112, 'a_rows': 32, 'a_size': 512, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.21875, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9818643850893067, 'speedup_best_over_ref': 0.9818643850893067, 'xsmm_custom_avg': 3.6466000000000007, 'xsmm_custom_best': 3.6466000000000007, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.5804666666666667, 'xsmm_reference_best': 3.5804666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 105600).

Output array: C (16, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.962000 ms

xsmm-reference Time (libxsmm): 1.962000 ms

xsmm-reference No. of CPU cycles: 1962000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.962

xsmm-reference avg execution time: 1.962

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1933560073 cleaned_data/example_mats/quad/p3/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 105600).

Output array: C (16, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 105600, ldb= 16, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.089667 ms

xsmm-custom Time (libxsmm): 2.089667 ms

xsmm-custom No. of CPU cycles: 2089666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.0896666666666666

xsmm-custom avg execution time: 2.0896666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 16, 'a_size': 256, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9389057265911629, 'speedup_best_over_ref': 0.9389057265911629, 'xsmm_custom_avg': 2.0896666666666666, 'xsmm_custom_best': 2.0896666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.962, 'xsmm_reference_best': 1.962, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 105600).

Output array: C (16, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.940700 ms

xsmm-reference Time (libxsmm): 1.940700 ms

xsmm-reference No. of CPU cycles: 1940700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.9406999999999999

xsmm-reference avg execution time: 1.9406999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1854000359 cleaned_data/example_mats/quad/p3/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 105600).

Output array: C (16, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 105600, ldb= 16, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.079133 ms

xsmm-custom Time (libxsmm): 2.079100 ms

xsmm-custom No. of CPU cycles: 2079100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.0791333333333335

xsmm-custom avg execution time: 2.0791333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 16, 'a_size': 256, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.933417770224773, 'speedup_best_over_ref': 0.933417770224773, 'xsmm_custom_avg': 2.0791333333333335, 'xsmm_custom_best': 2.0791333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.9406999999999999, 'xsmm_reference_best': 1.9406999999999999, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 105600).

Output array: C (32, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.572700 ms

xsmm-reference Time (libxsmm): 3.572700 ms

xsmm-reference No. of CPU cycles: 3572700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.5726999999999998

xsmm-reference avg execution time: 3.5726999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1276120434 cleaned_data/example_mats/quad/p3/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 105600).

Output array: C (32, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 105600, ldb= 16, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.162233 ms

xsmm-custom Time (libxsmm): 4.162233 ms

xsmm-custom No. of CPU cycles: 4162233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.1622333333333339

xsmm-custom avg execution time: 4.1622333333333339

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 32, 'a_size': 512, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.125, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.8583612964193901, 'speedup_best_over_ref': 0.8583612964193901, 'xsmm_custom_avg': 4.162233333333334, 'xsmm_custom_best': 4.162233333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.5726999999999998, 'xsmm_reference_best': 3.5726999999999998, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 105600).

Output array: C (16, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.599767 ms

xsmm-reference Time (libxsmm): 3.599733 ms

xsmm-reference No. of CPU cycles: 3599733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.5997666666666666

xsmm-reference avg execution time: 3.5997666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 447334731 cleaned_data/example_mats/quad/p3/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 105600).

Output array: C (16, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 32

lda= 105600, ldb= 32, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.807067 ms

xsmm-custom Time (libxsmm): 3.807067 ms

xsmm-custom No. of CPU cycles: 3807066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.8070666666666666

xsmm-custom avg execution time: 3.8070666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 32, 'a_nonzero': 128, 'a_rows': 16, 'a_size': 512, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9455486288656183, 'speedup_best_over_ref': 0.9455486288656183, 'xsmm_custom_avg': 3.8070666666666666, 'xsmm_custom_best': 3.8070666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.5997666666666666, 'xsmm_reference_best': 3.5997666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 105600).

Output array: C (32, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.583500 ms

xsmm-reference Time (libxsmm): 3.583500 ms

xsmm-reference No. of CPU cycles: 3583500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.5834999999999999

xsmm-reference avg execution time: 3.5834999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 201251777 cleaned_data/example_mats/quad/p3/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 105600).

Output array: C (32, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 105600, ldb= 16, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.652467 ms

xsmm-custom Time (libxsmm): 3.652433 ms

xsmm-custom No. of CPU cycles: 3652433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.6524666666666668

xsmm-custom avg execution time: 3.6524666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 128, 'a_rows': 32, 'a_size': 512, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9811177834157737, 'speedup_best_over_ref': 0.9811177834157737, 'xsmm_custom_avg': 3.6524666666666668, 'xsmm_custom_best': 3.6524666666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.5835, 'xsmm_reference_best': 3.5835, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 105600).

Output array: C (20, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.697300 ms

xsmm-reference Time (libxsmm): 3.697300 ms

xsmm-reference No. of CPU cycles: 3697300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.6972999999999998

xsmm-reference avg execution time: 3.6972999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 219905564 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 105600).

Output array: C (20, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 25

lda= 105600, ldb= 25, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.727933 ms

xsmm-custom Time (libxsmm): 3.727900 ms

xsmm-custom No. of CPU cycles: 3727900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.7279333333333331

xsmm-custom avg execution time: 3.7279333333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 20, 'a_rows': 20, 'a_size': 500, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9917827572023821, 'speedup_best_over_ref': 0.9917827572023821, 'xsmm_custom_avg': 3.727933333333333, 'xsmm_custom_best': 3.727933333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.6973, 'xsmm_reference_best': 3.6973, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 105600).

Output array: C (25, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.494200 ms

xsmm-reference Time (libxsmm): 3.494167 ms

xsmm-reference No. of CPU cycles: 3494166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.4941999999999998

xsmm-reference avg execution time: 3.4941999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1333246112 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 105600).

Output array: C (25, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 20

lda= 105600, ldb= 20, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.587533 ms

xsmm-custom Time (libxsmm): 3.587533 ms

xsmm-custom No. of CPU cycles: 3587533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.5875333333333335

xsmm-custom avg execution time: 3.5875333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 25, 'a_size': 500, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9739839815657926, 'speedup_best_over_ref': 0.9739839815657926, 'xsmm_custom_avg': 3.5875333333333335, 'xsmm_custom_best': 3.5875333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.4941999999999998, 'xsmm_reference_best': 3.4941999999999998, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 105600).

Output array: C (50, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.380233 ms

xsmm-reference Time (libxsmm): 6.380233 ms

xsmm-reference No. of CPU cycles: 6380233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.3802333333333348

xsmm-reference avg execution time: 6.3802333333333348

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1401124691 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 105600).

Output array: C (50, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 20

lda= 105600, ldb= 20, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.466100 ms

xsmm-custom Time (libxsmm): 6.466100 ms

xsmm-custom No. of CPU cycles: 6466100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.4661

xsmm-custom avg execution time: 6.4661

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 50, 'a_size': 1000, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9867204858157675, 'speedup_best_over_ref': 0.9867204858157675, 'xsmm_custom_avg': 6.4661, 'xsmm_custom_best': 6.4661, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.380233333333335, 'xsmm_reference_best': 6.380233333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 105600).

Output array: C (25, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.228367 ms

xsmm-reference Time (libxsmm): 8.228333 ms

xsmm-reference No. of CPU cycles: 8228333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.2283666666666662

xsmm-reference avg execution time: 8.2283666666666662

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1018472861 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 105600).

Output array: C (25, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 50

lda= 105600, ldb= 50, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.237967 ms

xsmm-custom Time (libxsmm): 8.237933 ms

xsmm-custom No. of CPU cycles: 8237933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.2379666666666669

xsmm-custom avg execution time: 8.2379666666666669

Freeing A

Freeing B

Freeing C

{'a_cols': 50, 'a_nonzero': 220, 'a_rows': 25, 'a_size': 1250, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.176, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9988346638935982, 'speedup_best_over_ref': 0.9988346638935982, 'xsmm_custom_avg': 8.237966666666667, 'xsmm_custom_best': 8.237966666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.228366666666666, 'xsmm_reference_best': 8.228366666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 105600).

Output array: C (50, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 7.944300 ms

xsmm-reference Time (libxsmm): 7.944267 ms

xsmm-reference No. of CPU cycles: 7944266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 7.9443000000000001

xsmm-reference avg execution time: 7.9443000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1710841373 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 105600).

Output array: C (50, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 25

lda= 105600, ldb= 25, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 7.959733 ms

xsmm-custom Time (libxsmm): 7.959733 ms

xsmm-custom No. of CPU cycles: 7959733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 7.9597333333333342

xsmm-custom avg execution time: 7.9597333333333342

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 220, 'a_rows': 50, 'a_size': 1250, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.176, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9980610740728332, 'speedup_best_over_ref': 0.9980610740728332, 'xsmm_custom_avg': 7.959733333333334, 'xsmm_custom_best': 7.959733333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 7.9443, 'xsmm_reference_best': 7.9443, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 105600).

Output array: C (20, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.680633 ms

xsmm-reference Time (libxsmm): 3.680600 ms

xsmm-reference No. of CPU cycles: 3680600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.6806333333333332

xsmm-reference avg execution time: 3.6806333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1283756875 cleaned_data/example_mats/quad/p4/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 105600).

Output array: C (20, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 25

lda= 105600, ldb= 25, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.723333 ms

xsmm-custom Time (libxsmm): 3.723333 ms

xsmm-custom No. of CPU cycles: 3723333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.7233333333333336

xsmm-custom avg execution time: 3.7233333333333336

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 100, 'a_rows': 20, 'a_size': 500, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9885317815577438, 'speedup_best_over_ref': 0.9885317815577438, 'xsmm_custom_avg': 3.7233333333333336, 'xsmm_custom_best': 3.7233333333333336, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.680633333333333, 'xsmm_reference_best': 3.680633333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 105600).

Output array: C (25, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.448367 ms

xsmm-reference Time (libxsmm): 3.448367 ms

xsmm-reference No. of CPU cycles: 3448366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.4483666666666664

xsmm-reference avg execution time: 3.4483666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 384323358 cleaned_data/example_mats/quad/p4/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 105600).

Output array: C (25, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 20

lda= 105600, ldb= 20, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.594633 ms

xsmm-custom Time (libxsmm): 3.594600 ms

xsmm-custom No. of CPU cycles: 3594600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.5946333333333333

xsmm-custom avg execution time: 3.5946333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 25, 'a_size': 500, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9593097116998488, 'speedup_best_over_ref': 0.9593097116998488, 'xsmm_custom_avg': 3.5946333333333333, 'xsmm_custom_best': 3.5946333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.4483666666666664, 'xsmm_reference_best': 3.4483666666666664, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 105600).

Output array: C (50, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.373167 ms

xsmm-reference Time (libxsmm): 6.373133 ms

xsmm-reference No. of CPU cycles: 6373133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.3731666666666662

xsmm-reference avg execution time: 6.3731666666666662

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1378333711 cleaned_data/example_mats/quad/p4/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 105600).

Output array: C (50, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 20

lda= 105600, ldb= 20, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.459433 ms

xsmm-custom Time (libxsmm): 6.459433 ms

xsmm-custom No. of CPU cycles: 6459433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.4594333333333331

xsmm-custom avg execution time: 6.4594333333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 50, 'a_size': 1000, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9866448553278667, 'speedup_best_over_ref': 0.9866448553278667, 'xsmm_custom_avg': 6.459433333333333, 'xsmm_custom_best': 6.459433333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.373166666666666, 'xsmm_reference_best': 6.373166666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 105600).

Output array: C (25, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.327400 ms

xsmm-reference Time (libxsmm): 8.327367 ms

xsmm-reference No. of CPU cycles: 8327366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.3274000000000008

xsmm-reference avg execution time: 8.3274000000000008

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 200733016 cleaned_data/example_mats/quad/p4/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 105600).

Output array: C (25, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 50

lda= 105600, ldb= 50, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.234833 ms

xsmm-custom Time (libxsmm): 8.234833 ms

xsmm-custom No. of CPU cycles: 8234833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.2348333333333326

xsmm-custom avg execution time: 8.2348333333333326

Freeing A

Freeing B

Freeing C

{'a_cols': 50, 'a_nonzero': 240, 'a_rows': 25, 'a_size': 1250, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.192, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0112408670485136, 'speedup_best_over_ref': 1.0112408670485136, 'xsmm_custom_avg': 8.234833333333333, 'xsmm_custom_best': 8.234833333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.3274, 'xsmm_reference_best': 8.3274, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 105600).

Output array: C (50, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 7.953667 ms

xsmm-reference Time (libxsmm): 7.953667 ms

xsmm-reference No. of CPU cycles: 7953666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 7.9536666666666669

xsmm-reference avg execution time: 7.9536666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1717406092 cleaned_data/example_mats/quad/p4/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 105600).

Output array: C (50, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 25

lda= 105600, ldb= 25, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.042667 ms

xsmm-custom Time (libxsmm): 8.042667 ms

xsmm-custom No. of CPU cycles: 8042666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.0426666666666655

xsmm-custom avg execution time: 8.0426666666666655

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 240, 'a_rows': 50, 'a_size': 1250, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.192, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9889340185676394, 'speedup_best_over_ref': 0.9889340185676394, 'xsmm_custom_avg': 8.042666666666666, 'xsmm_custom_best': 8.042666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 7.953666666666667, 'xsmm_reference_best': 7.953666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 105600).

Output array: C (24, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.348367 ms

xsmm-reference Time (libxsmm): 5.348333 ms

xsmm-reference No. of CPU cycles: 5348333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.3483666666666663

xsmm-reference avg execution time: 5.3483666666666663

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 822378934 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 105600).

Output array: C (24, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 36

lda= 105600, ldb= 36, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.453467 ms

xsmm-custom Time (libxsmm): 5.453433 ms

xsmm-custom No. of CPU cycles: 5453433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.4534666666666674

xsmm-custom avg execution time: 5.4534666666666674

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 24, 'a_rows': 24, 'a_size': 864, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9807278550646682, 'speedup_best_over_ref': 0.9807278550646682, 'xsmm_custom_avg': 5.453466666666667, 'xsmm_custom_best': 5.453466666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.348366666666666, 'xsmm_reference_best': 5.348366666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 105600).

Output array: C (36, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.531433 ms

xsmm-reference Time (libxsmm): 5.531467 ms

xsmm-reference No. of CPU cycles: 5531466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.5314333333333341

xsmm-reference avg execution time: 5.5314333333333341

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 670823778 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 105600).

Output array: C (36, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 24

lda= 105600, ldb= 24, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.748500 ms

xsmm-custom Time (libxsmm): 5.748500 ms

xsmm-custom No. of CPU cycles: 5748500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.7485000000000008

xsmm-custom avg execution time: 5.7485000000000008

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 36, 'a_size': 864, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9622394247774781, 'speedup_best_over_ref': 0.9622394247774781, 'xsmm_custom_avg': 5.748500000000001, 'xsmm_custom_best': 5.748500000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.531433333333334, 'xsmm_reference_best': 5.531433333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 105600).

Output array: C (72, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 10.621467 ms

xsmm-reference Time (libxsmm): 10.621467 ms

xsmm-reference No. of CPU cycles: 10621466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 10.621466666666667

xsmm-reference avg execution time: 10.621466666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1429585416 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 105600).

Output array: C (72, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 24

lda= 105600, ldb= 24, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 10.726800 ms

xsmm-custom Time (libxsmm): 10.726800 ms

xsmm-custom No. of CPU cycles: 10726800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 10.726799999999999

xsmm-custom avg execution time: 10.726799999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 72, 'a_size': 1728, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.08333333333333333, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9901803582304758, 'speedup_best_over_ref': 0.9901803582304758, 'xsmm_custom_avg': 10.726799999999999, 'xsmm_custom_best': 10.726799999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 10.621466666666667, 'xsmm_reference_best': 10.621466666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 105600).

Output array: C (36, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 14.657900 ms

xsmm-reference Time (libxsmm): 14.657900 ms

xsmm-reference No. of CPU cycles: 14657900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 14.657900000000001

xsmm-reference avg execution time: 14.657900000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 2133873567 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 105600).

Output array: C (36, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 72

lda= 105600, ldb= 72, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 14.625533 ms

xsmm-custom Time (libxsmm): 14.625533 ms

xsmm-custom No. of CPU cycles: 14625533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 14.625533333333333

xsmm-custom avg execution time: 14.625533333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 72, 'a_nonzero': 384, 'a_rows': 36, 'a_size': 2592, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14814814814814814, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0022130247102101, 'speedup_best_over_ref': 1.0022130247102101, 'xsmm_custom_avg': 14.625533333333333, 'xsmm_custom_best': 14.625533333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 14.657900000000001, 'xsmm_reference_best': 14.657900000000001, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 105600).

Output array: C (72, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 14.284633 ms

xsmm-reference Time (libxsmm): 14.284600 ms

xsmm-reference No. of CPU cycles: 14284600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 14.284633333333334

xsmm-reference avg execution time: 14.284633333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1163035119 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 105600).

Output array: C (72, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 36

lda= 105600, ldb= 36, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 14.345433 ms

xsmm-custom Time (libxsmm): 14.345400 ms

xsmm-custom No. of CPU cycles: 14345400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 14.345433333333336

xsmm-custom avg execution time: 14.345433333333336

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 384, 'a_rows': 72, 'a_size': 2592, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14814814814814814, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9957617174338871, 'speedup_best_over_ref': 0.9957617174338871, 'xsmm_custom_avg': 14.345433333333336, 'xsmm_custom_best': 14.345433333333336, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 14.284633333333334, 'xsmm_reference_best': 14.284633333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 105600).

Output array: C (24, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.340233 ms

xsmm-reference Time (libxsmm): 5.340233 ms

xsmm-reference No. of CPU cycles: 5340233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.3402333333333329

xsmm-reference avg execution time: 5.3402333333333329

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 833734618 cleaned_data/example_mats/quad/p5/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 105600).

Output array: C (24, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 36

lda= 105600, ldb= 36, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.426033 ms

xsmm-custom Time (libxsmm): 5.426000 ms

xsmm-custom No. of CPU cycles: 5426000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.4260333333333319

xsmm-custom avg execution time: 5.4260333333333319

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 144, 'a_rows': 24, 'a_size': 864, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9841873437317625, 'speedup_best_over_ref': 0.9841873437317625, 'xsmm_custom_avg': 5.426033333333332, 'xsmm_custom_best': 5.426033333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.340233333333333, 'xsmm_reference_best': 5.340233333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 105600).

Output array: C (36, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.587833 ms

xsmm-reference Time (libxsmm): 5.587833 ms

xsmm-reference No. of CPU cycles: 5587833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.5878333333333332

xsmm-reference avg execution time: 5.5878333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 692488163 cleaned_data/example_mats/quad/p5/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 105600).

Output array: C (36, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 24

lda= 105600, ldb= 24, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.750733 ms

xsmm-custom Time (libxsmm): 5.750700 ms

xsmm-custom No. of CPU cycles: 5750700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.7507333333333328

xsmm-custom avg execution time: 5.7507333333333328

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 36, 'a_size': 864, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9716731779135416, 'speedup_best_over_ref': 0.9716731779135416, 'xsmm_custom_avg': 5.750733333333333, 'xsmm_custom_best': 5.750733333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.587833333333333, 'xsmm_reference_best': 5.587833333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 105600).

Output array: C (72, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 10.604400 ms

xsmm-reference Time (libxsmm): 10.604400 ms

xsmm-reference No. of CPU cycles: 10604400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 10.6044

xsmm-reference avg execution time: 10.6044

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 555260013 cleaned_data/example_mats/quad/p5/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 105600).

Output array: C (72, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 24

lda= 105600, ldb= 24, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 10.724200 ms

xsmm-custom Time (libxsmm): 10.724167 ms

xsmm-custom No. of CPU cycles: 10724166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 10.7242

xsmm-custom avg execution time: 10.7242

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 72, 'a_size': 1728, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.08333333333333333, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9888290035620373, 'speedup_best_over_ref': 0.9888290035620373, 'xsmm_custom_avg': 10.7242, 'xsmm_custom_best': 10.7242, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 10.6044, 'xsmm_reference_best': 10.6044, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 105600).

Output array: C (36, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 14.542333 ms

xsmm-reference Time (libxsmm): 14.542300 ms

xsmm-reference No. of CPU cycles: 14542300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 14.542333333333334

xsmm-reference avg execution time: 14.542333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 799734615 cleaned_data/example_mats/quad/p5/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 105600).

Output array: C (36, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 72

lda= 105600, ldb= 72, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 14.655067 ms

xsmm-custom Time (libxsmm): 14.655033 ms

xsmm-custom No. of CPU cycles: 14655033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 14.655066666666668

xsmm-custom avg execution time: 14.655066666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 72, 'a_nonzero': 432, 'a_rows': 36, 'a_size': 2592, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9923075523368482, 'speedup_best_over_ref': 0.9923075523368482, 'xsmm_custom_avg': 14.655066666666668, 'xsmm_custom_best': 14.655066666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 14.542333333333334, 'xsmm_reference_best': 14.542333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 105600).

Output array: C (72, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 14.260833 ms

xsmm-reference Time (libxsmm): 14.260800 ms

xsmm-reference No. of CPU cycles: 14260800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 14.260833333333334

xsmm-reference avg execution time: 14.260833333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 534440591 cleaned_data/example_mats/quad/p5/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 105600).

Output array: C (72, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 36

lda= 105600, ldb= 36, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 14.395367 ms

xsmm-custom Time (libxsmm): 14.395400 ms

xsmm-custom No. of CPU cycles: 14395400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 14.395366666666666

xsmm-custom avg execution time: 14.395366666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 432, 'a_rows': 72, 'a_size': 2592, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9906544003741946, 'speedup_best_over_ref': 0.9906544003741946, 'xsmm_custom_avg': 14.395366666666666, 'xsmm_custom_best': 14.395366666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 14.260833333333334, 'xsmm_reference_best': 14.260833333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 105600).

Output array: C (28, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.515267 ms

xsmm-reference Time (libxsmm): 8.515267 ms

xsmm-reference No. of CPU cycles: 8515266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.5152666666666654

xsmm-reference avg execution time: 8.5152666666666654

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 735375693 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 105600).

Output array: C (28, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 49

lda= 105600, ldb= 49, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.486367 ms

xsmm-custom Time (libxsmm): 8.486367 ms

xsmm-custom No. of CPU cycles: 8486366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.4863666666666671

xsmm-custom avg execution time: 8.4863666666666671

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 28, 'a_rows': 28, 'a_size': 1372, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0034054620941038, 'speedup_best_over_ref': 1.0034054620941038, 'xsmm_custom_avg': 8.486366666666667, 'xsmm_custom_best': 8.486366666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.515266666666665, 'xsmm_reference_best': 8.515266666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 105600).

Output array: C (49, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.435200 ms

xsmm-reference Time (libxsmm): 8.435167 ms

xsmm-reference No. of CPU cycles: 8435166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.4352

xsmm-reference avg execution time: 8.4352

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 628330460 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 105600).

Output array: C (49, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 28

lda= 105600, ldb= 28, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.499867 ms

xsmm-custom Time (libxsmm): 8.499833 ms

xsmm-custom No. of CPU cycles: 8499833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.4998666666666658

xsmm-custom avg execution time: 8.4998666666666658

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 49, 'a_size': 1372, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14285714285714285, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9923920375221573, 'speedup_best_over_ref': 0.9923920375221573, 'xsmm_custom_avg': 8.499866666666666, 'xsmm_custom_best': 8.499866666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.4352, 'xsmm_reference_best': 8.4352, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 105600).

Output array: C (98, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 16.612033 ms

xsmm-reference Time (libxsmm): 16.612033 ms

xsmm-reference No. of CPU cycles: 16612033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 16.612033333333333

xsmm-reference avg execution time: 16.612033333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1249766624 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 105600).

Output array: C (98, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 28

lda= 105600, ldb= 28, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 16.458700 ms

xsmm-custom Time (libxsmm): 16.458700 ms

xsmm-custom No. of CPU cycles: 16458700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 16.4587

xsmm-custom avg execution time: 16.4587

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 98, 'a_size': 2744, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.07142857142857142, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0093162481443452, 'speedup_best_over_ref': 1.0093162481443452, 'xsmm_custom_avg': 16.4587, 'xsmm_custom_best': 16.4587, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 16.612033333333333, 'xsmm_reference_best': 16.612033333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 105600).

Output array: C (49, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 26.429567 ms

xsmm-reference Time (libxsmm): 26.429533 ms

xsmm-reference No. of CPU cycles: 26429533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 26.429566666666666

xsmm-reference avg execution time: 26.429566666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 48027884 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 105600).

Output array: C (49, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 98

lda= 105600, ldb= 98, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 27.153933 ms

xsmm-custom Time (libxsmm): 27.153900 ms

xsmm-custom No. of CPU cycles: 27153900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 27.153933333333331

xsmm-custom avg execution time: 27.153933333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 98, 'a_nonzero': 616, 'a_rows': 49, 'a_size': 4802, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1282798833819242, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9733236928228938, 'speedup_best_over_ref': 0.9733236928228938, 'xsmm_custom_avg': 27.15393333333333, 'xsmm_custom_best': 27.15393333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 26.429566666666666, 'xsmm_reference_best': 26.429566666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 105600).

Output array: C (98, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 31.290633 ms

xsmm-reference Time (libxsmm): 31.290600 ms

xsmm-reference No. of CPU cycles: 31290600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 31.290633333333336

xsmm-reference avg execution time: 31.290633333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1145519594 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 105600).

Output array: C (98, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 49

lda= 105600, ldb= 49, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 30.195433 ms

xsmm-custom Time (libxsmm): 30.195400 ms

xsmm-custom No. of CPU cycles: 30195400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 30.195433333333334

xsmm-custom avg execution time: 30.195433333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 616, 'a_rows': 98, 'a_size': 4802, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1282798833819242, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.036270385256932, 'speedup_best_over_ref': 1.036270385256932, 'xsmm_custom_avg': 30.195433333333334, 'xsmm_custom_best': 30.195433333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 31.290633333333336, 'xsmm_reference_best': 31.290633333333336, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 105600).

Output array: C (28, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.428100 ms

xsmm-reference Time (libxsmm): 8.428100 ms

xsmm-reference No. of CPU cycles: 8428100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.4280999999999988

xsmm-reference avg execution time: 8.4280999999999988

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1649040932 cleaned_data/example_mats/quad/p6/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 105600).

Output array: C (28, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 49

lda= 105600, ldb= 49, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.471167 ms

xsmm-custom Time (libxsmm): 8.471133 ms

xsmm-custom No. of CPU cycles: 8471133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.471166666666667

xsmm-custom avg execution time: 8.471166666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 196, 'a_rows': 28, 'a_size': 1372, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14285714285714285, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.994916087906034, 'speedup_best_over_ref': 0.994916087906034, 'xsmm_custom_avg': 8.471166666666667, 'xsmm_custom_best': 8.471166666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.428099999999999, 'xsmm_reference_best': 8.428099999999999, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 105600).

Output array: C (49, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.381967 ms

xsmm-reference Time (libxsmm): 8.381900 ms

xsmm-reference No. of CPU cycles: 8381900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.381966666666667

xsmm-reference avg execution time: 8.381966666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1730486918 cleaned_data/example_mats/quad/p6/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 105600).

Output array: C (49, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 28

lda= 105600, ldb= 28, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.600100 ms

xsmm-custom Time (libxsmm): 8.600133 ms

xsmm-custom No. of CPU cycles: 8600133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.6000999999999994

xsmm-custom avg execution time: 8.6000999999999994

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 49, 'a_size': 1372, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14285714285714285, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9746359538454981, 'speedup_best_over_ref': 0.9746359538454981, 'xsmm_custom_avg': 8.6001, 'xsmm_custom_best': 8.6001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.381966666666667, 'xsmm_reference_best': 8.381966666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 105600).

Output array: C (98, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 16.554300 ms

xsmm-reference Time (libxsmm): 16.554300 ms

xsmm-reference No. of CPU cycles: 16554300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 16.554300000000001

xsmm-reference avg execution time: 16.554300000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 964922834 cleaned_data/example_mats/quad/p6/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 105600).

Output array: C (98, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 28

lda= 105600, ldb= 28, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 16.532333 ms

xsmm-custom Time (libxsmm): 16.532300 ms

xsmm-custom No. of CPU cycles: 16532300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 16.532333333333334

xsmm-custom avg execution time: 16.532333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 98, 'a_size': 2744, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.07142857142857142, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0013287093977459, 'speedup_best_over_ref': 1.0013287093977459, 'xsmm_custom_avg': 16.532333333333334, 'xsmm_custom_best': 16.532333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 16.5543, 'xsmm_reference_best': 16.5543, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 105600).

Output array: C (49, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 26.480300 ms

xsmm-reference Time (libxsmm): 26.480300 ms

xsmm-reference No. of CPU cycles: 26480300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 26.4803

xsmm-reference avg execution time: 26.4803

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 2100495424 cleaned_data/example_mats/quad/p6/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 105600).

Output array: C (49, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 98

lda= 105600, ldb= 98, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 26.850000 ms

xsmm-custom Time (libxsmm): 26.849967 ms

xsmm-custom No. of CPU cycles: 26849966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 26.850000000000001

xsmm-custom avg execution time: 26.850000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 98, 'a_nonzero': 672, 'a_rows': 49, 'a_size': 4802, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.13994169096209913, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9862309124767225, 'speedup_best_over_ref': 0.9862309124767225, 'xsmm_custom_avg': 26.85, 'xsmm_custom_best': 26.85, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 26.4803, 'xsmm_reference_best': 26.4803, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 105600).

Output array: C (98, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 28.381833 ms

xsmm-reference Time (libxsmm): 28.381833 ms

xsmm-reference No. of CPU cycles: 28381833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 28.381833333333336

xsmm-reference avg execution time: 28.381833333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1494234676 cleaned_data/example_mats/quad/p6/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 105600).

Output array: C (98, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 49

lda= 105600, ldb= 49, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 30.737233 ms

xsmm-custom Time (libxsmm): 30.737233 ms

xsmm-custom No. of CPU cycles: 30737233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 30.737233333333332

xsmm-custom avg execution time: 30.737233333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 672, 'a_rows': 98, 'a_size': 4802, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.13994169096209913, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9233698109892781, 'speedup_best_over_ref': 0.9233698109892781, 'xsmm_custom_avg': 30.737233333333332, 'xsmm_custom_best': 30.737233333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 28.381833333333336, 'xsmm_reference_best': 28.381833333333336, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m0.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 105600).

Output array: C (12, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.429733 ms

xsmm-reference Time (libxsmm): 0.429733 ms

xsmm-reference No. of CPU cycles: 429733

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.4297333333333333

xsmm-reference avg execution time: 0.4297333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1656526563 cleaned_data/example_mats/tet/p1/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m0.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 105600).

Output array: C (12, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 4

lda= 105600, ldb= 4, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.446167 ms

xsmm-custom Time (libxsmm): 0.446167 ms

xsmm-custom No. of CPU cycles: 446166

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.44616666666666666

xsmm-custom avg execution time: 0.44616666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 48, 'a_rows': 12, 'a_size': 48, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9631677250653716, 'speedup_best_over_ref': 0.9631677250653716, 'xsmm_custom_avg': 0.44616666666666666, 'xsmm_custom_best': 0.44616666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4297333333333333, 'xsmm_reference_best': 0.4297333333333333, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m3.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 105600).

Output array: C (4, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.343167 ms

xsmm-reference Time (libxsmm): 0.343167 ms

xsmm-reference No. of CPU cycles: 343166

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.34316666666666668

xsmm-reference avg execution time: 0.34316666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1870674364 cleaned_data/example_mats/tet/p1/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m3.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 105600).

Output array: C (4, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 12

lda= 105600, ldb= 12, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.363667 ms

xsmm-custom Time (libxsmm): 0.363667 ms

xsmm-custom No. of CPU cycles: 363666

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.36366666666666669

xsmm-custom avg execution time: 0.36366666666666669

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 48, 'a_rows': 4, 'a_size': 48, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9436296975252062, 'speedup_best_over_ref': 0.9436296975252062, 'xsmm_custom_avg': 0.3636666666666667, 'xsmm_custom_best': 0.3636666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.3431666666666667, 'xsmm_reference_best': 0.3431666666666667, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m6.txt...

Read matrix has 12 rows and 12 columns.

Input arrays: A (12, 12), B (12, 105600).

Output array: C (12, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.850067 ms

xsmm-reference Time (libxsmm): 0.850067 ms

xsmm-reference No. of CPU cycles: 850066

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.85006666666666664

xsmm-reference avg execution time: 0.85006666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1041589913 cleaned_data/example_mats/tet/p1/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m6.txt...

Read matrix has 12 rows and 12 columns.

Input arrays: A (12, 12), B (12, 105600).

Output array: C (12, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 12

lda= 105600, ldb= 12, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.867500 ms

xsmm-custom Time (libxsmm): 0.867500 ms

xsmm-custom No. of CPU cycles: 867500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.86749999999999994

xsmm-custom avg execution time: 0.86749999999999994

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 72, 'a_rows': 12, 'a_size': 144, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9799039385206533, 'speedup_best_over_ref': 0.9799039385206533, 'xsmm_custom_avg': 0.8674999999999999, 'xsmm_custom_best': 0.8674999999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.8500666666666666, 'xsmm_reference_best': 0.8500666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m132.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 105600).

Output array: C (4, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.358333 ms

xsmm-reference Time (libxsmm): 0.358333 ms

xsmm-reference No. of CPU cycles: 358333

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.35833333333333334

xsmm-reference avg execution time: 0.35833333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 720757858 cleaned_data/example_mats/tet/p1/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m132.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 105600).

Output array: C (4, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 12

lda= 105600, ldb= 12, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.364200 ms

xsmm-custom Time (libxsmm): 0.364200 ms

xsmm-custom No. of CPU cycles: 364200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.36420000000000002

xsmm-custom avg execution time: 0.36420000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 24, 'a_rows': 4, 'a_size': 48, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9838916346329855, 'speedup_best_over_ref': 0.9838916346329855, 'xsmm_custom_avg': 0.3642, 'xsmm_custom_best': 0.3642, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.35833333333333334, 'xsmm_reference_best': 0.35833333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m460.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 105600).

Output array: C (12, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.442133 ms

xsmm-reference Time (libxsmm): 0.442100 ms

xsmm-reference No. of CPU cycles: 442100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.44213333333333332

xsmm-reference avg execution time: 0.44213333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 416039790 cleaned_data/example_mats/tet/p1/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m460.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 105600).

Output array: C (12, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 4

lda= 105600, ldb= 4, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.438567 ms

xsmm-custom Time (libxsmm): 0.438567 ms

xsmm-custom No. of CPU cycles: 438566

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.43856666666666666

xsmm-custom avg execution time: 0.43856666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 24, 'a_rows': 12, 'a_size': 48, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.008132553013605, 'speedup_best_over_ref': 1.008132553013605, 'xsmm_custom_avg': 0.43856666666666666, 'xsmm_custom_best': 0.43856666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4421333333333333, 'xsmm_reference_best': 0.4421333333333333, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m0.txt...

Read matrix has 24 rows and 10 columns.

Input arrays: A (24, 10), B (10, 105600).

Output array: C (24, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.106467 ms

xsmm-reference Time (libxsmm): 2.106467 ms

xsmm-reference No. of CPU cycles: 2106466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.1064666666666669

xsmm-reference avg execution time: 2.1064666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1079478788 cleaned_data/example_mats/tet/p2/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m0.txt...

Read matrix has 24 rows and 10 columns.

Input arrays: A (24, 10), B (10, 105600).

Output array: C (24, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 10

lda= 105600, ldb= 10, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.227967 ms

xsmm-custom Time (libxsmm): 2.227967 ms

xsmm-custom No. of CPU cycles: 2227966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.2279666666666667

xsmm-custom avg execution time: 2.2279666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 240, 'a_rows': 24, 'a_size': 240, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9454659704663446, 'speedup_best_over_ref': 0.9454659704663446, 'xsmm_custom_avg': 2.2279666666666667, 'xsmm_custom_best': 2.2279666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.106466666666667, 'xsmm_reference_best': 2.106466666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m3.txt...

Read matrix has 10 rows and 24 columns.

Input arrays: A (10, 24), B (24, 105600).

Output array: C (10, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.997067 ms

xsmm-reference Time (libxsmm): 1.997033 ms

xsmm-reference No. of CPU cycles: 1997033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.9970666666666665

xsmm-reference avg execution time: 1.9970666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 935901848 cleaned_data/example_mats/tet/p2/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m3.txt...

Read matrix has 10 rows and 24 columns.

Input arrays: A (10, 24), B (24, 105600).

Output array: C (10, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 24

lda= 105600, ldb= 24, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.076600 ms

xsmm-custom Time (libxsmm): 2.076600 ms

xsmm-custom No. of CPU cycles: 2076600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.0766

xsmm-custom avg execution time: 2.0766

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 240, 'a_rows': 10, 'a_size': 240, 'a_unique': 28, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9617002150951875, 'speedup_best_over_ref': 0.9617002150951875, 'xsmm_custom_avg': 2.0766, 'xsmm_custom_best': 2.0766, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.9970666666666665, 'xsmm_reference_best': 1.9970666666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m6.txt...

Read matrix has 30 rows and 24 columns.

Input arrays: A (30, 24), B (24, 105600).

Output array: C (30, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.751967 ms

xsmm-reference Time (libxsmm): 4.751967 ms

xsmm-reference No. of CPU cycles: 4751966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.7519666666666662

xsmm-reference avg execution time: 4.7519666666666662

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 234407585 cleaned_data/example_mats/tet/p2/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m6.txt...

Read matrix has 30 rows and 24 columns.

Input arrays: A (30, 24), B (24, 105600).

Output array: C (30, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 24

lda= 105600, ldb= 24, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.927867 ms

xsmm-custom Time (libxsmm): 4.927833 ms

xsmm-custom No. of CPU cycles: 4927833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.9278666666666675

xsmm-custom avg execution time: 4.9278666666666675

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 360, 'a_rows': 30, 'a_size': 720, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9643050407207985, 'speedup_best_over_ref': 0.9643050407207985, 'xsmm_custom_avg': 4.9278666666666675, 'xsmm_custom_best': 4.9278666666666675, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.751966666666666, 'xsmm_reference_best': 4.751966666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m132.txt...

Read matrix has 10 rows and 30 columns.

Input arrays: A (10, 30), B (30, 105600).

Output array: C (10, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.559333 ms

xsmm-reference Time (libxsmm): 2.559333 ms

xsmm-reference No. of CPU cycles: 2559333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.5593333333333326

xsmm-reference avg execution time: 2.5593333333333326

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 898478217 cleaned_data/example_mats/tet/p2/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m132.txt...

Read matrix has 10 rows and 30 columns.

Input arrays: A (10, 30), B (30, 105600).

Output array: C (10, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 30

lda= 105600, ldb= 30, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.598500 ms

xsmm-custom Time (libxsmm): 2.598467 ms

xsmm-custom No. of CPU cycles: 2598466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.5985

xsmm-custom avg execution time: 2.5985

Freeing A

Freeing B

Freeing C

{'a_cols': 30, 'a_nonzero': 252, 'a_rows': 10, 'a_size': 300, 'a_unique': 23, 'alpha': 1.0, 'beta': 0.0, 'density': 0.84, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9849272015906609, 'speedup_best_over_ref': 0.9849272015906609, 'xsmm_custom_avg': 2.5985, 'xsmm_custom_best': 2.5985, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.5593333333333326, 'xsmm_reference_best': 2.5593333333333326, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m460.txt...

Read matrix has 30 rows and 10 columns.

Input arrays: A (30, 10), B (10, 105600).

Output array: C (30, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.648167 ms

xsmm-reference Time (libxsmm): 2.648167 ms

xsmm-reference No. of CPU cycles: 2648166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.6481666666666666

xsmm-reference avg execution time: 2.6481666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 42225836 cleaned_data/example_mats/tet/p2/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m460.txt...

Read matrix has 30 rows and 10 columns.

Input arrays: A (30, 10), B (10, 105600).

Output array: C (30, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 10

lda= 105600, ldb= 10, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.697200 ms

xsmm-custom Time (libxsmm): 2.697200 ms

xsmm-custom No. of CPU cycles: 2697200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.6972

xsmm-custom avg execution time: 2.6972

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 252, 'a_rows': 30, 'a_size': 300, 'a_unique': 23, 'alpha': 1.0, 'beta': 0.0, 'density': 0.84, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9818206535172277, 'speedup_best_over_ref': 0.9818206535172277, 'xsmm_custom_avg': 2.6972, 'xsmm_custom_best': 2.6972, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.6481666666666666, 'xsmm_reference_best': 2.6481666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m0.txt...

Read matrix has 40 rows and 20 columns.

Input arrays: A (40, 20), B (20, 105600).

Output array: C (40, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.132400 ms

xsmm-reference Time (libxsmm): 5.132433 ms

xsmm-reference No. of CPU cycles: 5132433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.1324000000000005

xsmm-reference avg execution time: 5.1324000000000005

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1653955837 cleaned_data/example_mats/tet/p3/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m0.txt...

Read matrix has 40 rows and 20 columns.

Input arrays: A (40, 20), B (20, 105600).

Output array: C (40, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 40, k= 20

lda= 105600, ldb= 20, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 40

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.237567 ms

xsmm-custom Time (libxsmm): 5.237533 ms

xsmm-custom No. of CPU cycles: 5237533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.2375666666666669

xsmm-custom avg execution time: 5.2375666666666669

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 800, 'a_rows': 40, 'a_size': 800, 'a_unique': 40, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9799207010889281, 'speedup_best_over_ref': 0.9799207010889281, 'xsmm_custom_avg': 5.237566666666667, 'xsmm_custom_best': 5.237566666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.1324000000000005, 'xsmm_reference_best': 5.1324000000000005, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m3.txt...

Read matrix has 20 rows and 40 columns.

Input arrays: A (20, 40), B (40, 105600).

Output array: C (20, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.258633 ms

xsmm-reference Time (libxsmm): 5.258600 ms

xsmm-reference No. of CPU cycles: 5258600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.2586333333333339

xsmm-reference avg execution time: 5.2586333333333339

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 722552750 cleaned_data/example_mats/tet/p3/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m3.txt...

Read matrix has 20 rows and 40 columns.

Input arrays: A (20, 40), B (40, 105600).

Output array: C (20, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 40

lda= 105600, ldb= 40, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.826467 ms

xsmm-custom Time (libxsmm): 5.826433 ms

xsmm-custom No. of CPU cycles: 5826433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.8264666666666667

xsmm-custom avg execution time: 5.8264666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 40, 'a_nonzero': 800, 'a_rows': 20, 'a_size': 800, 'a_unique': 80, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9025424213645779, 'speedup_best_over_ref': 0.9025424213645779, 'xsmm_custom_avg': 5.826466666666667, 'xsmm_custom_best': 5.826466666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.258633333333334, 'xsmm_reference_best': 5.258633333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m6.txt...

Read matrix has 60 rows and 40 columns.

Input arrays: A (60, 40), B (40, 105600).

Output array: C (60, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 13.515933 ms

xsmm-reference Time (libxsmm): 13.515933 ms

xsmm-reference No. of CPU cycles: 13515933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 13.515933333333331

xsmm-reference avg execution time: 13.515933333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 495727009 cleaned_data/example_mats/tet/p3/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m6.txt...

Read matrix has 60 rows and 40 columns.

Input arrays: A (60, 40), B (40, 105600).

Output array: C (60, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 60, k= 40

lda= 105600, ldb= 40, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 13.445233 ms

xsmm-custom Time (libxsmm): 13.445233 ms

xsmm-custom No. of CPU cycles: 13445233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 13.445233333333334

xsmm-custom avg execution time: 13.445233333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 40, 'a_nonzero': 1200, 'a_rows': 60, 'a_size': 2400, 'a_unique': 40, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0052583691370174, 'speedup_best_over_ref': 1.0052583691370174, 'xsmm_custom_avg': 13.445233333333334, 'xsmm_custom_best': 13.445233333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 13.515933333333331, 'xsmm_reference_best': 13.515933333333331, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m132.txt...

Read matrix has 20 rows and 60 columns.

Input arrays: A (20, 60), B (60, 105600).

Output array: C (20, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.129000 ms

xsmm-reference Time (libxsmm): 8.128967 ms

xsmm-reference No. of CPU cycles: 8128966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.1289999999999996

xsmm-reference avg execution time: 8.1289999999999996

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 74498840 cleaned_data/example_mats/tet/p3/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m132.txt...

Read matrix has 20 rows and 60 columns.

Input arrays: A (20, 60), B (60, 105600).

Output array: C (20, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 60

lda= 105600, ldb= 60, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.119733 ms

xsmm-custom Time (libxsmm): 8.119733 ms

xsmm-custom No. of CPU cycles: 8119733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.1197333333333344

xsmm-custom avg execution time: 8.1197333333333344

Freeing A

Freeing B

Freeing C

{'a_cols': 60, 'a_nonzero': 1092, 'a_rows': 20, 'a_size': 1200, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 0.91, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0011412525862917, 'speedup_best_over_ref': 1.0011412525862917, 'xsmm_custom_avg': 8.119733333333334, 'xsmm_custom_best': 8.119733333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.129, 'xsmm_reference_best': 8.129, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m460.txt...

Read matrix has 60 rows and 20 columns.

Input arrays: A (60, 20), B (20, 105600).

Output array: C (60, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 7.580500 ms

xsmm-reference Time (libxsmm): 7.580500 ms

xsmm-reference No. of CPU cycles: 7580500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 7.5804999999999989

xsmm-reference avg execution time: 7.5804999999999989

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 549099915 cleaned_data/example_mats/tet/p3/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m460.txt...

Read matrix has 60 rows and 20 columns.

Input arrays: A (60, 20), B (20, 105600).

Output array: C (60, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 60, k= 20

lda= 105600, ldb= 20, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 7.608800 ms

xsmm-custom Time (libxsmm): 7.608800 ms

xsmm-custom No. of CPU cycles: 7608800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 7.6088000000000005

xsmm-custom avg execution time: 7.6088000000000005

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 1092, 'a_rows': 60, 'a_size': 1200, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 0.91, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9962806224371779, 'speedup_best_over_ref': 0.9962806224371779, 'xsmm_custom_avg': 7.6088000000000005, 'xsmm_custom_best': 7.6088000000000005, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 7.580499999999999, 'xsmm_reference_best': 7.580499999999999, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m0.txt...

Read matrix has 60 rows and 35 columns.

Input arrays: A (60, 35), B (35, 105600).

Output array: C (60, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 11.842267 ms

xsmm-reference Time (libxsmm): 11.842233 ms

xsmm-reference No. of CPU cycles: 11842233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 11.842266666666667

xsmm-reference avg execution time: 11.842266666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1059254538 cleaned_data/example_mats/tet/p4/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m0.txt...

Read matrix has 60 rows and 35 columns.

Input arrays: A (60, 35), B (35, 105600).

Output array: C (60, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 60, k= 35

lda= 105600, ldb= 35, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 11.819167 ms

xsmm-custom Time (libxsmm): 11.819133 ms

xsmm-custom No. of CPU cycles: 11819133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 11.819166666666666

xsmm-custom avg execution time: 11.819166666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 35, 'a_nonzero': 2100, 'a_rows': 60, 'a_size': 2100, 'a_unique': 101, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0019544525135726, 'speedup_best_over_ref': 1.0019544525135726, 'xsmm_custom_avg': 11.819166666666666, 'xsmm_custom_best': 11.819166666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 11.842266666666667, 'xsmm_reference_best': 11.842266666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m3.txt...

Read matrix has 35 rows and 60 columns.

Input arrays: A (35, 60), B (60, 105600).

Output array: C (35, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 12.174067 ms

xsmm-reference Time (libxsmm): 12.174033 ms

xsmm-reference No. of CPU cycles: 12174033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 12.174066666666667

xsmm-reference avg execution time: 12.174066666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 500150968 cleaned_data/example_mats/tet/p4/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m3.txt...

Read matrix has 35 rows and 60 columns.

Input arrays: A (35, 60), B (60, 105600).

Output array: C (35, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 35, k= 60

lda= 105600, ldb= 60, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 12.362400 ms

xsmm-custom Time (libxsmm): 12.362400 ms

xsmm-custom No. of CPU cycles: 12362400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 12.362400000000001

xsmm-custom avg execution time: 12.362400000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 60, 'a_nonzero': 2100, 'a_rows': 35, 'a_size': 2100, 'a_unique': 202, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9847656334260876, 'speedup_best_over_ref': 0.9847656334260876, 'xsmm_custom_avg': 12.362400000000001, 'xsmm_custom_best': 12.362400000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 12.174066666666667, 'xsmm_reference_best': 12.174066666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m6.txt...

Read matrix has 105 rows and 60 columns.

Input arrays: A (105, 60), B (60, 105600).

Output array: C (105, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 37.872133 ms

xsmm-reference Time (libxsmm): 37.872133 ms

xsmm-reference No. of CPU cycles: 37872133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 37.872133333333331

xsmm-reference avg execution time: 37.872133333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1629097784 cleaned_data/example_mats/tet/p4/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m6.txt...

Read matrix has 105 rows and 60 columns.

Input arrays: A (105, 60), B (60, 105600).

Output array: C (105, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 105, k= 60

lda= 105600, ldb= 60, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 37.517933 ms

xsmm-custom Time (libxsmm): 37.517900 ms

xsmm-custom No. of CPU cycles: 37517900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 37.517933333333332

xsmm-custom avg execution time: 37.517933333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 60, 'a_nonzero': 3150, 'a_rows': 105, 'a_size': 6300, 'a_unique': 101, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.009440818524119, 'speedup_best_over_ref': 1.009440818524119, 'xsmm_custom_avg': 37.51793333333333, 'xsmm_custom_best': 37.51793333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 37.87213333333333, 'xsmm_reference_best': 37.87213333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m132.txt...

Read matrix has 35 rows and 105 columns.

Input arrays: A (35, 105), B (105, 105600).

Output array: C (35, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 20.255933 ms

xsmm-reference Time (libxsmm): 20.255933 ms

xsmm-reference No. of CPU cycles: 20255933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 20.255933333333335

xsmm-reference avg execution time: 20.255933333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1140125920 cleaned_data/example_mats/tet/p4/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m132.txt...

Read matrix has 35 rows and 105 columns.

Input arrays: A (35, 105), B (105, 105600).

Output array: C (35, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 35, k= 105

lda= 105600, ldb= 105, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 20.146733 ms

xsmm-custom Time (libxsmm): 20.146700 ms

xsmm-custom No. of CPU cycles: 20146700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 20.146733333333334

xsmm-custom avg execution time: 20.146733333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 105, 'a_nonzero': 3432, 'a_rows': 35, 'a_size': 3675, 'a_unique': 304, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9338775510204081, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.005420233553165, 'speedup_best_over_ref': 1.005420233553165, 'xsmm_custom_avg': 20.146733333333334, 'xsmm_custom_best': 20.146733333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 20.255933333333335, 'xsmm_reference_best': 20.255933333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m460.txt...

Read matrix has 105 rows and 35 columns.

Input arrays: A (105, 35), B (35, 105600).

Output array: C (105, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 21.334300 ms

xsmm-reference Time (libxsmm): 21.334267 ms

xsmm-reference No. of CPU cycles: 21334266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 21.334299999999999

xsmm-reference avg execution time: 21.334299999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 809809415 cleaned_data/example_mats/tet/p4/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m460.txt...

Read matrix has 105 rows and 35 columns.

Input arrays: A (105, 35), B (35, 105600).

Output array: C (105, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 105, k= 35

lda= 105600, ldb= 35, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 20.921233 ms

xsmm-custom Time (libxsmm): 20.921200 ms

xsmm-custom No. of CPU cycles: 20921200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 20.92123333333333

xsmm-custom avg execution time: 20.92123333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 35, 'a_nonzero': 3432, 'a_rows': 105, 'a_size': 3675, 'a_unique': 304, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9338775510204081, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0197438965516694, 'speedup_best_over_ref': 1.0197438965516694, 'xsmm_custom_avg': 20.92123333333333, 'xsmm_custom_best': 20.92123333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 21.3343, 'xsmm_reference_best': 21.3343, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m0.txt...

Read matrix has 84 rows and 56 columns.

Input arrays: A (84, 56), B (56, 105600).

Output array: C (84, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 28.056000 ms

xsmm-reference Time (libxsmm): 28.056000 ms

xsmm-reference No. of CPU cycles: 28056000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 28.055999999999997

xsmm-reference avg execution time: 28.055999999999997

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 164756005 cleaned_data/example_mats/tet/p5/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m0.txt...

Read matrix has 84 rows and 56 columns.

Input arrays: A (84, 56), B (56, 105600).

Output array: C (84, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 84, k= 56

lda= 105600, ldb= 56, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 25.881000 ms

xsmm-custom Time (libxsmm): 25.881000 ms

xsmm-custom No. of CPU cycles: 25881000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 25.880999999999997

xsmm-custom avg execution time: 25.880999999999997

Freeing A

Freeing B

Freeing C

{'a_cols': 56, 'a_nonzero': 4704, 'a_rows': 84, 'a_size': 4704, 'a_unique': 214, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0840384838298367, 'speedup_best_over_ref': 1.0840384838298367, 'xsmm_custom_avg': 25.880999999999997, 'xsmm_custom_best': 25.880999999999997, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 28.055999999999997, 'xsmm_reference_best': 28.055999999999997, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m3.txt...

Read matrix has 56 rows and 84 columns.

Input arrays: A (56, 84), B (84, 105600).

Output array: C (56, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 27.053367 ms

xsmm-reference Time (libxsmm): 27.053333 ms

xsmm-reference No. of CPU cycles: 27053333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 27.053366666666665

xsmm-reference avg execution time: 27.053366666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 759293673 cleaned_data/example_mats/tet/p5/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m3.txt...

Read matrix has 56 rows and 84 columns.

Input arrays: A (56, 84), B (84, 105600).

Output array: C (56, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 84

lda= 105600, ldb= 84, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 26.844533 ms

xsmm-custom Time (libxsmm): 26.844500 ms

xsmm-custom No. of CPU cycles: 26844500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 26.844533333333334

xsmm-custom avg execution time: 26.844533333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 4704, 'a_rows': 56, 'a_size': 4704, 'a_unique': 428, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0077793616577428, 'speedup_best_over_ref': 1.0077793616577428, 'xsmm_custom_avg': 26.844533333333334, 'xsmm_custom_best': 26.844533333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 27.053366666666665, 'xsmm_reference_best': 27.053366666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m6.txt...

Read matrix has 168 rows and 84 columns.

Input arrays: A (168, 84), B (84, 105600).

Output array: C (168, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 74.132100 ms

xsmm-reference Time (libxsmm): 74.132067 ms

xsmm-reference No. of CPU cycles: 74132066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 74.132100000000008

xsmm-reference avg execution time: 74.132100000000008

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1479566909 cleaned_data/example_mats/tet/p5/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m6.txt...

Read matrix has 168 rows and 84 columns.

Input arrays: A (168, 84), B (84, 105600).

Output array: C (168, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 168, k= 84

lda= 105600, ldb= 84, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 168

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 74.531400 ms

xsmm-custom Time (libxsmm): 74.531400 ms

xsmm-custom No. of CPU cycles: 74531400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 74.531400000000005

xsmm-custom avg execution time: 74.531400000000005

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 7056, 'a_rows': 168, 'a_size': 14112, 'a_unique': 214, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.994642526505607, 'speedup_best_over_ref': 0.994642526505607, 'xsmm_custom_avg': 74.5314, 'xsmm_custom_best': 74.5314, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 74.13210000000001, 'xsmm_reference_best': 74.13210000000001, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m132.txt...

Read matrix has 56 rows and 168 columns.

Input arrays: A (56, 168), B (168, 105600).

Output array: C (56, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 53.765300 ms

xsmm-reference Time (libxsmm): 53.765267 ms

xsmm-reference No. of CPU cycles: 53765266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 53.765299999999996

xsmm-reference avg execution time: 53.765299999999996

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 2009212412 cleaned_data/example_mats/tet/p5/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m132.txt...

Read matrix has 56 rows and 168 columns.

Input arrays: A (56, 168), B (168, 105600).

Output array: C (56, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 168

lda= 105600, ldb= 168, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 53.784500 ms

xsmm-custom Time (libxsmm): 53.784467 ms

xsmm-custom No. of CPU cycles: 53784466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 53.784500000000001

xsmm-custom avg execution time: 53.784500000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 168, 'a_nonzero': 8976, 'a_rows': 56, 'a_size': 9408, 'a_unique': 784, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9540816326530612, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9996430198291328, 'speedup_best_over_ref': 0.9996430198291328, 'xsmm_custom_avg': 53.7845, 'xsmm_custom_best': 53.7845, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 53.765299999999996, 'xsmm_reference_best': 53.765299999999996, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m460.txt...

Read matrix has 168 rows and 56 columns.

Input arrays: A (168, 56), B (56, 105600).

Output array: C (168, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 55.194433 ms

xsmm-reference Time (libxsmm): 55.194400 ms

xsmm-reference No. of CPU cycles: 55194400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 55.194433333333336

xsmm-reference avg execution time: 55.194433333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1226756495 cleaned_data/example_mats/tet/p5/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m460.txt...

Read matrix has 168 rows and 56 columns.

Input arrays: A (168, 56), B (56, 105600).

Output array: C (168, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 168, k= 56

lda= 105600, ldb= 56, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 168

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 54.955800 ms

xsmm-custom Time (libxsmm): 54.955767 ms

xsmm-custom No. of CPU cycles: 54955766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 54.955799999999996

xsmm-custom avg execution time: 54.955799999999996

Freeing A

Freeing B

Freeing C

{'a_cols': 56, 'a_nonzero': 8976, 'a_rows': 168, 'a_size': 9408, 'a_unique': 784, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9540816326530612, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0043422774908806, 'speedup_best_over_ref': 1.0043422774908806, 'xsmm_custom_avg': 54.955799999999996, 'xsmm_custom_best': 54.955799999999996, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 55.194433333333336, 'xsmm_reference_best': 55.194433333333336, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m0.txt...

Read matrix has 112 rows and 84 columns.

Input arrays: A (112, 84), B (84, 105600).

Output array: C (112, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 51.679733 ms

xsmm-reference Time (libxsmm): 51.679733 ms

xsmm-reference No. of CPU cycles: 51679733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 51.679733333333338

xsmm-reference avg execution time: 51.679733333333338

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 329867350 cleaned_data/example_mats/tet/p6/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m0.txt...

Read matrix has 112 rows and 84 columns.

Input arrays: A (112, 84), B (84, 105600).

Output array: C (112, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 112, k= 84

lda= 105600, ldb= 84, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 112

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 52.060933 ms

xsmm-custom Time (libxsmm): 52.060933 ms

xsmm-custom No. of CPU cycles: 52060933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 52.060933333333331

xsmm-custom avg execution time: 52.060933333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 9408, 'a_rows': 112, 'a_size': 9408, 'a_unique': 425, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9926778108729004, 'speedup_best_over_ref': 0.9926778108729004, 'xsmm_custom_avg': 52.06093333333333, 'xsmm_custom_best': 52.06093333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 51.67973333333334, 'xsmm_reference_best': 51.67973333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m3.txt...

Read matrix has 84 rows and 112 columns.

Input arrays: A (84, 112), B (112, 105600).

Output array: C (84, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 50.708867 ms

xsmm-reference Time (libxsmm): 50.708867 ms

xsmm-reference No. of CPU cycles: 50708866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 50.708866666666673

xsmm-reference avg execution time: 50.708866666666673

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 329029545 cleaned_data/example_mats/tet/p6/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m3.txt...

Read matrix has 84 rows and 112 columns.

Input arrays: A (84, 112), B (112, 105600).

Output array: C (84, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 84, k= 112

lda= 105600, ldb= 112, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 50.430333 ms

xsmm-custom Time (libxsmm): 50.430333 ms

xsmm-custom No. of CPU cycles: 50430333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 50.430333333333337

xsmm-custom avg execution time: 50.430333333333337

Freeing A

Freeing B

Freeing C

{'a_cols': 112, 'a_nonzero': 9408, 'a_rows': 84, 'a_size': 9408, 'a_unique': 850, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0055231309198829, 'speedup_best_over_ref': 1.0055231309198829, 'xsmm_custom_avg': 50.43033333333334, 'xsmm_custom_best': 50.43033333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 50.70886666666667, 'xsmm_reference_best': 50.70886666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m6.txt...

Read matrix has 252 rows and 112 columns.

Input arrays: A (252, 112), B (112, 105600).

Output array: C (252, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 143.094567 ms

xsmm-reference Time (libxsmm): 143.094600 ms

xsmm-reference No. of CPU cycles: 143094600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 143.09456666666665

xsmm-reference avg execution time: 143.09456666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1623400870 cleaned_data/example_mats/tet/p6/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m6.txt...

Read matrix has 252 rows and 112 columns.

Input arrays: A (252, 112), B (112, 105600).

Output array: C (252, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 252, k= 112

lda= 105600, ldb= 112, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 143.371067 ms

xsmm-custom Time (libxsmm): 143.371033 ms

xsmm-custom No. of CPU cycles: 143371033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 143.37106666666665

xsmm-custom avg execution time: 143.37106666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 112, 'a_nonzero': 14112, 'a_rows': 252, 'a_size': 28224, 'a_unique': 425, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9980714379377336, 'speedup_best_over_ref': 0.9980714379377336, 'xsmm_custom_avg': 143.37106666666665, 'xsmm_custom_best': 143.37106666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 143.09456666666665, 'xsmm_reference_best': 143.09456666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m132.txt...

Read matrix has 84 rows and 252 columns.

Input arrays: A (84, 252), B (252, 105600).

Output array: C (84, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 126.426967 ms

xsmm-reference Time (libxsmm): 126.426933 ms

xsmm-reference No. of CPU cycles: 126426933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 126.42696666666667

xsmm-reference avg execution time: 126.42696666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1385817966 cleaned_data/example_mats/tet/p6/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m132.txt...

Read matrix has 84 rows and 252 columns.

Input arrays: A (84, 252), B (252, 105600).

Output array: C (84, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 84, k= 252

lda= 105600, ldb= 252, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 126.257700 ms

xsmm-custom Time (libxsmm): 126.257667 ms

xsmm-custom No. of CPU cycles: 126257666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 126.25769999999999

xsmm-custom avg execution time: 126.25769999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 252, 'a_nonzero': 20400, 'a_rows': 84, 'a_size': 21168, 'a_unique': 1760, 'alpha': 1.0, 'beta': 0.0, 'density': 0.963718820861678, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0013406443065784, 'speedup_best_over_ref': 1.0013406443065784, 'xsmm_custom_avg': 126.25769999999999, 'xsmm_custom_best': 126.25769999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 126.42696666666667, 'xsmm_reference_best': 126.42696666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m460.txt...

Read matrix has 252 rows and 84 columns.

Input arrays: A (252, 84), B (84, 105600).

Output array: C (252, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 110.540967 ms

xsmm-reference Time (libxsmm): 110.540967 ms

xsmm-reference No. of CPU cycles: 110540966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 110.54096666666666

xsmm-reference avg execution time: 110.54096666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 2005255814 cleaned_data/example_mats/tet/p6/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m460.txt...

Read matrix has 252 rows and 84 columns.

Input arrays: A (252, 84), B (84, 105600).

Output array: C (252, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 252, k= 84

lda= 105600, ldb= 84, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 110.837367 ms

xsmm-custom Time (libxsmm): 110.837367 ms

xsmm-custom No. of CPU cycles: 110837366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 110.83736666666667

xsmm-custom avg execution time: 110.83736666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 20400, 'a_rows': 252, 'a_size': 21168, 'a_unique': 1760, 'alpha': 1.0, 'beta': 0.0, 'density': 0.963718820861678, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9973258116020439, 'speedup_best_over_ref': 0.9973258116020439, 'xsmm_custom_avg': 110.83736666666667, 'xsmm_custom_best': 110.83736666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 110.54096666666666, 'xsmm_reference_best': 110.54096666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m0.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 105600).

Output array: C (6, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.218267 ms

xsmm-reference Time (libxsmm): 0.218267 ms

xsmm-reference No. of CPU cycles: 218266

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.21826666666666666

xsmm-reference avg execution time: 0.21826666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 742719792 cleaned_data/example_mats/tri/p1/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m0.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 105600).

Output array: C (6, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 3

lda= 105600, ldb= 3, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.254933 ms

xsmm-custom Time (libxsmm): 0.254933 ms

xsmm-custom No. of CPU cycles: 254933

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.25493333333333335

xsmm-custom avg execution time: 0.25493333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 3, 'a_nonzero': 18, 'a_rows': 6, 'a_size': 18, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.8561715481171548, 'speedup_best_over_ref': 0.8561715481171548, 'xsmm_custom_avg': 0.25493333333333335, 'xsmm_custom_best': 0.25493333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.21826666666666666, 'xsmm_reference_best': 0.21826666666666666, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m3.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 105600).

Output array: C (3, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.183467 ms

xsmm-reference Time (libxsmm): 0.183467 ms

xsmm-reference No. of CPU cycles: 183466

CPU clock speed (GHz): 0.999996

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.18346666666666664

xsmm-reference avg execution time: 0.18346666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 830541374 cleaned_data/example_mats/tri/p1/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m3.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 105600).

Output array: C (3, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 3, k= 6

lda= 105600, ldb= 6, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.225567 ms

xsmm-custom Time (libxsmm): 0.225533 ms

xsmm-custom No. of CPU cycles: 225533

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.22556666666666667

xsmm-custom avg execution time: 0.22556666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 18, 'a_rows': 3, 'a_size': 18, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.8133589478350819, 'speedup_best_over_ref': 0.8133589478350819, 'xsmm_custom_avg': 0.22556666666666667, 'xsmm_custom_best': 0.22556666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.18346666666666664, 'xsmm_reference_best': 0.18346666666666664, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m6.txt...

Read matrix has 6 rows and 6 columns.

Input arrays: A (6, 6), B (6, 105600).

Output array: C (6, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.299567 ms

xsmm-reference Time (libxsmm): 0.299567 ms

xsmm-reference No. of CPU cycles: 299566

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.29956666666666665

xsmm-reference avg execution time: 0.29956666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 6948074 cleaned_data/example_mats/tri/p1/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m6.txt...

Read matrix has 6 rows and 6 columns.

Input arrays: A (6, 6), B (6, 105600).

Output array: C (6, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 6

lda= 105600, ldb= 6, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.306333 ms

xsmm-custom Time (libxsmm): 0.306333 ms

xsmm-custom No. of CPU cycles: 306333

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.30633333333333329

xsmm-custom avg execution time: 0.30633333333333329

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 24, 'a_rows': 6, 'a_size': 36, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9779107725788901, 'speedup_best_over_ref': 0.9779107725788901, 'xsmm_custom_avg': 0.3063333333333333, 'xsmm_custom_best': 0.3063333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.29956666666666665, 'xsmm_reference_best': 0.29956666666666665, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m132.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 105600).

Output array: C (3, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.187067 ms

xsmm-reference Time (libxsmm): 0.187067 ms

xsmm-reference No. of CPU cycles: 187066

CPU clock speed (GHz): 0.999996

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.18706666666666666

xsmm-reference avg execution time: 0.18706666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 776986899 cleaned_data/example_mats/tri/p1/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m132.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 105600).

Output array: C (3, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 3, k= 6

lda= 105600, ldb= 6, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.219267 ms

xsmm-custom Time (libxsmm): 0.219267 ms

xsmm-custom No. of CPU cycles: 219266

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.21926666666666667

xsmm-custom avg execution time: 0.21926666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 12, 'a_rows': 3, 'a_size': 18, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.8531468531468531, 'speedup_best_over_ref': 0.8531468531468531, 'xsmm_custom_avg': 0.21926666666666667, 'xsmm_custom_best': 0.21926666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.18706666666666666, 'xsmm_reference_best': 0.18706666666666666, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m460.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 105600).

Output array: C (6, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.213967 ms

xsmm-reference Time (libxsmm): 0.213967 ms

xsmm-reference No. of CPU cycles: 213966

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.21396666666666667

xsmm-reference avg execution time: 0.21396666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1014109182 cleaned_data/example_mats/tri/p1/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m460.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 105600).

Output array: C (6, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 3

lda= 105600, ldb= 3, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.253967 ms

xsmm-custom Time (libxsmm): 0.253967 ms

xsmm-custom No. of CPU cycles: 253966

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.25396666666666667

xsmm-custom avg execution time: 0.25396666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 3, 'a_nonzero': 12, 'a_rows': 6, 'a_size': 18, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.8424990156188475, 'speedup_best_over_ref': 0.8424990156188475, 'xsmm_custom_avg': 0.2539666666666667, 'xsmm_custom_best': 0.2539666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.21396666666666667, 'xsmm_reference_best': 0.21396666666666667, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m0.txt...

Read matrix has 9 rows and 6 columns.

Input arrays: A (9, 6), B (6, 105600).

Output array: C (9, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.415233 ms

xsmm-reference Time (libxsmm): 0.415233 ms

xsmm-reference No. of CPU cycles: 415233

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.41523333333333334

xsmm-reference avg execution time: 0.41523333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 842561875 cleaned_data/example_mats/tri/p2/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m0.txt...

Read matrix has 9 rows and 6 columns.

Input arrays: A (9, 6), B (6, 105600).

Output array: C (9, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 6

lda= 105600, ldb= 6, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.426100 ms

xsmm-custom Time (libxsmm): 0.426100 ms

xsmm-custom No. of CPU cycles: 426100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.42609999999999998

xsmm-custom avg execution time: 0.42609999999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 54, 'a_rows': 9, 'a_size': 54, 'a_unique': 10, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9744973793319253, 'speedup_best_over_ref': 0.9744973793319253, 'xsmm_custom_avg': 0.4261, 'xsmm_custom_best': 0.4261, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.41523333333333334, 'xsmm_reference_best': 0.41523333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m3.txt...

Read matrix has 6 rows and 9 columns.

Input arrays: A (6, 9), B (9, 105600).

Output array: C (6, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.399967 ms

xsmm-reference Time (libxsmm): 0.399967 ms

xsmm-reference No. of CPU cycles: 399966

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.39996666666666669

xsmm-reference avg execution time: 0.39996666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 2044526191 cleaned_data/example_mats/tri/p2/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m3.txt...

Read matrix has 6 rows and 9 columns.

Input arrays: A (6, 9), B (9, 105600).

Output array: C (6, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 9

lda= 105600, ldb= 9, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.406100 ms

xsmm-custom Time (libxsmm): 0.406100 ms

xsmm-custom No. of CPU cycles: 406100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.40610000000000002

xsmm-custom avg execution time: 0.40610000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 54, 'a_rows': 6, 'a_size': 54, 'a_unique': 20, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9848969876056801, 'speedup_best_over_ref': 0.9848969876056801, 'xsmm_custom_avg': 0.4061, 'xsmm_custom_best': 0.4061, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.3999666666666667, 'xsmm_reference_best': 0.3999666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m6.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 105600).

Output array: C (12, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.614433 ms

xsmm-reference Time (libxsmm): 0.614433 ms

xsmm-reference No. of CPU cycles: 614433

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.61443333333333328

xsmm-reference avg execution time: 0.61443333333333328

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 859133503 cleaned_data/example_mats/tri/p2/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m6.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 105600).

Output array: C (12, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 9

lda= 105600, ldb= 9, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.635500 ms

xsmm-custom Time (libxsmm): 0.635500 ms

xsmm-custom No. of CPU cycles: 635500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.63550000000000006

xsmm-custom avg execution time: 0.63550000000000006

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 72, 'a_rows': 12, 'a_size': 108, 'a_unique': 10, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9668502491476526, 'speedup_best_over_ref': 0.9668502491476526, 'xsmm_custom_avg': 0.6355000000000001, 'xsmm_custom_best': 0.6355000000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6144333333333333, 'xsmm_reference_best': 0.6144333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m132.txt...

Read matrix has 6 rows and 12 columns.

Input arrays: A (6, 12), B (12, 105600).

Output array: C (6, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.479133 ms

xsmm-reference Time (libxsmm): 0.479133 ms

xsmm-reference No. of CPU cycles: 479133

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.47913333333333336

xsmm-reference avg execution time: 0.47913333333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1240898490 cleaned_data/example_mats/tri/p2/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m132.txt...

Read matrix has 6 rows and 12 columns.

Input arrays: A (6, 12), B (12, 105600).

Output array: C (6, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 12

lda= 105600, ldb= 12, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.464933 ms

xsmm-custom Time (libxsmm): 0.464933 ms

xsmm-custom No. of CPU cycles: 464933

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.46493333333333337

xsmm-custom avg execution time: 0.46493333333333337

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 64, 'a_rows': 6, 'a_size': 72, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 0.8888888888888888, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0305420131918555, 'speedup_best_over_ref': 1.0305420131918555, 'xsmm_custom_avg': 0.46493333333333337, 'xsmm_custom_best': 0.46493333333333337, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.47913333333333336, 'xsmm_reference_best': 0.47913333333333336, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m460.txt...

Read matrix has 12 rows and 6 columns.

Input arrays: A (12, 6), B (6, 105600).

Output array: C (12, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.558633 ms

xsmm-reference Time (libxsmm): 0.558633 ms

xsmm-reference No. of CPU cycles: 558633

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.55863333333333332

xsmm-reference avg execution time: 0.55863333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1323318524 cleaned_data/example_mats/tri/p2/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m460.txt...

Read matrix has 12 rows and 6 columns.

Input arrays: A (12, 6), B (6, 105600).

Output array: C (12, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 6

lda= 105600, ldb= 6, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.523833 ms

xsmm-custom Time (libxsmm): 0.523833 ms

xsmm-custom No. of CPU cycles: 523833

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.52383333333333337

xsmm-custom avg execution time: 0.52383333333333337

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 64, 'a_rows': 12, 'a_size': 72, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 0.8888888888888888, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0664333439389118, 'speedup_best_over_ref': 1.0664333439389118, 'xsmm_custom_avg': 0.5238333333333334, 'xsmm_custom_best': 0.5238333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5586333333333333, 'xsmm_reference_best': 0.5586333333333333, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m0.txt...

Read matrix has 12 rows and 10 columns.

Input arrays: A (12, 10), B (10, 105600).

Output array: C (12, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.691567 ms

xsmm-reference Time (libxsmm): 0.691567 ms

xsmm-reference No. of CPU cycles: 691566

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.69156666666666666

xsmm-reference avg execution time: 0.69156666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1138982272 cleaned_data/example_mats/tri/p3/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m0.txt...

Read matrix has 12 rows and 10 columns.

Input arrays: A (12, 10), B (10, 105600).

Output array: C (12, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 10

lda= 105600, ldb= 10, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.684900 ms

xsmm-custom Time (libxsmm): 0.684933 ms

xsmm-custom No. of CPU cycles: 684933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.68490000000000006

xsmm-custom avg execution time: 0.68490000000000006

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 120, 'a_rows': 12, 'a_size': 120, 'a_unique': 20, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0097337810872633, 'speedup_best_over_ref': 1.0097337810872633, 'xsmm_custom_avg': 0.6849000000000001, 'xsmm_custom_best': 0.6849000000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6915666666666667, 'xsmm_reference_best': 0.6915666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m3.txt...

Read matrix has 10 rows and 12 columns.

Input arrays: A (10, 12), B (12, 105600).

Output array: C (10, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.668100 ms

xsmm-reference Time (libxsmm): 0.668100 ms

xsmm-reference No. of CPU cycles: 668100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.66810000000000003

xsmm-reference avg execution time: 0.66810000000000003

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1630997566 cleaned_data/example_mats/tri/p3/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m3.txt...

Read matrix has 10 rows and 12 columns.

Input arrays: A (10, 12), B (12, 105600).

Output array: C (10, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 12

lda= 105600, ldb= 12, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.665867 ms

xsmm-custom Time (libxsmm): 0.665867 ms

xsmm-custom No. of CPU cycles: 665866

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.66586666666666661

xsmm-custom avg execution time: 0.66586666666666661

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 120, 'a_rows': 10, 'a_size': 120, 'a_unique': 40, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0033540248297959, 'speedup_best_over_ref': 1.0033540248297959, 'xsmm_custom_avg': 0.6658666666666666, 'xsmm_custom_best': 0.6658666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6681, 'xsmm_reference_best': 0.6681, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m6.txt...

Read matrix has 20 rows and 12 columns.

Input arrays: A (20, 12), B (12, 105600).

Output array: C (20, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.868100 ms

xsmm-reference Time (libxsmm): 1.868100 ms

xsmm-reference No. of CPU cycles: 1868100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.8680999999999999

xsmm-reference avg execution time: 1.8680999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1753377556 cleaned_data/example_mats/tri/p3/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m6.txt...

Read matrix has 20 rows and 12 columns.

Input arrays: A (20, 12), B (12, 105600).

Output array: C (20, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 12

lda= 105600, ldb= 12, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.960633 ms

xsmm-custom Time (libxsmm): 1.960633 ms

xsmm-custom No. of CPU cycles: 1960633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.9606333333333335

xsmm-custom avg execution time: 1.9606333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 160, 'a_rows': 20, 'a_size': 240, 'a_unique': 20, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.952804365936177, 'speedup_best_over_ref': 0.952804365936177, 'xsmm_custom_avg': 1.9606333333333335, 'xsmm_custom_best': 1.9606333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.8680999999999999, 'xsmm_reference_best': 1.8680999999999999, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m132.txt...

Read matrix has 10 rows and 20 columns.

Input arrays: A (10, 20), B (20, 105600).

Output array: C (10, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.725400 ms

xsmm-reference Time (libxsmm): 1.725400 ms

xsmm-reference No. of CPU cycles: 1725400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.7254

xsmm-reference avg execution time: 1.7254

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1921702877 cleaned_data/example_mats/tri/p3/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m132.txt...

Read matrix has 10 rows and 20 columns.

Input arrays: A (10, 20), B (20, 105600).

Output array: C (10, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 20

lda= 105600, ldb= 20, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.801367 ms

xsmm-custom Time (libxsmm): 1.801333 ms

xsmm-custom No. of CPU cycles: 1801333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.8013666666666666

xsmm-custom avg execution time: 1.8013666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 192, 'a_rows': 10, 'a_size': 200, 'a_unique': 48, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9578283155382026, 'speedup_best_over_ref': 0.9578283155382026, 'xsmm_custom_avg': 1.8013666666666666, 'xsmm_custom_best': 1.8013666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.7254, 'xsmm_reference_best': 1.7254, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m460.txt...

Read matrix has 20 rows and 10 columns.

Input arrays: A (20, 10), B (10, 105600).

Output array: C (20, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.695233 ms

xsmm-reference Time (libxsmm): 1.695233 ms

xsmm-reference No. of CPU cycles: 1695233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.6952333333333334

xsmm-reference avg execution time: 1.6952333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1043464450 cleaned_data/example_mats/tri/p3/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m460.txt...

Read matrix has 20 rows and 10 columns.

Input arrays: A (20, 10), B (10, 105600).

Output array: C (20, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 10

lda= 105600, ldb= 10, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.769267 ms

xsmm-custom Time (libxsmm): 1.769267 ms

xsmm-custom No. of CPU cycles: 1769266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.7692666666666668

xsmm-custom avg execution time: 1.7692666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 192, 'a_rows': 20, 'a_size': 200, 'a_unique': 48, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.958155921474057, 'speedup_best_over_ref': 0.958155921474057, 'xsmm_custom_avg': 1.7692666666666668, 'xsmm_custom_best': 1.7692666666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.6952333333333334, 'xsmm_reference_best': 1.6952333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m0.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 105600).

Output array: C (15, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.716267 ms

xsmm-reference Time (libxsmm): 1.716267 ms

xsmm-reference No. of CPU cycles: 1716266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.7162666666666666

xsmm-reference avg execution time: 1.7162666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 88170057 cleaned_data/example_mats/tri/p4/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m0.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 105600).

Output array: C (15, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 15, k= 15

lda= 105600, ldb= 15, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.775467 ms

xsmm-custom Time (libxsmm): 1.775467 ms

xsmm-custom No. of CPU cycles: 1775466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.7754666666666667

xsmm-custom avg execution time: 1.7754666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 225, 'a_rows': 15, 'a_size': 225, 'a_unique': 39, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9666566536497446, 'speedup_best_over_ref': 0.9666566536497446, 'xsmm_custom_avg': 1.7754666666666667, 'xsmm_custom_best': 1.7754666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.7162666666666666, 'xsmm_reference_best': 1.7162666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m3.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 105600).

Output array: C (15, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.731333 ms

xsmm-reference Time (libxsmm): 1.731333 ms

xsmm-reference No. of CPU cycles: 1731333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.7313333333333332

xsmm-reference avg execution time: 1.7313333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1672961046 cleaned_data/example_mats/tri/p4/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m3.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 105600).

Output array: C (15, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 15, k= 15

lda= 105600, ldb= 15, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.754233 ms

xsmm-custom Time (libxsmm): 1.754233 ms

xsmm-custom No. of CPU cycles: 1754233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.7542333333333333

xsmm-custom avg execution time: 1.7542333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 225, 'a_rows': 15, 'a_size': 225, 'a_unique': 78, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9869458642901932, 'speedup_best_over_ref': 0.9869458642901932, 'xsmm_custom_avg': 1.7542333333333333, 'xsmm_custom_best': 1.7542333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.7313333333333332, 'xsmm_reference_best': 1.7313333333333332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m6.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 105600).

Output array: C (30, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.314900 ms

xsmm-reference Time (libxsmm): 3.314900 ms

xsmm-reference No. of CPU cycles: 3314900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.3149000000000002

xsmm-reference avg execution time: 3.3149000000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1186875416 cleaned_data/example_mats/tri/p4/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m6.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 105600).

Output array: C (30, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 15

lda= 105600, ldb= 15, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.481467 ms

xsmm-custom Time (libxsmm): 3.481500 ms

xsmm-custom No. of CPU cycles: 3481500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.4814666666666669

xsmm-custom avg execution time: 3.4814666666666669

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 300, 'a_rows': 30, 'a_size': 450, 'a_unique': 39, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9521561793879973, 'speedup_best_over_ref': 0.9521561793879973, 'xsmm_custom_avg': 3.481466666666667, 'xsmm_custom_best': 3.481466666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.3149, 'xsmm_reference_best': 3.3149, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m132.txt...

Read matrix has 15 rows and 30 columns.

Input arrays: A (15, 30), B (30, 105600).

Output array: C (15, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.366967 ms

xsmm-reference Time (libxsmm): 3.366967 ms

xsmm-reference No. of CPU cycles: 3366966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.3669666666666669

xsmm-reference avg execution time: 3.3669666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1611977771 cleaned_data/example_mats/tri/p4/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m132.txt...

Read matrix has 15 rows and 30 columns.

Input arrays: A (15, 30), B (30, 105600).

Output array: C (15, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 15, k= 30

lda= 105600, ldb= 30, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.453667 ms

xsmm-custom Time (libxsmm): 3.453667 ms

xsmm-custom No. of CPU cycles: 3453666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.4536666666666664

xsmm-custom avg execution time: 3.4536666666666664

Freeing A

Freeing B

Freeing C

{'a_cols': 30, 'a_nonzero': 432, 'a_rows': 15, 'a_size': 450, 'a_unique': 108, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9748962455361453, 'speedup_best_over_ref': 0.9748962455361453, 'xsmm_custom_avg': 3.4536666666666664, 'xsmm_custom_best': 3.4536666666666664, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.366966666666667, 'xsmm_reference_best': 3.366966666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m460.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 105600).

Output array: C (30, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.307033 ms

xsmm-reference Time (libxsmm): 3.307033 ms

xsmm-reference No. of CPU cycles: 3307033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.3070333333333335

xsmm-reference avg execution time: 3.3070333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 141379905 cleaned_data/example_mats/tri/p4/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m460.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 105600).

Output array: C (30, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 15

lda= 105600, ldb= 15, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.482033 ms

xsmm-custom Time (libxsmm): 3.482033 ms

xsmm-custom No. of CPU cycles: 3482033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.4820333333333333

xsmm-custom avg execution time: 3.4820333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 432, 'a_rows': 30, 'a_size': 450, 'a_unique': 108, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9497420089794277, 'speedup_best_over_ref': 0.9497420089794277, 'xsmm_custom_avg': 3.4820333333333333, 'xsmm_custom_best': 3.4820333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.3070333333333335, 'xsmm_reference_best': 3.3070333333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m0.txt...

Read matrix has 18 rows and 21 columns.

Input arrays: A (18, 21), B (21, 105600).

Output array: C (18, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.757900 ms

xsmm-reference Time (libxsmm): 2.757867 ms

xsmm-reference No. of CPU cycles: 2757866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.7578999999999998

xsmm-reference avg execution time: 2.7578999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1216998875 cleaned_data/example_mats/tri/p5/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m0.txt...

Read matrix has 18 rows and 21 columns.

Input arrays: A (18, 21), B (21, 105600).

Output array: C (18, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 21

lda= 105600, ldb= 21, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.864300 ms

xsmm-custom Time (libxsmm): 2.864267 ms

xsmm-custom No. of CPU cycles: 2864266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.8643000000000001

xsmm-custom avg execution time: 2.8643000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 378, 'a_rows': 18, 'a_size': 378, 'a_unique': 63, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9628530531019794, 'speedup_best_over_ref': 0.9628530531019794, 'xsmm_custom_avg': 2.8643, 'xsmm_custom_best': 2.8643, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.7579, 'xsmm_reference_best': 2.7579, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m3.txt...

Read matrix has 21 rows and 18 columns.

Input arrays: A (21, 18), B (18, 105600).

Output array: C (21, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.789733 ms

xsmm-reference Time (libxsmm): 2.789733 ms

xsmm-reference No. of CPU cycles: 2789733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.789733333333333

xsmm-reference avg execution time: 2.789733333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1108393965 cleaned_data/example_mats/tri/p5/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m3.txt...

Read matrix has 21 rows and 18 columns.

Input arrays: A (21, 18), B (18, 105600).

Output array: C (21, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 21, k= 18

lda= 105600, ldb= 18, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.900167 ms

xsmm-custom Time (libxsmm): 2.900167 ms

xsmm-custom No. of CPU cycles: 2900166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.9001666666666663

xsmm-custom avg execution time: 2.9001666666666663

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 378, 'a_rows': 21, 'a_size': 378, 'a_unique': 126, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9619217286362852, 'speedup_best_over_ref': 0.9619217286362852, 'xsmm_custom_avg': 2.9001666666666663, 'xsmm_custom_best': 2.9001666666666663, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.789733333333333, 'xsmm_reference_best': 2.789733333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m6.txt...

Read matrix has 42 rows and 18 columns.

Input arrays: A (42, 18), B (18, 105600).

Output array: C (42, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.983933 ms

xsmm-reference Time (libxsmm): 4.983933 ms

xsmm-reference No. of CPU cycles: 4983933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.9839333333333338

xsmm-reference avg execution time: 4.9839333333333338

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1334276028 cleaned_data/example_mats/tri/p5/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m6.txt...

Read matrix has 42 rows and 18 columns.

Input arrays: A (42, 18), B (18, 105600).

Output array: C (42, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 42, k= 18

lda= 105600, ldb= 18, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.123833 ms

xsmm-custom Time (libxsmm): 5.123800 ms

xsmm-custom No. of CPU cycles: 5123800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.1238333333333337

xsmm-custom avg execution time: 5.1238333333333337

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 504, 'a_rows': 42, 'a_size': 756, 'a_unique': 63, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9726962235305598, 'speedup_best_over_ref': 0.9726962235305598, 'xsmm_custom_avg': 5.123833333333334, 'xsmm_custom_best': 5.123833333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.983933333333334, 'xsmm_reference_best': 4.983933333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m132.txt...

Read matrix has 21 rows and 42 columns.

Input arrays: A (21, 42), B (42, 105600).

Output array: C (21, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.676500 ms

xsmm-reference Time (libxsmm): 5.676467 ms

xsmm-reference No. of CPU cycles: 5676466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.676499999999999

xsmm-reference avg execution time: 5.676499999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 763928264 cleaned_data/example_mats/tri/p5/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m132.txt...

Read matrix has 21 rows and 42 columns.

Input arrays: A (21, 42), B (42, 105600).

Output array: C (21, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 21, k= 42

lda= 105600, ldb= 42, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.696300 ms

xsmm-custom Time (libxsmm): 5.696300 ms

xsmm-custom No. of CPU cycles: 5696300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.6962999999999999

xsmm-custom avg execution time: 5.6962999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 42, 'a_nonzero': 864, 'a_rows': 21, 'a_size': 882, 'a_unique': 216, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9965240594772043, 'speedup_best_over_ref': 0.9965240594772043, 'xsmm_custom_avg': 5.6963, 'xsmm_custom_best': 5.6963, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.676499999999999, 'xsmm_reference_best': 5.676499999999999, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m460.txt...

Read matrix has 42 rows and 21 columns.

Input arrays: A (42, 21), B (21, 105600).

Output array: C (42, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.675467 ms

xsmm-reference Time (libxsmm): 5.675467 ms

xsmm-reference No. of CPU cycles: 5675466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.6754666666666669

xsmm-reference avg execution time: 5.6754666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 159988921 cleaned_data/example_mats/tri/p5/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m460.txt...

Read matrix has 42 rows and 21 columns.

Input arrays: A (42, 21), B (21, 105600).

Output array: C (42, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 42, k= 21

lda= 105600, ldb= 21, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.740400 ms

xsmm-custom Time (libxsmm): 5.740400 ms

xsmm-custom No. of CPU cycles: 5740400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.7403999999999993

xsmm-custom avg execution time: 5.7403999999999993

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 864, 'a_rows': 42, 'a_size': 882, 'a_unique': 216, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9886883608575479, 'speedup_best_over_ref': 0.9886883608575479, 'xsmm_custom_avg': 5.740399999999999, 'xsmm_custom_best': 5.740399999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.675466666666667, 'xsmm_reference_best': 5.675466666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m0.txt...

Read matrix has 21 rows and 28 columns.

Input arrays: A (21, 28), B (28, 105600).

Output array: C (21, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.058233 ms

xsmm-reference Time (libxsmm): 4.058233 ms

xsmm-reference No. of CPU cycles: 4058233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.0582333333333329

xsmm-reference avg execution time: 4.0582333333333329

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 349414962 cleaned_data/example_mats/tri/p6/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m0.txt...

Read matrix has 21 rows and 28 columns.

Input arrays: A (21, 28), B (28, 105600).

Output array: C (21, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 21, k= 28

lda= 105600, ldb= 28, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.404267 ms

xsmm-custom Time (libxsmm): 4.404267 ms

xsmm-custom No. of CPU cycles: 4404266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.4042666666666666

xsmm-custom avg execution time: 4.4042666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 588, 'a_rows': 21, 'a_size': 588, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m0.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9214322475175587, 'speedup_best_over_ref': 0.9214322475175587, 'xsmm_custom_avg': 4.4042666666666666, 'xsmm_custom_best': 4.4042666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.058233333333333, 'xsmm_reference_best': 4.058233333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m3.txt...

Read matrix has 28 rows and 21 columns.

Input arrays: A (28, 21), B (21, 105600).

Output array: C (28, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.979400 ms

xsmm-reference Time (libxsmm): 3.979400 ms

xsmm-reference No. of CPU cycles: 3979400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.9794

xsmm-reference avg execution time: 3.9794

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1643934075 cleaned_data/example_mats/tri/p6/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m3.txt...

Read matrix has 28 rows and 21 columns.

Input arrays: A (28, 21), B (21, 105600).

Output array: C (28, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 21

lda= 105600, ldb= 21, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.038533 ms

xsmm-custom Time (libxsmm): 4.038533 ms

xsmm-custom No. of CPU cycles: 4038533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.0385333333333335

xsmm-custom avg execution time: 4.0385333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 588, 'a_rows': 28, 'a_size': 588, 'a_unique': 200, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m3.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9853577206246492, 'speedup_best_over_ref': 0.9853577206246492, 'xsmm_custom_avg': 4.0385333333333335, 'xsmm_custom_best': 4.0385333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.9794, 'xsmm_reference_best': 3.9794, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m6.txt...

Read matrix has 56 rows and 21 columns.

Input arrays: A (56, 21), B (21, 105600).

Output array: C (56, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 7.533233 ms

xsmm-reference Time (libxsmm): 7.533233 ms

xsmm-reference No. of CPU cycles: 7533233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 7.5332333333333334

xsmm-reference avg execution time: 7.5332333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1597910362 cleaned_data/example_mats/tri/p6/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m6.txt...

Read matrix has 56 rows and 21 columns.

Input arrays: A (56, 21), B (21, 105600).

Output array: C (56, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 21

lda= 105600, ldb= 21, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 7.523333 ms

xsmm-custom Time (libxsmm): 7.523333 ms

xsmm-custom No. of CPU cycles: 7523333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 7.5233333333333325

xsmm-custom avg execution time: 7.5233333333333325

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 784, 'a_rows': 56, 'a_size': 1176, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m6.txt', 'size_n': 105600, 'speedup_avg_over_ref': 1.0013159060700045, 'speedup_best_over_ref': 1.0013159060700045, 'xsmm_custom_avg': 7.5233333333333325, 'xsmm_custom_best': 7.5233333333333325, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 7.5332333333333334, 'xsmm_reference_best': 7.5332333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m132.txt...

Read matrix has 28 rows and 56 columns.

Input arrays: A (28, 56), B (56, 105600).

Output array: C (28, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 9.515167 ms

xsmm-reference Time (libxsmm): 9.515167 ms

xsmm-reference No. of CPU cycles: 9515166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 9.5151666666666657

xsmm-reference avg execution time: 9.5151666666666657

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 1617408106 cleaned_data/example_mats/tri/p6/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m132.txt...

Read matrix has 28 rows and 56 columns.

Input arrays: A (28, 56), B (56, 105600).

Output array: C (28, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 56

lda= 105600, ldb= 56, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 9.577200 ms

xsmm-custom Time (libxsmm): 9.577167 ms

xsmm-custom No. of CPU cycles: 9577166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 9.5772000000000013

xsmm-custom avg execution time: 9.5772000000000013

Freeing A

Freeing B

Freeing C

{'a_cols': 56, 'a_nonzero': 1536, 'a_rows': 28, 'a_size': 1568, 'a_unique': 384, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m132.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9935228111208563, 'speedup_best_over_ref': 0.9935228111208563, 'xsmm_custom_avg': 9.577200000000001, 'xsmm_custom_best': 9.577200000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 9.515166666666666, 'xsmm_reference_best': 9.515166666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m460.txt...

Read matrix has 56 rows and 28 columns.

Input arrays: A (56, 28), B (28, 105600).

Output array: C (56, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 9.415933 ms

xsmm-reference Time (libxsmm): 9.415933 ms

xsmm-reference No. of CPU cycles: 9415933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 9.4159333333333333

xsmm-reference avg execution time: 9.4159333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 105600 494594739 cleaned_data/example_mats/tri/p6/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m460.txt...

Read matrix has 56 rows and 28 columns.

Input arrays: A (56, 28), B (28, 105600).

Output array: C (56, 105600).

Array B width (N): 105600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 28

lda= 105600, ldb= 28, ldc= 105600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 9.588400 ms

xsmm-custom Time (libxsmm): 9.588367 ms

xsmm-custom No. of CPU cycles: 9588366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 9.5884000000000018

xsmm-custom avg execution time: 9.5884000000000018

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 1536, 'a_rows': 56, 'a_size': 1568, 'a_unique': 384, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m460.txt', 'size_n': 105600, 'speedup_avg_over_ref': 0.9820129879159538, 'speedup_best_over_ref': 0.9820129879159538, 'xsmm_custom_avg': 9.588400000000002, 'xsmm_custom_best': 9.588400000000002, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 9.415933333333333, 'xsmm_reference_best': 9.415933333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
Average speedup (best) of custom over reference 0.9811236431533559
Average speedup (iqr avg) of custom over reference 0.9811236431533559
