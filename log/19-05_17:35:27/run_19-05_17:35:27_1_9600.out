run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m0.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 9600).

Output array: C (24, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.451433 ms

xsmm-reference Time (libxsmm): 0.451433 ms

xsmm-reference No. of CPU cycles: 451433

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.4514333333333333

xsmm-reference avg execution time: 0.4514333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 145029120 cleaned_data/example_mats/hex/p1/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m0.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 9600).

Output array: C (24, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 8

lda= 9600, ldb= 8, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.436333 ms

xsmm-custom Time (libxsmm): 0.436367 ms

xsmm-custom No. of CPU cycles: 436366

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.43633333333333335

xsmm-custom avg execution time: 0.43633333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 48, 'a_rows': 24, 'a_size': 192, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0346065699006874, 'speedup_best_over_ref': 1.0346065699006874, 'xsmm_custom_avg': 0.43633333333333335, 'xsmm_custom_best': 0.43633333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4514333333333333, 'xsmm_reference_best': 0.4514333333333333, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m3.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 9600).

Output array: C (8, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.098600 ms

xsmm-reference Time (libxsmm): 0.098600 ms

xsmm-reference No. of CPU cycles: 98600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.098600000000000007

xsmm-reference avg execution time: 0.098600000000000007

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1589945815 cleaned_data/example_mats/hex/p1/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m3.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 9600).

Output array: C (8, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 24

lda= 9600, ldb= 24, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.111533 ms

xsmm-custom Time (libxsmm): 0.111533 ms

xsmm-custom No. of CPU cycles: 111533

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.11153333333333333

xsmm-custom avg execution time: 0.11153333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 48, 'a_rows': 8, 'a_size': 192, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8840406455469217, 'speedup_best_over_ref': 0.8840406455469217, 'xsmm_custom_avg': 0.11153333333333333, 'xsmm_custom_best': 0.11153333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.09860000000000001, 'xsmm_reference_best': 0.09860000000000001, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m6.txt...

Read matrix has 24 rows and 24 columns.

Input arrays: A (24, 24), B (24, 9600).

Output array: C (24, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.293900 ms

xsmm-reference Time (libxsmm): 0.293900 ms

xsmm-reference No. of CPU cycles: 293900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.29389999999999999

xsmm-reference avg execution time: 0.29389999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 964358216 cleaned_data/example_mats/hex/p1/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m6.txt...

Read matrix has 24 rows and 24 columns.

Input arrays: A (24, 24), B (24, 9600).

Output array: C (24, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 24

lda= 9600, ldb= 24, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.292067 ms

xsmm-custom Time (libxsmm): 0.292067 ms

xsmm-custom No. of CPU cycles: 292066

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.2920666666666667

xsmm-custom avg execution time: 0.2920666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 48, 'a_rows': 24, 'a_size': 576, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.08333333333333333, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0062771056836337, 'speedup_best_over_ref': 1.0062771056836337, 'xsmm_custom_avg': 0.2920666666666667, 'xsmm_custom_best': 0.2920666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.2939, 'xsmm_reference_best': 0.2939, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m132.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 9600).

Output array: C (8, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.113767 ms

xsmm-reference Time (libxsmm): 0.113767 ms

xsmm-reference No. of CPU cycles: 113766

CPU clock speed (GHz): 0.999994

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.11376666666666665

xsmm-reference avg execution time: 0.11376666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1432505987 cleaned_data/example_mats/hex/p1/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m132.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 9600).

Output array: C (8, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 24

lda= 9600, ldb= 24, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.128267 ms

xsmm-custom Time (libxsmm): 0.128267 ms

xsmm-custom No. of CPU cycles: 128266

CPU clock speed (GHz): 0.999995

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.12826666666666667

xsmm-custom avg execution time: 0.12826666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 48, 'a_rows': 8, 'a_size': 192, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8869542619542619, 'speedup_best_over_ref': 0.8869542619542619, 'xsmm_custom_avg': 0.12826666666666667, 'xsmm_custom_best': 0.12826666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.11376666666666665, 'xsmm_reference_best': 0.11376666666666665, 'xsmm_reference_cpu_freq': 0.999995, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m460.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 9600).

Output array: C (24, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.108267 ms

xsmm-reference Time (libxsmm): 0.108267 ms

xsmm-reference No. of CPU cycles: 108266

CPU clock speed (GHz): 0.999994

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.10826666666666668

xsmm-reference avg execution time: 0.10826666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1153454019 cleaned_data/example_mats/hex/p1/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m460.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 9600).

Output array: C (24, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 8

lda= 9600, ldb= 8, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.120400 ms

xsmm-custom Time (libxsmm): 0.120400 ms

xsmm-custom No. of CPU cycles: 120400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.12040000000000001

xsmm-custom avg execution time: 0.12040000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 48, 'a_rows': 24, 'a_size': 192, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8992248062015504, 'speedup_best_over_ref': 0.8992248062015504, 'xsmm_custom_avg': 0.12040000000000001, 'xsmm_custom_best': 0.12040000000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.10826666666666668, 'xsmm_reference_best': 0.10826666666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 9600).

Output array: C (54, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.674067 ms

xsmm-reference Time (libxsmm): 0.674067 ms

xsmm-reference No. of CPU cycles: 674066

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.6740666666666667

xsmm-reference avg execution time: 0.6740666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2051022435 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 9600).

Output array: C (54, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 54, k= 27

lda= 9600, ldb= 27, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.627433 ms

xsmm-custom Time (libxsmm): 0.627433 ms

xsmm-custom No. of CPU cycles: 627433

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.6274333333333334

xsmm-custom avg execution time: 0.6274333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 54, 'a_rows': 54, 'a_size': 1458, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.037037037037037035, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0743239653615257, 'speedup_best_over_ref': 1.0743239653615257, 'xsmm_custom_avg': 0.6274333333333334, 'xsmm_custom_best': 0.6274333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6740666666666667, 'xsmm_reference_best': 0.6740666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 9600).

Output array: C (27, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.680800 ms

xsmm-reference Time (libxsmm): 0.680800 ms

xsmm-reference No. of CPU cycles: 680800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.68079999999999996

xsmm-reference avg execution time: 0.68079999999999996

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1346762696 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 9600).

Output array: C (27, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 54

lda= 9600, ldb= 54, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.608800 ms

xsmm-custom Time (libxsmm): 0.608800 ms

xsmm-custom No. of CPU cycles: 608800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.60880000000000001

xsmm-custom avg execution time: 0.60880000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 27, 'a_size': 1458, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.1182654402102497, 'speedup_best_over_ref': 1.1182654402102497, 'xsmm_custom_avg': 0.6088, 'xsmm_custom_best': 0.6088, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6808, 'xsmm_reference_best': 0.6808, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 9600).

Output array: C (81, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.859633 ms

xsmm-reference Time (libxsmm): 1.859633 ms

xsmm-reference No. of CPU cycles: 1859633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.8596333333333335

xsmm-reference avg execution time: 1.8596333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1896724151 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 9600).

Output array: C (81, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 54

lda= 9600, ldb= 54, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.765533 ms

xsmm-custom Time (libxsmm): 1.765533 ms

xsmm-custom No. of CPU cycles: 1765533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.7655333333333334

xsmm-custom avg execution time: 1.7655333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 81, 'a_size': 4374, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.037037037037037035, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0532983423328173, 'speedup_best_over_ref': 1.0532983423328173, 'xsmm_custom_avg': 1.7655333333333334, 'xsmm_custom_best': 1.7655333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.8596333333333335, 'xsmm_reference_best': 1.8596333333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 9600).

Output array: C (27, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.948700 ms

xsmm-reference Time (libxsmm): 0.948700 ms

xsmm-reference No. of CPU cycles: 948700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.94869999999999999

xsmm-reference avg execution time: 0.94869999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 375885715 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 9600).

Output array: C (27, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 81

lda= 9600, ldb= 81, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.893067 ms

xsmm-custom Time (libxsmm): 0.893067 ms

xsmm-custom No. of CPU cycles: 893066

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.89306666666666668

xsmm-custom avg execution time: 0.89306666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 81, 'a_nonzero': 216, 'a_rows': 27, 'a_size': 2187, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0622947148402508, 'speedup_best_over_ref': 1.0622947148402508, 'xsmm_custom_avg': 0.8930666666666667, 'xsmm_custom_best': 0.8930666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.9487, 'xsmm_reference_best': 0.9487, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 9600).

Output array: C (81, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.992067 ms

xsmm-reference Time (libxsmm): 0.992067 ms

xsmm-reference No. of CPU cycles: 992066

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.99206666666666665

xsmm-reference avg execution time: 0.99206666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 264567667 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 9600).

Output array: C (81, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 27

lda= 9600, ldb= 27, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.918800 ms

xsmm-custom Time (libxsmm): 0.918800 ms

xsmm-custom No. of CPU cycles: 918800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.91879999999999995

xsmm-custom avg execution time: 0.91879999999999995

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 216, 'a_rows': 81, 'a_size': 2187, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0797416920621101, 'speedup_best_over_ref': 1.0797416920621101, 'xsmm_custom_avg': 0.9188, 'xsmm_custom_best': 0.9188, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.9920666666666667, 'xsmm_reference_best': 0.9920666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 9600).

Output array: C (54, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.705767 ms

xsmm-reference Time (libxsmm): 0.705767 ms

xsmm-reference No. of CPU cycles: 705766

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.70576666666666665

xsmm-reference avg execution time: 0.70576666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1447652708 cleaned_data/example_mats/hex/p2/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 9600).

Output array: C (54, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 54, k= 27

lda= 9600, ldb= 27, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.623267 ms

xsmm-custom Time (libxsmm): 0.623267 ms

xsmm-custom No. of CPU cycles: 623266

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.62326666666666664

xsmm-custom avg execution time: 0.62326666666666664

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 162, 'a_rows': 54, 'a_size': 1458, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.1323670980853568, 'speedup_best_over_ref': 1.1323670980853568, 'xsmm_custom_avg': 0.6232666666666666, 'xsmm_custom_best': 0.6232666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.7057666666666667, 'xsmm_reference_best': 0.7057666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 9600).

Output array: C (27, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.662500 ms

xsmm-reference Time (libxsmm): 0.662500 ms

xsmm-reference No. of CPU cycles: 662500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.66249999999999998

xsmm-reference avg execution time: 0.66249999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1015875817 cleaned_data/example_mats/hex/p2/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 9600).

Output array: C (27, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 54

lda= 9600, ldb= 54, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.589300 ms

xsmm-custom Time (libxsmm): 0.589300 ms

xsmm-custom No. of CPU cycles: 589300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.58929999999999993

xsmm-custom avg execution time: 0.58929999999999993

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 27, 'a_size': 1458, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.1242151705413204, 'speedup_best_over_ref': 1.1242151705413204, 'xsmm_custom_avg': 0.5892999999999999, 'xsmm_custom_best': 0.5892999999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6625, 'xsmm_reference_best': 0.6625, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 9600).

Output array: C (81, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.875033 ms

xsmm-reference Time (libxsmm): 1.875033 ms

xsmm-reference No. of CPU cycles: 1875033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.8750333333333333

xsmm-reference avg execution time: 1.8750333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1213953649 cleaned_data/example_mats/hex/p2/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 9600).

Output array: C (81, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 54

lda= 9600, ldb= 54, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.767500 ms

xsmm-custom Time (libxsmm): 1.767500 ms

xsmm-custom No. of CPU cycles: 1767500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.7674999999999998

xsmm-custom avg execution time: 1.7674999999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 81, 'a_size': 4374, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.037037037037037035, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.060839226779821, 'speedup_best_over_ref': 1.060839226779821, 'xsmm_custom_avg': 1.7674999999999998, 'xsmm_custom_best': 1.7674999999999998, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.8750333333333333, 'xsmm_reference_best': 1.8750333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 9600).

Output array: C (27, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.955367 ms

xsmm-reference Time (libxsmm): 0.955367 ms

xsmm-reference No. of CPU cycles: 955366

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.9553666666666667

xsmm-reference avg execution time: 0.9553666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1967155593 cleaned_data/example_mats/hex/p2/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 9600).

Output array: C (27, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 81

lda= 9600, ldb= 81, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.890733 ms

xsmm-custom Time (libxsmm): 0.890733 ms

xsmm-custom No. of CPU cycles: 890733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.89073333333333338

xsmm-custom avg execution time: 0.89073333333333338

Freeing A

Freeing B

Freeing C

{'a_cols': 81, 'a_nonzero': 216, 'a_rows': 27, 'a_size': 2187, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.072561933986977, 'speedup_best_over_ref': 1.072561933986977, 'xsmm_custom_avg': 0.8907333333333334, 'xsmm_custom_best': 0.8907333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.9553666666666667, 'xsmm_reference_best': 0.9553666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 9600).

Output array: C (81, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.005833 ms

xsmm-reference Time (libxsmm): 1.005833 ms

xsmm-reference No. of CPU cycles: 1005833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.0058333333333334

xsmm-reference avg execution time: 1.0058333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1967653002 cleaned_data/example_mats/hex/p2/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 9600).

Output array: C (81, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 27

lda= 9600, ldb= 27, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.923567 ms

xsmm-custom Time (libxsmm): 0.923567 ms

xsmm-custom No. of CPU cycles: 923566

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.92356666666666665

xsmm-custom avg execution time: 0.92356666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 216, 'a_rows': 81, 'a_size': 2187, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0890749630057386, 'speedup_best_over_ref': 1.0890749630057386, 'xsmm_custom_avg': 0.9235666666666666, 'xsmm_custom_best': 0.9235666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.0058333333333334, 'xsmm_reference_best': 1.0058333333333334, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 9600).

Output array: C (96, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.692133 ms

xsmm-reference Time (libxsmm): 2.692100 ms

xsmm-reference No. of CPU cycles: 2692100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.692133333333333

xsmm-reference avg execution time: 2.692133333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1333950695 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 9600).

Output array: C (96, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 96, k= 64

lda= 9600, ldb= 64, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 96

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.543600 ms

xsmm-custom Time (libxsmm): 2.543600 ms

xsmm-custom No. of CPU cycles: 2543600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.5436000000000001

xsmm-custom avg execution time: 2.5436000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 96, 'a_rows': 96, 'a_size': 6144, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.015625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0583949258269119, 'speedup_best_over_ref': 1.0583949258269119, 'xsmm_custom_avg': 2.5436, 'xsmm_custom_best': 2.5436, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.692133333333333, 'xsmm_reference_best': 2.692133333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 9600).

Output array: C (64, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.540800 ms

xsmm-reference Time (libxsmm): 2.540800 ms

xsmm-reference No. of CPU cycles: 2540800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.5407999999999999

xsmm-reference avg execution time: 2.5407999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 537075369 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 9600).

Output array: C (64, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 96

lda= 9600, ldb= 96, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.524133 ms

xsmm-custom Time (libxsmm): 2.524133 ms

xsmm-custom No. of CPU cycles: 2524133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.5241333333333333

xsmm-custom avg execution time: 2.5241333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 64, 'a_size': 6144, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.006602926416988, 'speedup_best_over_ref': 1.006602926416988, 'xsmm_custom_avg': 2.5241333333333333, 'xsmm_custom_best': 2.5241333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.5408, 'xsmm_reference_best': 2.5408, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 9600).

Output array: C (192, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.365667 ms

xsmm-reference Time (libxsmm): 8.365633 ms

xsmm-reference No. of CPU cycles: 8365633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.3656666666666659

xsmm-reference avg execution time: 8.3656666666666659

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 352606124 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 9600).

Output array: C (192, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 96

lda= 9600, ldb= 96, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.174967 ms

xsmm-custom Time (libxsmm): 8.174967 ms

xsmm-custom No. of CPU cycles: 8174966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.1749666666666663

xsmm-custom avg execution time: 8.1749666666666663

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 192, 'a_size': 18432, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.020833333333333332, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.023327312241844, 'speedup_best_over_ref': 1.023327312241844, 'xsmm_custom_avg': 8.174966666666666, 'xsmm_custom_best': 8.174966666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.365666666666666, 'xsmm_reference_best': 8.365666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 9600).

Output array: C (64, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.025667 ms

xsmm-reference Time (libxsmm): 6.025667 ms

xsmm-reference No. of CPU cycles: 6025666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.0256666666666669

xsmm-reference avg execution time: 6.0256666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1230809474 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 9600).

Output array: C (64, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 192

lda= 9600, ldb= 192, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.877867 ms

xsmm-custom Time (libxsmm): 5.877767 ms

xsmm-custom No. of CPU cycles: 5877766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.8778666666666668

xsmm-custom avg execution time: 5.8778666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 192, 'a_nonzero': 672, 'a_rows': 64, 'a_size': 12288, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0546875, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0251451773886218, 'speedup_best_over_ref': 1.0251451773886218, 'xsmm_custom_avg': 5.877866666666667, 'xsmm_custom_best': 5.877866666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.025666666666667, 'xsmm_reference_best': 6.025666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 9600).

Output array: C (192, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.411967 ms

xsmm-reference Time (libxsmm): 5.412000 ms

xsmm-reference No. of CPU cycles: 5412000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.4119666666666673

xsmm-reference avg execution time: 5.4119666666666673

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1913795505 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 9600).

Output array: C (192, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 64

lda= 9600, ldb= 64, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.281533 ms

xsmm-custom Time (libxsmm): 5.281533 ms

xsmm-custom No. of CPU cycles: 5281533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.281533333333333

xsmm-custom avg execution time: 5.281533333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 672, 'a_rows': 192, 'a_size': 12288, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0546875, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0246961109778727, 'speedup_best_over_ref': 1.0246961109778727, 'xsmm_custom_avg': 5.281533333333333, 'xsmm_custom_best': 5.281533333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.411966666666667, 'xsmm_reference_best': 5.411966666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 9600).

Output array: C (96, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.663200 ms

xsmm-reference Time (libxsmm): 2.663200 ms

xsmm-reference No. of CPU cycles: 2663200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.6632000000000002

xsmm-reference avg execution time: 2.6632000000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1272257703 cleaned_data/example_mats/hex/p3/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 9600).

Output array: C (96, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 96, k= 64

lda= 9600, ldb= 64, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 96

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.543633 ms

xsmm-custom Time (libxsmm): 2.543633 ms

xsmm-custom No. of CPU cycles: 2543633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.5436333333333332

xsmm-custom avg execution time: 2.5436333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 384, 'a_rows': 96, 'a_size': 6144, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0470062509009423, 'speedup_best_over_ref': 1.0470062509009423, 'xsmm_custom_avg': 2.543633333333333, 'xsmm_custom_best': 2.543633333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.6632000000000002, 'xsmm_reference_best': 2.6632000000000002, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 9600).

Output array: C (64, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.641067 ms

xsmm-reference Time (libxsmm): 2.641067 ms

xsmm-reference No. of CPU cycles: 2641066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.6410666666666667

xsmm-reference avg execution time: 2.6410666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 705712487 cleaned_data/example_mats/hex/p3/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 9600).

Output array: C (64, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 96

lda= 9600, ldb= 96, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.519667 ms

xsmm-custom Time (libxsmm): 2.519633 ms

xsmm-custom No. of CPU cycles: 2519633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.5196666666666676

xsmm-custom avg execution time: 2.5196666666666676

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 64, 'a_size': 6144, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0481809763196186, 'speedup_best_over_ref': 1.0481809763196186, 'xsmm_custom_avg': 2.5196666666666676, 'xsmm_custom_best': 2.5196666666666676, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.6410666666666667, 'xsmm_reference_best': 2.6410666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 9600).

Output array: C (192, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.240167 ms

xsmm-reference Time (libxsmm): 8.240167 ms

xsmm-reference No. of CPU cycles: 8240166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.2401666666666671

xsmm-reference avg execution time: 8.2401666666666671

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 323455255 cleaned_data/example_mats/hex/p3/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 9600).

Output array: C (192, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 96

lda= 9600, ldb= 96, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.176933 ms

xsmm-custom Time (libxsmm): 8.176933 ms

xsmm-custom No. of CPU cycles: 8176933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.1769333333333325

xsmm-custom avg execution time: 8.1769333333333325

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 192, 'a_size': 18432, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.020833333333333332, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0077331354868166, 'speedup_best_over_ref': 1.0077331354868166, 'xsmm_custom_avg': 8.176933333333332, 'xsmm_custom_best': 8.176933333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.240166666666667, 'xsmm_reference_best': 8.240166666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 9600).

Output array: C (64, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.948767 ms

xsmm-reference Time (libxsmm): 5.948767 ms

xsmm-reference No. of CPU cycles: 5948766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.9487666666666668

xsmm-reference avg execution time: 5.9487666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1977999136 cleaned_data/example_mats/hex/p3/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 9600).

Output array: C (64, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 192

lda= 9600, ldb= 192, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.995500 ms

xsmm-custom Time (libxsmm): 5.995400 ms

xsmm-custom No. of CPU cycles: 5995400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.9955000000000007

xsmm-custom avg execution time: 5.9955000000000007

Freeing A

Freeing B

Freeing C

{'a_cols': 192, 'a_nonzero': 768, 'a_rows': 64, 'a_size': 12288, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9922052650599059, 'speedup_best_over_ref': 0.9922052650599059, 'xsmm_custom_avg': 5.995500000000001, 'xsmm_custom_best': 5.995500000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.948766666666667, 'xsmm_reference_best': 5.948766666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 9600).

Output array: C (192, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.361867 ms

xsmm-reference Time (libxsmm): 5.361867 ms

xsmm-reference No. of CPU cycles: 5361866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.3618666666666668

xsmm-reference avg execution time: 5.3618666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 945887995 cleaned_data/example_mats/hex/p3/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 9600).

Output array: C (192, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 64

lda= 9600, ldb= 64, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.265233 ms

xsmm-custom Time (libxsmm): 5.265233 ms

xsmm-custom No. of CPU cycles: 5265233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.2652333333333328

xsmm-custom avg execution time: 5.2652333333333328

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 768, 'a_rows': 192, 'a_size': 12288, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.018353096095773, 'speedup_best_over_ref': 1.018353096095773, 'xsmm_custom_avg': 5.265233333333333, 'xsmm_custom_best': 5.265233333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.361866666666667, 'xsmm_reference_best': 5.361866666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 9600).

Output array: C (150, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.167667 ms

xsmm-reference Time (libxsmm): 8.167667 ms

xsmm-reference No. of CPU cycles: 8167666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.1676666666666673

xsmm-reference avg execution time: 8.1676666666666673

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1242328959 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 9600).

Output array: C (150, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 150, k= 125

lda= 9600, ldb= 125, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.088767 ms

xsmm-custom Time (libxsmm): 8.088733 ms

xsmm-custom No. of CPU cycles: 8088733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.0887666666666664

xsmm-custom avg execution time: 8.0887666666666664

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 150, 'a_rows': 150, 'a_size': 18750, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.008, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0097542682650427, 'speedup_best_over_ref': 1.0097542682650427, 'xsmm_custom_avg': 8.088766666666666, 'xsmm_custom_best': 8.088766666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.167666666666667, 'xsmm_reference_best': 8.167666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 9600).

Output array: C (125, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.542067 ms

xsmm-reference Time (libxsmm): 8.541967 ms

xsmm-reference No. of CPU cycles: 8541966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.5420666666666669

xsmm-reference avg execution time: 8.5420666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1990970281 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 9600).

Output array: C (125, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 150

lda= 9600, ldb= 150, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.392667 ms

xsmm-custom Time (libxsmm): 8.392667 ms

xsmm-custom No. of CPU cycles: 8392666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.3926666666666669

xsmm-custom avg execution time: 8.3926666666666669

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 125, 'a_size': 18750, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0178012550639448, 'speedup_best_over_ref': 1.0178012550639448, 'xsmm_custom_avg': 8.392666666666667, 'xsmm_custom_best': 8.392666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.542066666666667, 'xsmm_reference_best': 8.542066666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 9600).

Output array: C (375, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 25.389333 ms

xsmm-reference Time (libxsmm): 25.389300 ms

xsmm-reference No. of CPU cycles: 25389300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 25.389333333333337

xsmm-reference avg execution time: 25.389333333333337

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1190403699 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 9600).

Output array: C (375, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 150

lda= 9600, ldb= 150, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 25.481200 ms

xsmm-custom Time (libxsmm): 25.481100 ms

xsmm-custom No. of CPU cycles: 25481100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 25.481200000000001

xsmm-custom avg execution time: 25.481200000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 375, 'a_size': 56250, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.013333333333333334, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9963947276161772, 'speedup_best_over_ref': 0.9963947276161772, 'xsmm_custom_avg': 25.4812, 'xsmm_custom_best': 25.4812, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 25.389333333333337, 'xsmm_reference_best': 25.389333333333337, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 9600).

Output array: C (125, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 24.875867 ms

xsmm-reference Time (libxsmm): 24.875833 ms

xsmm-reference No. of CPU cycles: 24875833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 24.875866666666671

xsmm-reference avg execution time: 24.875866666666671

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 498975395 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 9600).

Output array: C (125, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 375

lda= 9600, ldb= 375, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 24.842300 ms

xsmm-custom Time (libxsmm): 24.842300 ms

xsmm-custom No. of CPU cycles: 24842300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 24.842300000000002

xsmm-custom avg execution time: 24.842300000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 375, 'a_nonzero': 1650, 'a_rows': 125, 'a_size': 46875, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0352, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0013511899730165, 'speedup_best_over_ref': 1.0013511899730165, 'xsmm_custom_avg': 24.8423, 'xsmm_custom_best': 24.8423, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 24.87586666666667, 'xsmm_reference_best': 24.87586666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 9600).

Output array: C (375, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 20.820967 ms

xsmm-reference Time (libxsmm): 20.820967 ms

xsmm-reference No. of CPU cycles: 20820966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 20.820966666666667

xsmm-reference avg execution time: 20.820966666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1780407371 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 9600).

Output array: C (375, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 125

lda= 9600, ldb= 125, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 20.859400 ms

xsmm-custom Time (libxsmm): 20.859367 ms

xsmm-custom No. of CPU cycles: 20859366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 20.859399999999997

xsmm-custom avg execution time: 20.859399999999997

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 1650, 'a_rows': 375, 'a_size': 46875, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0352, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9981575053293321, 'speedup_best_over_ref': 0.9981575053293321, 'xsmm_custom_avg': 20.859399999999997, 'xsmm_custom_best': 20.859399999999997, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 20.820966666666667, 'xsmm_reference_best': 20.820966666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 9600).

Output array: C (150, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.125267 ms

xsmm-reference Time (libxsmm): 8.125233 ms

xsmm-reference No. of CPU cycles: 8125233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.1252666666666666

xsmm-reference avg execution time: 8.1252666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1903518024 cleaned_data/example_mats/hex/p4/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 9600).

Output array: C (150, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 150, k= 125

lda= 9600, ldb= 125, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.129733 ms

xsmm-custom Time (libxsmm): 8.129733 ms

xsmm-custom No. of CPU cycles: 8129733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.1297333333333359

xsmm-custom avg execution time: 8.1297333333333359

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 750, 'a_rows': 150, 'a_size': 18750, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9994505764846732, 'speedup_best_over_ref': 0.9994505764846732, 'xsmm_custom_avg': 8.129733333333336, 'xsmm_custom_best': 8.129733333333336, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.125266666666667, 'xsmm_reference_best': 8.125266666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 9600).

Output array: C (125, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.344967 ms

xsmm-reference Time (libxsmm): 8.344967 ms

xsmm-reference No. of CPU cycles: 8344966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.3449666666666662

xsmm-reference avg execution time: 8.3449666666666662

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 621196098 cleaned_data/example_mats/hex/p4/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 9600).

Output array: C (125, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 150

lda= 9600, ldb= 150, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.379967 ms

xsmm-custom Time (libxsmm): 8.379867 ms

xsmm-custom No. of CPU cycles: 8379866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.3799666666666663

xsmm-custom avg execution time: 8.3799666666666663

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 125, 'a_size': 18750, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9958233724080048, 'speedup_best_over_ref': 0.9958233724080048, 'xsmm_custom_avg': 8.379966666666666, 'xsmm_custom_best': 8.379966666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.344966666666666, 'xsmm_reference_best': 8.344966666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 9600).

Output array: C (375, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 25.249133 ms

xsmm-reference Time (libxsmm): 25.249100 ms

xsmm-reference No. of CPU cycles: 25249100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 25.249133333333329

xsmm-reference avg execution time: 25.249133333333329

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1317902262 cleaned_data/example_mats/hex/p4/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 9600).

Output array: C (375, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 150

lda= 9600, ldb= 150, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 25.414833 ms

xsmm-custom Time (libxsmm): 25.414833 ms

xsmm-custom No. of CPU cycles: 25414833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 25.414833333333331

xsmm-custom avg execution time: 25.414833333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 375, 'a_size': 56250, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.013333333333333334, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.993480185456, 'speedup_best_over_ref': 0.993480185456, 'xsmm_custom_avg': 25.41483333333333, 'xsmm_custom_best': 25.41483333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 25.24913333333333, 'xsmm_reference_best': 25.24913333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 9600).

Output array: C (125, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 24.675367 ms

xsmm-reference Time (libxsmm): 24.675333 ms

xsmm-reference No. of CPU cycles: 24675333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 24.675366666666665

xsmm-reference avg execution time: 24.675366666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 681228991 cleaned_data/example_mats/hex/p4/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 9600).

Output array: C (125, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 375

lda= 9600, ldb= 375, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 24.783400 ms

xsmm-custom Time (libxsmm): 24.783367 ms

xsmm-custom No. of CPU cycles: 24783366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 24.783399999999997

xsmm-custom avg execution time: 24.783399999999997

Freeing A

Freeing B

Freeing C

{'a_cols': 375, 'a_nonzero': 1800, 'a_rows': 125, 'a_size': 46875, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0384, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.995640899419235, 'speedup_best_over_ref': 0.995640899419235, 'xsmm_custom_avg': 24.783399999999997, 'xsmm_custom_best': 24.783399999999997, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 24.675366666666665, 'xsmm_reference_best': 24.675366666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 9600).

Output array: C (375, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 20.938133 ms

xsmm-reference Time (libxsmm): 20.938033 ms

xsmm-reference No. of CPU cycles: 20938033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 20.938133333333333

xsmm-reference avg execution time: 20.938133333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1464900575 cleaned_data/example_mats/hex/p4/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 9600).

Output array: C (375, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 125

lda= 9600, ldb= 125, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 20.803967 ms

xsmm-custom Time (libxsmm): 20.803967 ms

xsmm-custom No. of CPU cycles: 20803966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 20.803966666666668

xsmm-custom avg execution time: 20.803966666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 1800, 'a_rows': 375, 'a_size': 46875, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0384, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0064490906381636, 'speedup_best_over_ref': 1.0064490906381636, 'xsmm_custom_avg': 20.803966666666668, 'xsmm_custom_best': 20.803966666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 20.938133333333333, 'xsmm_reference_best': 20.938133333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 9600).

Output array: C (216, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 23.046200 ms

xsmm-reference Time (libxsmm): 23.046133 ms

xsmm-reference No. of CPU cycles: 23046133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 23.046199999999999

xsmm-reference avg execution time: 23.046199999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1073166944 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 9600).

Output array: C (216, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 9600, ldb= 216, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 23.101067 ms

xsmm-custom Time (libxsmm): 23.100933 ms

xsmm-custom No. of CPU cycles: 23100933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 23.101066666666668

xsmm-custom avg execution time: 23.101066666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 216, 'a_rows': 216, 'a_size': 46656, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.004629629629629629, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9976249292961941, 'speedup_best_over_ref': 0.9976249292961941, 'xsmm_custom_avg': 23.101066666666668, 'xsmm_custom_best': 23.101066666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 23.0462, 'xsmm_reference_best': 23.0462, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 9600).

Output array: C (216, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 22.982600 ms

xsmm-reference Time (libxsmm): 22.982567 ms

xsmm-reference No. of CPU cycles: 22982566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 22.982599999999998

xsmm-reference avg execution time: 22.982599999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1726385405 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 9600).

Output array: C (216, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 9600, ldb= 216, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 23.059033 ms

xsmm-custom Time (libxsmm): 23.059033 ms

xsmm-custom No. of CPU cycles: 23059033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 23.059033333333332

xsmm-custom avg execution time: 23.059033333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 216, 'a_size': 46656, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.996685319274731, 'speedup_best_over_ref': 0.996685319274731, 'xsmm_custom_avg': 23.059033333333332, 'xsmm_custom_best': 23.059033333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 22.982599999999998, 'xsmm_reference_best': 22.982599999999998, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 9600).

Output array: C (648, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 66.873533 ms

xsmm-reference Time (libxsmm): 66.873533 ms

xsmm-reference No. of CPU cycles: 66873533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 66.873533333333327

xsmm-reference avg execution time: 66.873533333333327

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1531431906 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 9600).

Output array: C (648, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 9600, ldb= 216, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 66.823233 ms

xsmm-custom Time (libxsmm): 66.823200 ms

xsmm-custom No. of CPU cycles: 66823200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 66.823233333333334

xsmm-custom avg execution time: 66.823233333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 648, 'a_size': 139968, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.009259259259259259, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0007527322084084, 'speedup_best_over_ref': 1.0007527322084084, 'xsmm_custom_avg': 66.82323333333333, 'xsmm_custom_best': 66.82323333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 66.87353333333333, 'xsmm_reference_best': 66.87353333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 9600).

Output array: C (216, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 71.232000 ms

xsmm-reference Time (libxsmm): 71.231967 ms

xsmm-reference No. of CPU cycles: 71231966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 71.231999999999999

xsmm-reference avg execution time: 71.231999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1320958310 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 9600).

Output array: C (216, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 648

lda= 9600, ldb= 648, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 71.454900 ms

xsmm-custom Time (libxsmm): 71.454867 ms

xsmm-custom No. of CPU cycles: 71454866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 71.454899999999995

xsmm-custom avg execution time: 71.454899999999995

Freeing A

Freeing B

Freeing C

{'a_cols': 648, 'a_nonzero': 3456, 'a_rows': 216, 'a_size': 139968, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.024691358024691357, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9968805498293329, 'speedup_best_over_ref': 0.9968805498293329, 'xsmm_custom_avg': 71.4549, 'xsmm_custom_best': 71.4549, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 71.232, 'xsmm_reference_best': 71.232, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 9600).

Output array: C (648, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 66.932500 ms

xsmm-reference Time (libxsmm): 66.932467 ms

xsmm-reference No. of CPU cycles: 66932466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 66.93249999999999

xsmm-reference avg execution time: 66.93249999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 995196227 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 9600).

Output array: C (648, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 9600, ldb= 216, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 66.722067 ms

xsmm-custom Time (libxsmm): 66.722033 ms

xsmm-custom No. of CPU cycles: 66722033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 66.722066666666663

xsmm-custom avg execution time: 66.722066666666663

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 3456, 'a_rows': 648, 'a_size': 139968, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.024691358024691357, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0031538791264458, 'speedup_best_over_ref': 1.0031538791264458, 'xsmm_custom_avg': 66.72206666666666, 'xsmm_custom_best': 66.72206666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 66.93249999999999, 'xsmm_reference_best': 66.93249999999999, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 9600).

Output array: C (216, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 23.084400 ms

xsmm-reference Time (libxsmm): 23.084367 ms

xsmm-reference No. of CPU cycles: 23084366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 23.084400000000002

xsmm-reference avg execution time: 23.084400000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1441566988 cleaned_data/example_mats/hex/p5/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 9600).

Output array: C (216, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 9600, ldb= 216, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 22.974733 ms

xsmm-custom Time (libxsmm): 22.974700 ms

xsmm-custom No. of CPU cycles: 22974700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 22.974733333333333

xsmm-custom avg execution time: 22.974733333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 216, 'a_size': 46656, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0047733597198083, 'speedup_best_over_ref': 1.0047733597198083, 'xsmm_custom_avg': 22.974733333333333, 'xsmm_custom_best': 22.974733333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 23.084400000000002, 'xsmm_reference_best': 23.084400000000002, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 9600).

Output array: C (216, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 23.057500 ms

xsmm-reference Time (libxsmm): 23.057467 ms

xsmm-reference No. of CPU cycles: 23057466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 23.057500000000001

xsmm-reference avg execution time: 23.057500000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 360056867 cleaned_data/example_mats/hex/p5/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 9600).

Output array: C (216, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 9600, ldb= 216, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 22.957400 ms

xsmm-custom Time (libxsmm): 22.957333 ms

xsmm-custom No. of CPU cycles: 22957333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 22.9574

xsmm-custom avg execution time: 22.9574

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 216, 'a_size': 46656, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0043602498540776, 'speedup_best_over_ref': 1.0043602498540776, 'xsmm_custom_avg': 22.9574, 'xsmm_custom_best': 22.9574, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 23.0575, 'xsmm_reference_best': 23.0575, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 9600).

Output array: C (648, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 66.748033 ms

xsmm-reference Time (libxsmm): 66.748033 ms

xsmm-reference No. of CPU cycles: 66748033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 66.748033333333339

xsmm-reference avg execution time: 66.748033333333339

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1873162756 cleaned_data/example_mats/hex/p5/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 9600).

Output array: C (648, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 9600, ldb= 216, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 66.811867 ms

xsmm-custom Time (libxsmm): 66.811833 ms

xsmm-custom No. of CPU cycles: 66811833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 66.81186666666666

xsmm-custom avg execution time: 66.81186666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 648, 'a_size': 139968, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.009259259259259259, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9990445809027939, 'speedup_best_over_ref': 0.9990445809027939, 'xsmm_custom_avg': 66.81186666666666, 'xsmm_custom_best': 66.81186666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 66.74803333333334, 'xsmm_reference_best': 66.74803333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 9600).

Output array: C (216, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 71.331633 ms

xsmm-reference Time (libxsmm): 71.331600 ms

xsmm-reference No. of CPU cycles: 71331600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 71.331633333333329

xsmm-reference avg execution time: 71.331633333333329

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 775634523 cleaned_data/example_mats/hex/p5/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 9600).

Output array: C (216, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 648

lda= 9600, ldb= 648, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 71.547633 ms

xsmm-custom Time (libxsmm): 71.547600 ms

xsmm-custom No. of CPU cycles: 71547600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 71.547633333333337

xsmm-custom avg execution time: 71.547633333333337

Freeing A

Freeing B

Freeing C

{'a_cols': 648, 'a_nonzero': 3888, 'a_rows': 216, 'a_size': 139968, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9969810322167655, 'speedup_best_over_ref': 0.9969810322167655, 'xsmm_custom_avg': 71.54763333333334, 'xsmm_custom_best': 71.54763333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 71.33163333333333, 'xsmm_reference_best': 71.33163333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 9600).

Output array: C (648, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 66.668633 ms

xsmm-reference Time (libxsmm): 66.668600 ms

xsmm-reference No. of CPU cycles: 66668600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 66.668633333333332

xsmm-reference avg execution time: 66.668633333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1456722374 cleaned_data/example_mats/hex/p5/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 9600).

Output array: C (648, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 9600, ldb= 216, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 66.807433 ms

xsmm-custom Time (libxsmm): 66.807433 ms

xsmm-custom No. of CPU cycles: 66807433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 66.807433333333336

xsmm-custom avg execution time: 66.807433333333336

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 3888, 'a_rows': 648, 'a_size': 139968, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9979223868801026, 'speedup_best_over_ref': 0.9979223868801026, 'xsmm_custom_avg': 66.80743333333334, 'xsmm_custom_best': 66.80743333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 66.66863333333333, 'xsmm_reference_best': 66.66863333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 9600).

Output array: C (294, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 50.314033 ms

xsmm-reference Time (libxsmm): 50.314000 ms

xsmm-reference No. of CPU cycles: 50314000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 50.314033333333334

xsmm-reference avg execution time: 50.314033333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2077478390 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 9600).

Output array: C (294, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 294, k= 343

lda= 9600, ldb= 343, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 50.415300 ms

xsmm-custom Time (libxsmm): 50.415300 ms

xsmm-custom No. of CPU cycles: 50415300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 50.415300000000002

xsmm-custom avg execution time: 50.415300000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 294, 'a_rows': 294, 'a_size': 100842, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0029154518950437317, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9979913505093361, 'speedup_best_over_ref': 0.9979913505093361, 'xsmm_custom_avg': 50.4153, 'xsmm_custom_best': 50.4153, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 50.314033333333334, 'xsmm_reference_best': 50.314033333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 9600).

Output array: C (343, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 50.212067 ms

xsmm-reference Time (libxsmm): 50.212033 ms

xsmm-reference No. of CPU cycles: 50212033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 50.212066666666672

xsmm-reference avg execution time: 50.212066666666672

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1619504151 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 9600).

Output array: C (343, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 294

lda= 9600, ldb= 294, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 50.127000 ms

xsmm-custom Time (libxsmm): 50.127000 ms

xsmm-custom No. of CPU cycles: 50127000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 50.126999999999995

xsmm-custom avg execution time: 50.126999999999995

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 343, 'a_size': 100842, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0016970228951798, 'speedup_best_over_ref': 1.0016970228951798, 'xsmm_custom_avg': 50.126999999999995, 'xsmm_custom_best': 50.126999999999995, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 50.21206666666667, 'xsmm_reference_best': 50.21206666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 9600).

Output array: C (1029, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 146.112400 ms

xsmm-reference Time (libxsmm): 146.112400 ms

xsmm-reference No. of CPU cycles: 146112400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 146.11240000000001

xsmm-reference avg execution time: 146.11240000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1786301376 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 9600).

Output array: C (1029, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 294

lda= 9600, ldb= 294, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 146.888433 ms

xsmm-custom Time (libxsmm): 146.888400 ms

xsmm-custom No. of CPU cycles: 146888400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 146.88843333333335

xsmm-custom avg execution time: 146.88843333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 1029, 'a_size': 302526, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.006802721088435374, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9947168519962882, 'speedup_best_over_ref': 0.9947168519962882, 'xsmm_custom_avg': 146.88843333333335, 'xsmm_custom_best': 146.88843333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 146.1124, 'xsmm_reference_best': 146.1124, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 9600).

Output array: C (343, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 173.371900 ms

xsmm-reference Time (libxsmm): 173.371900 ms

xsmm-reference No. of CPU cycles: 173371900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 173.37190000000001

xsmm-reference avg execution time: 173.37190000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 639530645 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 9600).

Output array: C (343, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 1029

lda= 9600, ldb= 1029, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 173.565600 ms

xsmm-custom Time (libxsmm): 173.565567 ms

xsmm-custom No. of CPU cycles: 173565566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 173.56559999999999

xsmm-custom avg execution time: 173.56559999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 1029, 'a_nonzero': 6468, 'a_rows': 343, 'a_size': 352947, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.018325697625989172, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9988839954461024, 'speedup_best_over_ref': 0.9988839954461024, 'xsmm_custom_avg': 173.5656, 'xsmm_custom_best': 173.5656, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 173.3719, 'xsmm_reference_best': 173.3719, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 9600).

Output array: C (1029, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 169.718433 ms

xsmm-reference Time (libxsmm): 169.718467 ms

xsmm-reference No. of CPU cycles: 169718466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 169.71843333333334

xsmm-reference avg execution time: 169.71843333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2008921496 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 9600).

Output array: C (1029, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 343

lda= 9600, ldb= 343, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 169.268800 ms

xsmm-custom Time (libxsmm): 169.268800 ms

xsmm-custom No. of CPU cycles: 169268800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 169.2688

xsmm-custom avg execution time: 169.2688

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 6468, 'a_rows': 1029, 'a_size': 352947, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.018325697625989172, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0026563272932363, 'speedup_best_over_ref': 1.0026563272932363, 'xsmm_custom_avg': 169.2688, 'xsmm_custom_best': 169.2688, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 169.71843333333334, 'xsmm_reference_best': 169.71843333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 9600).

Output array: C (294, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 50.406333 ms

xsmm-reference Time (libxsmm): 50.406300 ms

xsmm-reference No. of CPU cycles: 50406300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 50.406333333333336

xsmm-reference avg execution time: 50.406333333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1818422583 cleaned_data/example_mats/hex/p6/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 9600).

Output array: C (294, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 294, k= 343

lda= 9600, ldb= 343, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 50.289500 ms

xsmm-custom Time (libxsmm): 50.289500 ms

xsmm-custom No. of CPU cycles: 50289500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 50.289499999999997

xsmm-custom avg execution time: 50.289499999999997

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 2058, 'a_rows': 294, 'a_size': 100842, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0023232152503672, 'speedup_best_over_ref': 1.0023232152503672, 'xsmm_custom_avg': 50.2895, 'xsmm_custom_best': 50.2895, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 50.406333333333336, 'xsmm_reference_best': 50.406333333333336, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 9600).

Output array: C (343, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 50.125067 ms

xsmm-reference Time (libxsmm): 50.125033 ms

xsmm-reference No. of CPU cycles: 50125033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 50.125066666666662

xsmm-reference avg execution time: 50.125066666666662

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 530100270 cleaned_data/example_mats/hex/p6/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 9600).

Output array: C (343, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 294

lda= 9600, ldb= 294, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 50.087867 ms

xsmm-custom Time (libxsmm): 50.087833 ms

xsmm-custom No. of CPU cycles: 50087833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 50.087866666666663

xsmm-custom avg execution time: 50.087866666666663

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 343, 'a_size': 100842, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0007426948376053, 'speedup_best_over_ref': 1.0007426948376053, 'xsmm_custom_avg': 50.08786666666666, 'xsmm_custom_best': 50.08786666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 50.12506666666666, 'xsmm_reference_best': 50.12506666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 9600).

Output array: C (1029, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 146.427733 ms

xsmm-reference Time (libxsmm): 146.427700 ms

xsmm-reference No. of CPU cycles: 146427700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 146.42773333333335

xsmm-reference avg execution time: 146.42773333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1581382172 cleaned_data/example_mats/hex/p6/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 9600).

Output array: C (1029, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 294

lda= 9600, ldb= 294, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 146.586300 ms

xsmm-custom Time (libxsmm): 146.586267 ms

xsmm-custom No. of CPU cycles: 146586266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 146.58629999999999

xsmm-custom avg execution time: 146.58629999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 1029, 'a_size': 302526, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.006802721088435374, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9989182708979853, 'speedup_best_over_ref': 0.9989182708979853, 'xsmm_custom_avg': 146.5863, 'xsmm_custom_best': 146.5863, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 146.42773333333335, 'xsmm_reference_best': 146.42773333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 9600).

Output array: C (343, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 172.282700 ms

xsmm-reference Time (libxsmm): 172.282667 ms

xsmm-reference No. of CPU cycles: 172282666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 172.28270000000001

xsmm-reference avg execution time: 172.28270000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 129285901 cleaned_data/example_mats/hex/p6/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 9600).

Output array: C (343, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 1029

lda= 9600, ldb= 1029, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 172.438567 ms

xsmm-custom Time (libxsmm): 172.438533 ms

xsmm-custom No. of CPU cycles: 172438533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 172.43856666666667

xsmm-custom avg execution time: 172.43856666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 1029, 'a_nonzero': 7056, 'a_rows': 343, 'a_size': 352947, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.019991670137442734, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9990961032112499, 'speedup_best_over_ref': 0.9990961032112499, 'xsmm_custom_avg': 172.43856666666667, 'xsmm_custom_best': 172.43856666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 172.2827, 'xsmm_reference_best': 172.2827, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 9600).

Output array: C (1029, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 170.127267 ms

xsmm-reference Time (libxsmm): 170.127233 ms

xsmm-reference No. of CPU cycles: 170127233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 170.12726666666669

xsmm-reference avg execution time: 170.12726666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1805334921 cleaned_data/example_mats/hex/p6/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 9600).

Output array: C (1029, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 343

lda= 9600, ldb= 343, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 169.881833 ms

xsmm-custom Time (libxsmm): 169.881800 ms

xsmm-custom No. of CPU cycles: 169881800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 169.88183333333333

xsmm-custom avg execution time: 169.88183333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 7056, 'a_rows': 1029, 'a_size': 352947, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.019991670137442734, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.001444729718991, 'speedup_best_over_ref': 1.001444729718991, 'xsmm_custom_avg': 169.88183333333333, 'xsmm_custom_best': 169.88183333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 170.12726666666669, 'xsmm_reference_best': 170.12726666666669, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m0.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 9600).

Output array: C (8, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.027567 ms

xsmm-reference Time (libxsmm): 0.027567 ms

xsmm-reference No. of CPU cycles: 27566

CPU clock speed (GHz): 0.999976

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.027566666666666666

xsmm-reference avg execution time: 0.027566666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1768597860 cleaned_data/example_mats/quad/p1/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m0.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 9600).

Output array: C (8, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 4

lda= 9600, ldb= 4, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.034067 ms

xsmm-custom Time (libxsmm): 0.034067 ms

xsmm-custom No. of CPU cycles: 34066

CPU clock speed (GHz): 0.999980

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.034066666666666669

xsmm-custom avg execution time: 0.034066666666666669

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 16, 'a_rows': 8, 'a_size': 32, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8091976516634051, 'speedup_best_over_ref': 0.8091976516634051, 'xsmm_custom_avg': 0.03406666666666667, 'xsmm_custom_best': 0.03406666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.027566666666666666, 'xsmm_reference_best': 0.027566666666666666, 'xsmm_reference_cpu_freq': 0.99998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m3.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 9600).

Output array: C (4, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.024567 ms

xsmm-reference Time (libxsmm): 0.024567 ms

xsmm-reference No. of CPU cycles: 24566

CPU clock speed (GHz): 0.999973

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.024566666666666667

xsmm-reference avg execution time: 0.024566666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1393897225 cleaned_data/example_mats/quad/p1/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m3.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 9600).

Output array: C (4, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 8

lda= 9600, ldb= 8, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.030800 ms

xsmm-custom Time (libxsmm): 0.030767 ms

xsmm-custom No. of CPU cycles: 30766

CPU clock speed (GHz): 0.999978

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.030800000000000001

xsmm-custom avg execution time: 0.030800000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 16, 'a_rows': 4, 'a_size': 32, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.7976190476190476, 'speedup_best_over_ref': 0.7976190476190476, 'xsmm_custom_avg': 0.0308, 'xsmm_custom_best': 0.0308, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.024566666666666667, 'xsmm_reference_best': 0.024566666666666667, 'xsmm_reference_cpu_freq': 0.999978, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m6.txt...

Read matrix has 8 rows and 8 columns.

Input arrays: A (8, 8), B (8, 9600).

Output array: C (8, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.044600 ms

xsmm-reference Time (libxsmm): 0.044600 ms

xsmm-reference No. of CPU cycles: 44600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.044600000000000001

xsmm-reference avg execution time: 0.044600000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 576077331 cleaned_data/example_mats/quad/p1/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m6.txt...

Read matrix has 8 rows and 8 columns.

Input arrays: A (8, 8), B (8, 9600).

Output array: C (8, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 8

lda= 9600, ldb= 8, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.054333 ms

xsmm-custom Time (libxsmm): 0.054333 ms

xsmm-custom No. of CPU cycles: 54333

CPU clock speed (GHz): 0.999994

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.054333333333333331

xsmm-custom avg execution time: 0.054333333333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 16, 'a_rows': 8, 'a_size': 64, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8208588957055215, 'speedup_best_over_ref': 0.8208588957055215, 'xsmm_custom_avg': 0.05433333333333333, 'xsmm_custom_best': 0.05433333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.0446, 'xsmm_reference_best': 0.0446, 'xsmm_reference_cpu_freq': 0.999994, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m132.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 9600).

Output array: C (4, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.020433 ms

xsmm-reference Time (libxsmm): 0.020467 ms

xsmm-reference No. of CPU cycles: 20466

CPU clock speed (GHz): 0.999967

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.020433333333333335

xsmm-reference avg execution time: 0.020433333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 52955881 cleaned_data/example_mats/quad/p1/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m132.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 9600).

Output array: C (4, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 8

lda= 9600, ldb= 8, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.022833 ms

xsmm-custom Time (libxsmm): 0.022833 ms

xsmm-custom No. of CPU cycles: 22833

CPU clock speed (GHz): 0.999985

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.022833333333333334

xsmm-custom avg execution time: 0.022833333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 16, 'a_rows': 4, 'a_size': 32, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8948905109489051, 'speedup_best_over_ref': 0.8948905109489051, 'xsmm_custom_avg': 0.022833333333333334, 'xsmm_custom_best': 0.022833333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.020433333333333335, 'xsmm_reference_best': 0.020433333333333335, 'xsmm_reference_cpu_freq': 0.999985, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m460.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 9600).

Output array: C (8, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.027233 ms

xsmm-reference Time (libxsmm): 0.027233 ms

xsmm-reference No. of CPU cycles: 27233

CPU clock speed (GHz): 0.999988

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.027233333333333332

xsmm-reference avg execution time: 0.027233333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1529076170 cleaned_data/example_mats/quad/p1/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m460.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 9600).

Output array: C (8, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 4

lda= 9600, ldb= 4, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.034000 ms

xsmm-custom Time (libxsmm): 0.034000 ms

xsmm-custom No. of CPU cycles: 34000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.034000000000000002

xsmm-custom avg execution time: 0.034000000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 16, 'a_rows': 8, 'a_size': 32, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8009803921568627, 'speedup_best_over_ref': 0.8009803921568627, 'xsmm_custom_avg': 0.034, 'xsmm_custom_best': 0.034, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.02723333333333333, 'xsmm_reference_best': 0.02723333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 9600).

Output array: C (12, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.064300 ms

xsmm-reference Time (libxsmm): 0.064300 ms

xsmm-reference No. of CPU cycles: 64300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.064299999999999996

xsmm-reference avg execution time: 0.064299999999999996

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 358259305 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 9600).

Output array: C (12, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 9

lda= 9600, ldb= 9, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.073200 ms

xsmm-custom Time (libxsmm): 0.073200 ms

xsmm-custom No. of CPU cycles: 73200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.073200000000000001

xsmm-custom avg execution time: 0.073200000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 12, 'a_rows': 12, 'a_size': 108, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.878415300546448, 'speedup_best_over_ref': 0.878415300546448, 'xsmm_custom_avg': 0.0732, 'xsmm_custom_best': 0.0732, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.0643, 'xsmm_reference_best': 0.0643, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 9600).

Output array: C (9, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.062467 ms

xsmm-reference Time (libxsmm): 0.062467 ms

xsmm-reference No. of CPU cycles: 62466

CPU clock speed (GHz): 0.999989

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.06246666666666667

xsmm-reference avg execution time: 0.06246666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1816340108 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 9600).

Output array: C (9, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 12

lda= 9600, ldb= 12, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.071900 ms

xsmm-custom Time (libxsmm): 0.071900 ms

xsmm-custom No. of CPU cycles: 71900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.071900000000000006

xsmm-custom avg execution time: 0.071900000000000006

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 9, 'a_size': 108, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.3333333333333333, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8687992582290218, 'speedup_best_over_ref': 0.8687992582290218, 'xsmm_custom_avg': 0.0719, 'xsmm_custom_best': 0.0719, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.06246666666666667, 'xsmm_reference_best': 0.06246666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 9600).

Output array: C (18, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.121700 ms

xsmm-reference Time (libxsmm): 0.121700 ms

xsmm-reference No. of CPU cycles: 121700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.12169999999999999

xsmm-reference avg execution time: 0.12169999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 526634121 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 9600).

Output array: C (18, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 12

lda= 9600, ldb= 12, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.137567 ms

xsmm-custom Time (libxsmm): 0.137567 ms

xsmm-custom No. of CPU cycles: 137566

CPU clock speed (GHz): 0.999995

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.13756666666666667

xsmm-custom avg execution time: 0.13756666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 18, 'a_size': 216, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8846619820692996, 'speedup_best_over_ref': 0.8846619820692996, 'xsmm_custom_avg': 0.13756666666666667, 'xsmm_custom_best': 0.13756666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.12169999999999999, 'xsmm_reference_best': 0.12169999999999999, 'xsmm_reference_cpu_freq': 0.999995, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 9600).

Output array: C (9, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.083067 ms

xsmm-reference Time (libxsmm): 0.083067 ms

xsmm-reference No. of CPU cycles: 83066

CPU clock speed (GHz): 0.999992

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.083066666666666664

xsmm-reference avg execution time: 0.083066666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 752478332 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 9600).

Output array: C (9, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 18

lda= 9600, ldb= 18, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.093867 ms

xsmm-custom Time (libxsmm): 0.093867 ms

xsmm-custom No. of CPU cycles: 93866

CPU clock speed (GHz): 0.999993

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.093866666666666668

xsmm-custom avg execution time: 0.093866666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 48, 'a_rows': 9, 'a_size': 162, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8849431818181818, 'speedup_best_over_ref': 0.8849431818181818, 'xsmm_custom_avg': 0.09386666666666667, 'xsmm_custom_best': 0.09386666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.08306666666666666, 'xsmm_reference_best': 0.08306666666666666, 'xsmm_reference_cpu_freq': 0.999993, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 9600).

Output array: C (18, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.095667 ms

xsmm-reference Time (libxsmm): 0.095667 ms

xsmm-reference No. of CPU cycles: 95666

CPU clock speed (GHz): 0.999993

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.095666666666666664

xsmm-reference avg execution time: 0.095666666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1911769942 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 9600).

Output array: C (18, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 9

lda= 9600, ldb= 9, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.110467 ms

xsmm-custom Time (libxsmm): 0.110500 ms

xsmm-custom No. of CPU cycles: 110500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.11046666666666667

xsmm-custom avg execution time: 0.11046666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 48, 'a_rows': 18, 'a_size': 162, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8660229330114665, 'speedup_best_over_ref': 0.8660229330114665, 'xsmm_custom_avg': 0.11046666666666667, 'xsmm_custom_best': 0.11046666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.09566666666666666, 'xsmm_reference_best': 0.09566666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 9600).

Output array: C (12, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.056267 ms

xsmm-reference Time (libxsmm): 0.056267 ms

xsmm-reference No. of CPU cycles: 56266

CPU clock speed (GHz): 0.999988

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.056266666666666666

xsmm-reference avg execution time: 0.056266666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 73152328 cleaned_data/example_mats/quad/p2/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 9600).

Output array: C (12, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 9

lda= 9600, ldb= 9, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.063433 ms

xsmm-custom Time (libxsmm): 0.063433 ms

xsmm-custom No. of CPU cycles: 63433

CPU clock speed (GHz): 0.999995

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.063433333333333328

xsmm-custom avg execution time: 0.063433333333333328

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 36, 'a_rows': 12, 'a_size': 108, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.3333333333333333, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8870204939569102, 'speedup_best_over_ref': 0.8870204939569102, 'xsmm_custom_avg': 0.06343333333333333, 'xsmm_custom_best': 0.06343333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.056266666666666666, 'xsmm_reference_best': 0.056266666666666666, 'xsmm_reference_cpu_freq': 0.999995, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 9600).

Output array: C (9, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.058333 ms

xsmm-reference Time (libxsmm): 0.058333 ms

xsmm-reference No. of CPU cycles: 58333

CPU clock speed (GHz): 0.999994

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.058333333333333334

xsmm-reference avg execution time: 0.058333333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 315481594 cleaned_data/example_mats/quad/p2/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 9600).

Output array: C (9, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 12

lda= 9600, ldb= 12, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.066300 ms

xsmm-custom Time (libxsmm): 0.066300 ms

xsmm-custom No. of CPU cycles: 66300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.066299999999999998

xsmm-custom avg execution time: 0.066299999999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 9, 'a_size': 108, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.3333333333333333, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8798391151332329, 'speedup_best_over_ref': 0.8798391151332329, 'xsmm_custom_avg': 0.0663, 'xsmm_custom_best': 0.0663, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.058333333333333334, 'xsmm_reference_best': 0.058333333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 9600).

Output array: C (18, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.121367 ms

xsmm-reference Time (libxsmm): 0.121367 ms

xsmm-reference No. of CPU cycles: 121366

CPU clock speed (GHz): 0.999995

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.12136666666666666

xsmm-reference avg execution time: 0.12136666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 715539078 cleaned_data/example_mats/quad/p2/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 9600).

Output array: C (18, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 12

lda= 9600, ldb= 12, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.138167 ms

xsmm-custom Time (libxsmm): 0.138167 ms

xsmm-custom No. of CPU cycles: 138166

CPU clock speed (GHz): 0.999995

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.13816666666666666

xsmm-custom avg execution time: 0.13816666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 18, 'a_size': 216, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8784077201447528, 'speedup_best_over_ref': 0.8784077201447528, 'xsmm_custom_avg': 0.13816666666666666, 'xsmm_custom_best': 0.13816666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.12136666666666666, 'xsmm_reference_best': 0.12136666666666666, 'xsmm_reference_cpu_freq': 0.999995, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 9600).

Output array: C (9, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.088833 ms

xsmm-reference Time (libxsmm): 0.088833 ms

xsmm-reference No. of CPU cycles: 88833

CPU clock speed (GHz): 0.999996

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.088833333333333334

xsmm-reference avg execution time: 0.088833333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 918255169 cleaned_data/example_mats/quad/p2/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 9600).

Output array: C (9, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 18

lda= 9600, ldb= 18, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.101800 ms

xsmm-custom Time (libxsmm): 0.101800 ms

xsmm-custom No. of CPU cycles: 101800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.10179999999999999

xsmm-custom avg execution time: 0.10179999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 48, 'a_rows': 9, 'a_size': 162, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8726260641781272, 'speedup_best_over_ref': 0.8726260641781272, 'xsmm_custom_avg': 0.10179999999999999, 'xsmm_custom_best': 0.10179999999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.08883333333333333, 'xsmm_reference_best': 0.08883333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 9600).

Output array: C (18, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.094167 ms

xsmm-reference Time (libxsmm): 0.094167 ms

xsmm-reference No. of CPU cycles: 94166

CPU clock speed (GHz): 0.999993

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.094166666666666676

xsmm-reference avg execution time: 0.094166666666666676

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1412029622 cleaned_data/example_mats/quad/p2/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 9600).

Output array: C (18, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 9

lda= 9600, ldb= 9, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.110433 ms

xsmm-custom Time (libxsmm): 0.110433 ms

xsmm-custom No. of CPU cycles: 110433

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.11043333333333334

xsmm-custom avg execution time: 0.11043333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 48, 'a_rows': 18, 'a_size': 162, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8527014790220344, 'speedup_best_over_ref': 0.8527014790220344, 'xsmm_custom_avg': 0.11043333333333334, 'xsmm_custom_best': 0.11043333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.09416666666666668, 'xsmm_reference_best': 0.09416666666666668, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 9600).

Output array: C (16, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.138200 ms

xsmm-reference Time (libxsmm): 0.138200 ms

xsmm-reference No. of CPU cycles: 138200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.13819999999999999

xsmm-reference avg execution time: 0.13819999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 139814298 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 9600).

Output array: C (16, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 9600, ldb= 16, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.156300 ms

xsmm-custom Time (libxsmm): 0.156300 ms

xsmm-custom No. of CPU cycles: 156300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.15629999999999999

xsmm-custom avg execution time: 0.15629999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 16, 'a_rows': 16, 'a_size': 256, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8841970569417786, 'speedup_best_over_ref': 0.8841970569417786, 'xsmm_custom_avg': 0.1563, 'xsmm_custom_best': 0.1563, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.1382, 'xsmm_reference_best': 0.1382, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 9600).

Output array: C (16, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.120533 ms

xsmm-reference Time (libxsmm): 0.120533 ms

xsmm-reference No. of CPU cycles: 120533

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.12053333333333334

xsmm-reference avg execution time: 0.12053333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1941957180 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 9600).

Output array: C (16, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 9600, ldb= 16, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.125100 ms

xsmm-custom Time (libxsmm): 0.125100 ms

xsmm-custom No. of CPU cycles: 125100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.12510000000000002

xsmm-custom avg execution time: 0.12510000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 16, 'a_size': 256, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.96349586997069, 'speedup_best_over_ref': 0.96349586997069, 'xsmm_custom_avg': 0.12510000000000002, 'xsmm_custom_best': 0.12510000000000002, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.12053333333333334, 'xsmm_reference_best': 0.12053333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 9600).

Output array: C (32, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.228567 ms

xsmm-reference Time (libxsmm): 0.228567 ms

xsmm-reference No. of CPU cycles: 228566

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.22856666666666667

xsmm-reference avg execution time: 0.22856666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 819323418 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 9600).

Output array: C (32, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 9600, ldb= 16, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.235033 ms

xsmm-custom Time (libxsmm): 0.235033 ms

xsmm-custom No. of CPU cycles: 235033

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.23503333333333334

xsmm-custom avg execution time: 0.23503333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 32, 'a_size': 512, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.125, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9724861721741597, 'speedup_best_over_ref': 0.9724861721741597, 'xsmm_custom_avg': 0.23503333333333334, 'xsmm_custom_best': 0.23503333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.22856666666666667, 'xsmm_reference_best': 0.22856666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 9600).

Output array: C (16, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.241333 ms

xsmm-reference Time (libxsmm): 0.241333 ms

xsmm-reference No. of CPU cycles: 241333

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.24133333333333334

xsmm-reference avg execution time: 0.24133333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 989496177 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 9600).

Output array: C (16, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 32

lda= 9600, ldb= 32, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.254400 ms

xsmm-custom Time (libxsmm): 0.254400 ms

xsmm-custom No. of CPU cycles: 254400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.25440000000000002

xsmm-custom avg execution time: 0.25440000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 32, 'a_nonzero': 112, 'a_rows': 16, 'a_size': 512, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.21875, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9486373165618448, 'speedup_best_over_ref': 0.9486373165618448, 'xsmm_custom_avg': 0.2544, 'xsmm_custom_best': 0.2544, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.24133333333333334, 'xsmm_reference_best': 0.24133333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 9600).

Output array: C (32, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.283367 ms

xsmm-reference Time (libxsmm): 0.283367 ms

xsmm-reference No. of CPU cycles: 283366

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.28336666666666666

xsmm-reference avg execution time: 0.28336666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 447859136 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 9600).

Output array: C (32, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 9600, ldb= 16, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.287700 ms

xsmm-custom Time (libxsmm): 0.287700 ms

xsmm-custom No. of CPU cycles: 287700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.28770000000000001

xsmm-custom avg execution time: 0.28770000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 112, 'a_rows': 32, 'a_size': 512, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.21875, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9849380141350943, 'speedup_best_over_ref': 0.9849380141350943, 'xsmm_custom_avg': 0.2877, 'xsmm_custom_best': 0.2877, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.28336666666666666, 'xsmm_reference_best': 0.28336666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 9600).

Output array: C (16, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.149533 ms

xsmm-reference Time (libxsmm): 0.149533 ms

xsmm-reference No. of CPU cycles: 149533

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.14953333333333332

xsmm-reference avg execution time: 0.14953333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1244772435 cleaned_data/example_mats/quad/p3/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 9600).

Output array: C (16, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 9600, ldb= 16, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.156100 ms

xsmm-custom Time (libxsmm): 0.156100 ms

xsmm-custom No. of CPU cycles: 156100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.15609999999999999

xsmm-custom avg execution time: 0.15609999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 16, 'a_size': 256, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9579329489643391, 'speedup_best_over_ref': 0.9579329489643391, 'xsmm_custom_avg': 0.1561, 'xsmm_custom_best': 0.1561, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.14953333333333332, 'xsmm_reference_best': 0.14953333333333332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 9600).

Output array: C (16, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.137867 ms

xsmm-reference Time (libxsmm): 0.137867 ms

xsmm-reference No. of CPU cycles: 137866

CPU clock speed (GHz): 0.999995

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.13786666666666667

xsmm-reference avg execution time: 0.13786666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 290331528 cleaned_data/example_mats/quad/p3/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 9600).

Output array: C (16, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 9600, ldb= 16, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.156400 ms

xsmm-custom Time (libxsmm): 0.156400 ms

xsmm-custom No. of CPU cycles: 156400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.15640000000000001

xsmm-custom avg execution time: 0.15640000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 16, 'a_size': 256, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8815004262574594, 'speedup_best_over_ref': 0.8815004262574594, 'xsmm_custom_avg': 0.1564, 'xsmm_custom_best': 0.1564, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.13786666666666667, 'xsmm_reference_best': 0.13786666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 9600).

Output array: C (32, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.263067 ms

xsmm-reference Time (libxsmm): 0.263067 ms

xsmm-reference No. of CPU cycles: 263066

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.26306666666666667

xsmm-reference avg execution time: 0.26306666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 999935320 cleaned_data/example_mats/quad/p3/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 9600).

Output array: C (32, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 9600, ldb= 16, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.269833 ms

xsmm-custom Time (libxsmm): 0.269833 ms

xsmm-custom No. of CPU cycles: 269833

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.26983333333333337

xsmm-custom avg execution time: 0.26983333333333337

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 32, 'a_size': 512, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.125, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.974922791846819, 'speedup_best_over_ref': 0.974922791846819, 'xsmm_custom_avg': 0.26983333333333337, 'xsmm_custom_best': 0.26983333333333337, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.26306666666666667, 'xsmm_reference_best': 0.26306666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 9600).

Output array: C (16, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.252267 ms

xsmm-reference Time (libxsmm): 0.252267 ms

xsmm-reference No. of CPU cycles: 252266

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.25226666666666664

xsmm-reference avg execution time: 0.25226666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2038868307 cleaned_data/example_mats/quad/p3/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 9600).

Output array: C (16, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 32

lda= 9600, ldb= 32, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.262033 ms

xsmm-custom Time (libxsmm): 0.262033 ms

xsmm-custom No. of CPU cycles: 262033

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.26203333333333334

xsmm-custom avg execution time: 0.26203333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 32, 'a_nonzero': 128, 'a_rows': 16, 'a_size': 512, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9627273883729804, 'speedup_best_over_ref': 0.9627273883729804, 'xsmm_custom_avg': 0.26203333333333334, 'xsmm_custom_best': 0.26203333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.25226666666666664, 'xsmm_reference_best': 0.25226666666666664, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 9600).

Output array: C (32, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.265933 ms

xsmm-reference Time (libxsmm): 0.265933 ms

xsmm-reference No. of CPU cycles: 265933

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.2659333333333333

xsmm-reference avg execution time: 0.2659333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2051612302 cleaned_data/example_mats/quad/p3/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 9600).

Output array: C (32, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 9600, ldb= 16, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.274600 ms

xsmm-custom Time (libxsmm): 0.274600 ms

xsmm-custom No. of CPU cycles: 274600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.27460000000000001

xsmm-custom avg execution time: 0.27460000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 128, 'a_rows': 32, 'a_size': 512, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9684389414906529, 'speedup_best_over_ref': 0.9684389414906529, 'xsmm_custom_avg': 0.2746, 'xsmm_custom_best': 0.2746, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.2659333333333333, 'xsmm_reference_best': 0.2659333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 9600).

Output array: C (20, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.219367 ms

xsmm-reference Time (libxsmm): 0.219367 ms

xsmm-reference No. of CPU cycles: 219366

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.21936666666666668

xsmm-reference avg execution time: 0.21936666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1381987316 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 9600).

Output array: C (20, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 25

lda= 9600, ldb= 25, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.218733 ms

xsmm-custom Time (libxsmm): 0.218733 ms

xsmm-custom No. of CPU cycles: 218733

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.21873333333333334

xsmm-custom avg execution time: 0.21873333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 20, 'a_rows': 20, 'a_size': 500, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0028954587016154, 'speedup_best_over_ref': 1.0028954587016154, 'xsmm_custom_avg': 0.21873333333333334, 'xsmm_custom_best': 0.21873333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.21936666666666668, 'xsmm_reference_best': 0.21936666666666668, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 9600).

Output array: C (25, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.271633 ms

xsmm-reference Time (libxsmm): 0.271633 ms

xsmm-reference No. of CPU cycles: 271633

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.27163333333333328

xsmm-reference avg execution time: 0.27163333333333328

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1210786749 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 9600).

Output array: C (25, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 20

lda= 9600, ldb= 20, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.285733 ms

xsmm-custom Time (libxsmm): 0.285700 ms

xsmm-custom No. of CPU cycles: 285700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.28573333333333328

xsmm-custom avg execution time: 0.28573333333333328

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 25, 'a_size': 500, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9506532897806813, 'speedup_best_over_ref': 0.9506532897806813, 'xsmm_custom_avg': 0.2857333333333333, 'xsmm_custom_best': 0.2857333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.2716333333333333, 'xsmm_reference_best': 0.2716333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 9600).

Output array: C (50, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.511367 ms

xsmm-reference Time (libxsmm): 0.511367 ms

xsmm-reference No. of CPU cycles: 511366

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.51136666666666664

xsmm-reference avg execution time: 0.51136666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 946926308 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 9600).

Output array: C (50, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 20

lda= 9600, ldb= 20, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.459533 ms

xsmm-custom Time (libxsmm): 0.459533 ms

xsmm-custom No. of CPU cycles: 459533

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.45953333333333329

xsmm-custom avg execution time: 0.45953333333333329

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 50, 'a_size': 1000, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.1127955897287103, 'speedup_best_over_ref': 1.1127955897287103, 'xsmm_custom_avg': 0.4595333333333333, 'xsmm_custom_best': 0.4595333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5113666666666666, 'xsmm_reference_best': 0.5113666666666666, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 9600).

Output array: C (25, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.581367 ms

xsmm-reference Time (libxsmm): 0.581367 ms

xsmm-reference No. of CPU cycles: 581366

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.58136666666666659

xsmm-reference avg execution time: 0.58136666666666659

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 809954025 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 9600).

Output array: C (25, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 50

lda= 9600, ldb= 50, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.525233 ms

xsmm-custom Time (libxsmm): 0.525233 ms

xsmm-custom No. of CPU cycles: 525233

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.52523333333333333

xsmm-custom avg execution time: 0.52523333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 50, 'a_nonzero': 220, 'a_rows': 25, 'a_size': 1250, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.176, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.1068731357491908, 'speedup_best_over_ref': 1.1068731357491908, 'xsmm_custom_avg': 0.5252333333333333, 'xsmm_custom_best': 0.5252333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5813666666666666, 'xsmm_reference_best': 0.5813666666666666, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 9600).

Output array: C (50, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.569733 ms

xsmm-reference Time (libxsmm): 0.569733 ms

xsmm-reference No. of CPU cycles: 569733

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.56973333333333331

xsmm-reference avg execution time: 0.56973333333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 577022983 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 9600).

Output array: C (50, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 25

lda= 9600, ldb= 25, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.530500 ms

xsmm-custom Time (libxsmm): 0.530500 ms

xsmm-custom No. of CPU cycles: 530500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.53049999999999997

xsmm-custom avg execution time: 0.53049999999999997

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 220, 'a_rows': 50, 'a_size': 1250, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.176, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0739553879987433, 'speedup_best_over_ref': 1.0739553879987433, 'xsmm_custom_avg': 0.5305, 'xsmm_custom_best': 0.5305, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5697333333333333, 'xsmm_reference_best': 0.5697333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 9600).

Output array: C (20, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.252067 ms

xsmm-reference Time (libxsmm): 0.252067 ms

xsmm-reference No. of CPU cycles: 252066

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.25206666666666666

xsmm-reference avg execution time: 0.25206666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1068239059 cleaned_data/example_mats/quad/p4/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 9600).

Output array: C (20, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 25

lda= 9600, ldb= 25, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.262833 ms

xsmm-custom Time (libxsmm): 0.262833 ms

xsmm-custom No. of CPU cycles: 262833

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.26283333333333331

xsmm-custom avg execution time: 0.26283333333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 100, 'a_rows': 20, 'a_size': 500, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9590361445783133, 'speedup_best_over_ref': 0.9590361445783133, 'xsmm_custom_avg': 0.2628333333333333, 'xsmm_custom_best': 0.2628333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.25206666666666666, 'xsmm_reference_best': 0.25206666666666666, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 9600).

Output array: C (25, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.260867 ms

xsmm-reference Time (libxsmm): 0.260867 ms

xsmm-reference No. of CPU cycles: 260866

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.26086666666666664

xsmm-reference avg execution time: 0.26086666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1839763282 cleaned_data/example_mats/quad/p4/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 9600).

Output array: C (25, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 20

lda= 9600, ldb= 20, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.261367 ms

xsmm-custom Time (libxsmm): 0.261367 ms

xsmm-custom No. of CPU cycles: 261366

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.26136666666666669

xsmm-custom avg execution time: 0.26136666666666669

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 25, 'a_size': 500, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.998086978701696, 'speedup_best_over_ref': 0.998086978701696, 'xsmm_custom_avg': 0.2613666666666667, 'xsmm_custom_best': 0.2613666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.26086666666666664, 'xsmm_reference_best': 0.26086666666666664, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 9600).

Output array: C (50, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.476400 ms

xsmm-reference Time (libxsmm): 0.476400 ms

xsmm-reference No. of CPU cycles: 476400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.47639999999999999

xsmm-reference avg execution time: 0.47639999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1482961465 cleaned_data/example_mats/quad/p4/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 9600).

Output array: C (50, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 20

lda= 9600, ldb= 20, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.450500 ms

xsmm-custom Time (libxsmm): 0.450500 ms

xsmm-custom No. of CPU cycles: 450500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.45050000000000001

xsmm-custom avg execution time: 0.45050000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 50, 'a_size': 1000, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0574916759156492, 'speedup_best_over_ref': 1.0574916759156492, 'xsmm_custom_avg': 0.4505, 'xsmm_custom_best': 0.4505, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4764, 'xsmm_reference_best': 0.4764, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 9600).

Output array: C (25, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.556733 ms

xsmm-reference Time (libxsmm): 0.556733 ms

xsmm-reference No. of CPU cycles: 556733

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.55673333333333341

xsmm-reference avg execution time: 0.55673333333333341

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1774158927 cleaned_data/example_mats/quad/p4/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 9600).

Output array: C (25, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 50

lda= 9600, ldb= 50, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.512767 ms

xsmm-custom Time (libxsmm): 0.512767 ms

xsmm-custom No. of CPU cycles: 512766

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.51276666666666659

xsmm-custom avg execution time: 0.51276666666666659

Freeing A

Freeing B

Freeing C

{'a_cols': 50, 'a_nonzero': 240, 'a_rows': 25, 'a_size': 1250, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.192, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.085744003120328, 'speedup_best_over_ref': 1.085744003120328, 'xsmm_custom_avg': 0.5127666666666666, 'xsmm_custom_best': 0.5127666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5567333333333334, 'xsmm_reference_best': 0.5567333333333334, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 9600).

Output array: C (50, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.584433 ms

xsmm-reference Time (libxsmm): 0.584433 ms

xsmm-reference No. of CPU cycles: 584433

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.58443333333333336

xsmm-reference avg execution time: 0.58443333333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 673372854 cleaned_data/example_mats/quad/p4/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 9600).

Output array: C (50, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 25

lda= 9600, ldb= 25, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.529500 ms

xsmm-custom Time (libxsmm): 0.529500 ms

xsmm-custom No. of CPU cycles: 529500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.52949999999999997

xsmm-custom avg execution time: 0.52949999999999997

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 240, 'a_rows': 50, 'a_size': 1250, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.192, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.1037456720176269, 'speedup_best_over_ref': 1.1037456720176269, 'xsmm_custom_avg': 0.5295, 'xsmm_custom_best': 0.5295, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5844333333333334, 'xsmm_reference_best': 0.5844333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 9600).

Output array: C (24, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.445333 ms

xsmm-reference Time (libxsmm): 0.445333 ms

xsmm-reference No. of CPU cycles: 445333

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.4453333333333333

xsmm-reference avg execution time: 0.4453333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 311032098 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 9600).

Output array: C (24, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 36

lda= 9600, ldb= 36, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.445100 ms

xsmm-custom Time (libxsmm): 0.445100 ms

xsmm-custom No. of CPU cycles: 445100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.4451

xsmm-custom avg execution time: 0.4451

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 24, 'a_rows': 24, 'a_size': 864, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0005242267655208, 'speedup_best_over_ref': 1.0005242267655208, 'xsmm_custom_avg': 0.4451, 'xsmm_custom_best': 0.4451, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4453333333333333, 'xsmm_reference_best': 0.4453333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 9600).

Output array: C (36, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.454300 ms

xsmm-reference Time (libxsmm): 0.454300 ms

xsmm-reference No. of CPU cycles: 454300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.45429999999999998

xsmm-reference avg execution time: 0.45429999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 411295821 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 9600).

Output array: C (36, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 24

lda= 9600, ldb= 24, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.424100 ms

xsmm-custom Time (libxsmm): 0.424067 ms

xsmm-custom No. of CPU cycles: 424066

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.42410000000000003

xsmm-custom avg execution time: 0.42410000000000003

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 36, 'a_size': 864, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0712096203725536, 'speedup_best_over_ref': 1.0712096203725536, 'xsmm_custom_avg': 0.42410000000000003, 'xsmm_custom_best': 0.42410000000000003, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4543, 'xsmm_reference_best': 0.4543, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 9600).

Output array: C (72, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.727800 ms

xsmm-reference Time (libxsmm): 0.727800 ms

xsmm-reference No. of CPU cycles: 727800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.7278

xsmm-reference avg execution time: 0.7278

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1148245164 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 9600).

Output array: C (72, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 24

lda= 9600, ldb= 24, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.721600 ms

xsmm-custom Time (libxsmm): 0.721600 ms

xsmm-custom No. of CPU cycles: 721600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.72160000000000002

xsmm-custom avg execution time: 0.72160000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 72, 'a_size': 1728, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.08333333333333333, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0085920177383592, 'speedup_best_over_ref': 1.0085920177383592, 'xsmm_custom_avg': 0.7216, 'xsmm_custom_best': 0.7216, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.7278, 'xsmm_reference_best': 0.7278, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 9600).

Output array: C (36, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.076900 ms

xsmm-reference Time (libxsmm): 1.076900 ms

xsmm-reference No. of CPU cycles: 1076900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.0769

xsmm-reference avg execution time: 1.0769

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 64816726 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 9600).

Output array: C (36, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 72

lda= 9600, ldb= 72, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.062667 ms

xsmm-custom Time (libxsmm): 1.062667 ms

xsmm-custom No. of CPU cycles: 1062666

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.0626666666666666

xsmm-custom avg execution time: 1.0626666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 72, 'a_nonzero': 384, 'a_rows': 36, 'a_size': 2592, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14814814814814814, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0133939774153073, 'speedup_best_over_ref': 1.0133939774153073, 'xsmm_custom_avg': 1.0626666666666666, 'xsmm_custom_best': 1.0626666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.0769, 'xsmm_reference_best': 1.0769, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 9600).

Output array: C (72, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.118733 ms

xsmm-reference Time (libxsmm): 1.118733 ms

xsmm-reference No. of CPU cycles: 1118733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.1187333333333334

xsmm-reference avg execution time: 1.1187333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 713691613 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 9600).

Output array: C (72, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 36

lda= 9600, ldb= 36, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.075633 ms

xsmm-custom Time (libxsmm): 1.075633 ms

xsmm-custom No. of CPU cycles: 1075633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.0756333333333332

xsmm-custom avg execution time: 1.0756333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 384, 'a_rows': 72, 'a_size': 2592, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14814814814814814, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0400694164678175, 'speedup_best_over_ref': 1.0400694164678175, 'xsmm_custom_avg': 1.0756333333333332, 'xsmm_custom_best': 1.0756333333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.1187333333333334, 'xsmm_reference_best': 1.1187333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 9600).

Output array: C (24, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.413033 ms

xsmm-reference Time (libxsmm): 0.413033 ms

xsmm-reference No. of CPU cycles: 413033

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.41303333333333331

xsmm-reference avg execution time: 0.41303333333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 576047943 cleaned_data/example_mats/quad/p5/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 9600).

Output array: C (24, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 36

lda= 9600, ldb= 36, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.403533 ms

xsmm-custom Time (libxsmm): 0.403533 ms

xsmm-custom No. of CPU cycles: 403533

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.40353333333333335

xsmm-custom avg execution time: 0.40353333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 144, 'a_rows': 24, 'a_size': 864, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0235420452668098, 'speedup_best_over_ref': 1.0235420452668098, 'xsmm_custom_avg': 0.40353333333333335, 'xsmm_custom_best': 0.40353333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4130333333333333, 'xsmm_reference_best': 0.4130333333333333, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 9600).

Output array: C (36, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.425200 ms

xsmm-reference Time (libxsmm): 0.425200 ms

xsmm-reference No. of CPU cycles: 425200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.42520000000000002

xsmm-reference avg execution time: 0.42520000000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 175021964 cleaned_data/example_mats/quad/p5/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 9600).

Output array: C (36, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 24

lda= 9600, ldb= 24, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.391233 ms

xsmm-custom Time (libxsmm): 0.391233 ms

xsmm-custom No. of CPU cycles: 391233

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.39123333333333332

xsmm-custom avg execution time: 0.39123333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 36, 'a_size': 864, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0868194598278949, 'speedup_best_over_ref': 1.0868194598278949, 'xsmm_custom_avg': 0.3912333333333333, 'xsmm_custom_best': 0.3912333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4252, 'xsmm_reference_best': 0.4252, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 9600).

Output array: C (72, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.838233 ms

xsmm-reference Time (libxsmm): 0.838233 ms

xsmm-reference No. of CPU cycles: 838233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.83823333333333327

xsmm-reference avg execution time: 0.83823333333333327

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 47546368 cleaned_data/example_mats/quad/p5/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 9600).

Output array: C (72, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 24

lda= 9600, ldb= 24, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.728033 ms

xsmm-custom Time (libxsmm): 0.728033 ms

xsmm-custom No. of CPU cycles: 728033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.72803333333333342

xsmm-custom avg execution time: 0.72803333333333342

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 72, 'a_size': 1728, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.08333333333333333, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.1513666956641178, 'speedup_best_over_ref': 1.1513666956641178, 'xsmm_custom_avg': 0.7280333333333334, 'xsmm_custom_best': 0.7280333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.8382333333333333, 'xsmm_reference_best': 0.8382333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 9600).

Output array: C (36, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.103633 ms

xsmm-reference Time (libxsmm): 1.103633 ms

xsmm-reference No. of CPU cycles: 1103633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.1036333333333335

xsmm-reference avg execution time: 1.1036333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2086207610 cleaned_data/example_mats/quad/p5/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 9600).

Output array: C (36, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 72

lda= 9600, ldb= 72, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.060500 ms

xsmm-custom Time (libxsmm): 1.060500 ms

xsmm-custom No. of CPU cycles: 1060500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.0605

xsmm-custom avg execution time: 1.0605

Freeing A

Freeing B

Freeing C

{'a_cols': 72, 'a_nonzero': 432, 'a_rows': 36, 'a_size': 2592, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0406726386924408, 'speedup_best_over_ref': 1.0406726386924408, 'xsmm_custom_avg': 1.0605, 'xsmm_custom_best': 1.0605, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.1036333333333335, 'xsmm_reference_best': 1.1036333333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 9600).

Output array: C (72, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.134100 ms

xsmm-reference Time (libxsmm): 1.134100 ms

xsmm-reference No. of CPU cycles: 1134100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.1341000000000001

xsmm-reference avg execution time: 1.1341000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2114749440 cleaned_data/example_mats/quad/p5/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 9600).

Output array: C (72, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 36

lda= 9600, ldb= 36, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.074967 ms

xsmm-custom Time (libxsmm): 1.074967 ms

xsmm-custom No. of CPU cycles: 1074966

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.0749666666666668

xsmm-custom avg execution time: 1.0749666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 432, 'a_rows': 72, 'a_size': 2592, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0550094576576017, 'speedup_best_over_ref': 1.0550094576576017, 'xsmm_custom_avg': 1.0749666666666668, 'xsmm_custom_best': 1.0749666666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.1341, 'xsmm_reference_best': 1.1341, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 9600).

Output array: C (28, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.645567 ms

xsmm-reference Time (libxsmm): 0.645567 ms

xsmm-reference No. of CPU cycles: 645566

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.64556666666666673

xsmm-reference avg execution time: 0.64556666666666673

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1153204756 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 9600).

Output array: C (28, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 49

lda= 9600, ldb= 49, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.556633 ms

xsmm-custom Time (libxsmm): 0.556633 ms

xsmm-custom No. of CPU cycles: 556633

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.55663333333333342

xsmm-custom avg execution time: 0.55663333333333342

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 28, 'a_rows': 28, 'a_size': 1372, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.1597700461105456, 'speedup_best_over_ref': 1.1597700461105456, 'xsmm_custom_avg': 0.5566333333333334, 'xsmm_custom_best': 0.5566333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6455666666666667, 'xsmm_reference_best': 0.6455666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 9600).

Output array: C (49, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.622233 ms

xsmm-reference Time (libxsmm): 0.622233 ms

xsmm-reference No. of CPU cycles: 622233

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.62223333333333342

xsmm-reference avg execution time: 0.62223333333333342

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2003734287 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 9600).

Output array: C (49, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 28

lda= 9600, ldb= 28, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.577367 ms

xsmm-custom Time (libxsmm): 0.577367 ms

xsmm-custom No. of CPU cycles: 577366

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.57736666666666669

xsmm-custom avg execution time: 0.57736666666666669

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 49, 'a_size': 1372, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14285714285714285, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0777091391951967, 'speedup_best_over_ref': 1.0777091391951967, 'xsmm_custom_avg': 0.5773666666666667, 'xsmm_custom_best': 0.5773666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6222333333333334, 'xsmm_reference_best': 0.6222333333333334, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 9600).

Output array: C (98, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.281900 ms

xsmm-reference Time (libxsmm): 1.281900 ms

xsmm-reference No. of CPU cycles: 1281900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.2819

xsmm-reference avg execution time: 1.2819

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2117386996 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 9600).

Output array: C (98, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 28

lda= 9600, ldb= 28, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.148967 ms

xsmm-custom Time (libxsmm): 1.148967 ms

xsmm-custom No. of CPU cycles: 1148966

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.1489666666666667

xsmm-custom avg execution time: 1.1489666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 98, 'a_size': 2744, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.07142857142857142, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.1156981635672634, 'speedup_best_over_ref': 1.1156981635672634, 'xsmm_custom_avg': 1.1489666666666667, 'xsmm_custom_best': 1.1489666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.2819, 'xsmm_reference_best': 1.2819, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 9600).

Output array: C (49, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.005200 ms

xsmm-reference Time (libxsmm): 2.005167 ms

xsmm-reference No. of CPU cycles: 2005166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.0051999999999999

xsmm-reference avg execution time: 2.0051999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 708660109 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 9600).

Output array: C (49, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 98

lda= 9600, ldb= 98, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.928133 ms

xsmm-custom Time (libxsmm): 1.928167 ms

xsmm-custom No. of CPU cycles: 1928166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.9281333333333335

xsmm-custom avg execution time: 1.9281333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 98, 'a_nonzero': 616, 'a_rows': 49, 'a_size': 4802, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1282798833819242, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0399695733351773, 'speedup_best_over_ref': 1.0399695733351773, 'xsmm_custom_avg': 1.9281333333333335, 'xsmm_custom_best': 1.9281333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.0052, 'xsmm_reference_best': 2.0052, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 9600).

Output array: C (98, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.005867 ms

xsmm-reference Time (libxsmm): 2.005867 ms

xsmm-reference No. of CPU cycles: 2005866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.0058666666666669

xsmm-reference avg execution time: 2.0058666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1542027326 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 9600).

Output array: C (98, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 49

lda= 9600, ldb= 49, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.990567 ms

xsmm-custom Time (libxsmm): 1.990567 ms

xsmm-custom No. of CPU cycles: 1990566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.9905666666666666

xsmm-custom avg execution time: 1.9905666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 616, 'a_rows': 98, 'a_size': 4802, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1282798833819242, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0076862534956548, 'speedup_best_over_ref': 1.0076862534956548, 'xsmm_custom_avg': 1.9905666666666666, 'xsmm_custom_best': 1.9905666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.005866666666667, 'xsmm_reference_best': 2.005866666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 9600).

Output array: C (28, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.603533 ms

xsmm-reference Time (libxsmm): 0.603533 ms

xsmm-reference No. of CPU cycles: 603533

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.60353333333333337

xsmm-reference avg execution time: 0.60353333333333337

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 978370476 cleaned_data/example_mats/quad/p6/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 9600).

Output array: C (28, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 49

lda= 9600, ldb= 49, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.560800 ms

xsmm-custom Time (libxsmm): 0.560800 ms

xsmm-custom No. of CPU cycles: 560800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.56080000000000008

xsmm-custom avg execution time: 0.56080000000000008

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 196, 'a_rows': 28, 'a_size': 1372, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14285714285714285, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0762006657156442, 'speedup_best_over_ref': 1.0762006657156442, 'xsmm_custom_avg': 0.5608000000000001, 'xsmm_custom_best': 0.5608000000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6035333333333334, 'xsmm_reference_best': 0.6035333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 9600).

Output array: C (49, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.643867 ms

xsmm-reference Time (libxsmm): 0.643867 ms

xsmm-reference No. of CPU cycles: 643866

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.64386666666666659

xsmm-reference avg execution time: 0.64386666666666659

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1514883871 cleaned_data/example_mats/quad/p6/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 9600).

Output array: C (49, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 28

lda= 9600, ldb= 28, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.575467 ms

xsmm-custom Time (libxsmm): 0.575467 ms

xsmm-custom No. of CPU cycles: 575466

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.57546666666666668

xsmm-custom avg execution time: 0.57546666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 49, 'a_size': 1372, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14285714285714285, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.1188600556070434, 'speedup_best_over_ref': 1.1188600556070434, 'xsmm_custom_avg': 0.5754666666666667, 'xsmm_custom_best': 0.5754666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6438666666666666, 'xsmm_reference_best': 0.6438666666666666, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 9600).

Output array: C (98, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.212000 ms

xsmm-reference Time (libxsmm): 1.212000 ms

xsmm-reference No. of CPU cycles: 1212000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.212

xsmm-reference avg execution time: 1.212

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 993477458 cleaned_data/example_mats/quad/p6/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 9600).

Output array: C (98, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 28

lda= 9600, ldb= 28, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.151400 ms

xsmm-custom Time (libxsmm): 1.151400 ms

xsmm-custom No. of CPU cycles: 1151400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.1514000000000011

xsmm-custom avg execution time: 1.1514000000000011

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 98, 'a_size': 2744, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.07142857142857142, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0526315789473675, 'speedup_best_over_ref': 1.0526315789473675, 'xsmm_custom_avg': 1.151400000000001, 'xsmm_custom_best': 1.151400000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.212, 'xsmm_reference_best': 1.212, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 9600).

Output array: C (49, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.008433 ms

xsmm-reference Time (libxsmm): 2.008400 ms

xsmm-reference No. of CPU cycles: 2008400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.0084333333333335

xsmm-reference avg execution time: 2.0084333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2026531303 cleaned_data/example_mats/quad/p6/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 9600).

Output array: C (49, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 98

lda= 9600, ldb= 98, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.924000 ms

xsmm-custom Time (libxsmm): 1.924000 ms

xsmm-custom No. of CPU cycles: 1924000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.9239999999999999

xsmm-custom avg execution time: 1.9239999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 98, 'a_nonzero': 672, 'a_rows': 49, 'a_size': 4802, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.13994169096209913, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.043884268884269, 'speedup_best_over_ref': 1.043884268884269, 'xsmm_custom_avg': 1.924, 'xsmm_custom_best': 1.924, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.0084333333333335, 'xsmm_reference_best': 2.0084333333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 9600).

Output array: C (98, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.032967 ms

xsmm-reference Time (libxsmm): 2.032967 ms

xsmm-reference No. of CPU cycles: 2032966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.0329666666666664

xsmm-reference avg execution time: 2.0329666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 318983972 cleaned_data/example_mats/quad/p6/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 9600).

Output array: C (98, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 49

lda= 9600, ldb= 49, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.981333 ms

xsmm-custom Time (libxsmm): 1.981333 ms

xsmm-custom No. of CPU cycles: 1981333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.9813333333333332

xsmm-custom avg execution time: 1.9813333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 672, 'a_rows': 98, 'a_size': 4802, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.13994169096209913, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0260598923283983, 'speedup_best_over_ref': 1.0260598923283983, 'xsmm_custom_avg': 1.9813333333333332, 'xsmm_custom_best': 1.9813333333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.0329666666666664, 'xsmm_reference_best': 2.0329666666666664, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m0.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 9600).

Output array: C (12, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.037433 ms

xsmm-reference Time (libxsmm): 0.037433 ms

xsmm-reference No. of CPU cycles: 37433

CPU clock speed (GHz): 0.999991

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.037433333333333332

xsmm-reference avg execution time: 0.037433333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1496191610 cleaned_data/example_mats/tet/p1/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m0.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 9600).

Output array: C (12, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 4

lda= 9600, ldb= 4, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.043900 ms

xsmm-custom Time (libxsmm): 0.043900 ms

xsmm-custom No. of CPU cycles: 43900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.043900000000000002

xsmm-custom avg execution time: 0.043900000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 48, 'a_rows': 12, 'a_size': 48, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8526955201214882, 'speedup_best_over_ref': 0.8526955201214882, 'xsmm_custom_avg': 0.0439, 'xsmm_custom_best': 0.0439, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.03743333333333333, 'xsmm_reference_best': 0.03743333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m3.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 9600).

Output array: C (4, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.030533 ms

xsmm-reference Time (libxsmm): 0.030533 ms

xsmm-reference No. of CPU cycles: 30533

CPU clock speed (GHz): 0.999989

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.030533333333333336

xsmm-reference avg execution time: 0.030533333333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 913612543 cleaned_data/example_mats/tet/p1/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m3.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 9600).

Output array: C (4, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 12

lda= 9600, ldb= 12, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.035967 ms

xsmm-custom Time (libxsmm): 0.035967 ms

xsmm-custom No. of CPU cycles: 35966

CPU clock speed (GHz): 0.999981

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.035966666666666668

xsmm-custom avg execution time: 0.035966666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 48, 'a_rows': 4, 'a_size': 48, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8489341983317887, 'speedup_best_over_ref': 0.8489341983317887, 'xsmm_custom_avg': 0.03596666666666667, 'xsmm_custom_best': 0.03596666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.030533333333333336, 'xsmm_reference_best': 0.030533333333333336, 'xsmm_reference_cpu_freq': 0.999981, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m6.txt...

Read matrix has 12 rows and 12 columns.

Input arrays: A (12, 12), B (12, 9600).

Output array: C (12, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.068433 ms

xsmm-reference Time (libxsmm): 0.068433 ms

xsmm-reference No. of CPU cycles: 68433

CPU clock speed (GHz): 0.999995

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.068433333333333332

xsmm-reference avg execution time: 0.068433333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 123500969 cleaned_data/example_mats/tet/p1/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m6.txt...

Read matrix has 12 rows and 12 columns.

Input arrays: A (12, 12), B (12, 9600).

Output array: C (12, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 12

lda= 9600, ldb= 12, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.070000 ms

xsmm-custom Time (libxsmm): 0.070000 ms

xsmm-custom No. of CPU cycles: 70000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.070000000000000007

xsmm-custom avg execution time: 0.070000000000000007

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 72, 'a_rows': 12, 'a_size': 144, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9776190476190475, 'speedup_best_over_ref': 0.9776190476190475, 'xsmm_custom_avg': 0.07, 'xsmm_custom_best': 0.07, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.06843333333333333, 'xsmm_reference_best': 0.06843333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m132.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 9600).

Output array: C (4, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.027033 ms

xsmm-reference Time (libxsmm): 0.027033 ms

xsmm-reference No. of CPU cycles: 27033

CPU clock speed (GHz): 0.999988

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.027033333333333336

xsmm-reference avg execution time: 0.027033333333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 640192688 cleaned_data/example_mats/tet/p1/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m132.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 9600).

Output array: C (4, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 12

lda= 9600, ldb= 12, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.029100 ms

xsmm-custom Time (libxsmm): 0.029100 ms

xsmm-custom No. of CPU cycles: 29100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.029100000000000001

xsmm-custom avg execution time: 0.029100000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 24, 'a_rows': 4, 'a_size': 48, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9289805269186713, 'speedup_best_over_ref': 0.9289805269186713, 'xsmm_custom_avg': 0.0291, 'xsmm_custom_best': 0.0291, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.027033333333333336, 'xsmm_reference_best': 0.027033333333333336, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m460.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 9600).

Output array: C (12, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.033833 ms

xsmm-reference Time (libxsmm): 0.033800 ms

xsmm-reference No. of CPU cycles: 33800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.033833333333333333

xsmm-reference avg execution time: 0.033833333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1147547581 cleaned_data/example_mats/tet/p1/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m460.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 9600).

Output array: C (12, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 4

lda= 9600, ldb= 4, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.036100 ms

xsmm-custom Time (libxsmm): 0.036100 ms

xsmm-custom No. of CPU cycles: 36100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.0361

xsmm-custom avg execution time: 0.0361

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 24, 'a_rows': 12, 'a_size': 48, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9372114496768237, 'speedup_best_over_ref': 0.9372114496768237, 'xsmm_custom_avg': 0.0361, 'xsmm_custom_best': 0.0361, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.03383333333333333, 'xsmm_reference_best': 0.03383333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m0.txt...

Read matrix has 24 rows and 10 columns.

Input arrays: A (24, 10), B (10, 9600).

Output array: C (24, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.115833 ms

xsmm-reference Time (libxsmm): 0.115800 ms

xsmm-reference No. of CPU cycles: 115800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.11583333333333333

xsmm-reference avg execution time: 0.11583333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 170715791 cleaned_data/example_mats/tet/p2/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m0.txt...

Read matrix has 24 rows and 10 columns.

Input arrays: A (24, 10), B (10, 9600).

Output array: C (24, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 10

lda= 9600, ldb= 10, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.116367 ms

xsmm-custom Time (libxsmm): 0.116367 ms

xsmm-custom No. of CPU cycles: 116366

CPU clock speed (GHz): 0.999994

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.11636666666666667

xsmm-custom avg execution time: 0.11636666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 240, 'a_rows': 24, 'a_size': 240, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9954167860211973, 'speedup_best_over_ref': 0.9954167860211973, 'xsmm_custom_avg': 0.11636666666666667, 'xsmm_custom_best': 0.11636666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.11583333333333333, 'xsmm_reference_best': 0.11583333333333333, 'xsmm_reference_cpu_freq': 0.999994, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m3.txt...

Read matrix has 10 rows and 24 columns.

Input arrays: A (10, 24), B (24, 9600).

Output array: C (10, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.125033 ms

xsmm-reference Time (libxsmm): 0.125000 ms

xsmm-reference No. of CPU cycles: 125000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.12503333333333333

xsmm-reference avg execution time: 0.12503333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 456431450 cleaned_data/example_mats/tet/p2/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m3.txt...

Read matrix has 10 rows and 24 columns.

Input arrays: A (10, 24), B (24, 9600).

Output array: C (10, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 24

lda= 9600, ldb= 24, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.131000 ms

xsmm-custom Time (libxsmm): 0.131000 ms

xsmm-custom No. of CPU cycles: 131000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.13100000000000001

xsmm-custom avg execution time: 0.13100000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 240, 'a_rows': 10, 'a_size': 240, 'a_unique': 28, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9544529262086513, 'speedup_best_over_ref': 0.9544529262086513, 'xsmm_custom_avg': 0.131, 'xsmm_custom_best': 0.131, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.12503333333333333, 'xsmm_reference_best': 0.12503333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m6.txt...

Read matrix has 30 rows and 24 columns.

Input arrays: A (30, 24), B (24, 9600).

Output array: C (30, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.309233 ms

xsmm-reference Time (libxsmm): 0.309233 ms

xsmm-reference No. of CPU cycles: 309233

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.3092333333333333

xsmm-reference avg execution time: 0.3092333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2145232357 cleaned_data/example_mats/tet/p2/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m6.txt...

Read matrix has 30 rows and 24 columns.

Input arrays: A (30, 24), B (24, 9600).

Output array: C (30, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 24

lda= 9600, ldb= 24, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.300500 ms

xsmm-custom Time (libxsmm): 0.300500 ms

xsmm-custom No. of CPU cycles: 300500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.30050000000000004

xsmm-custom avg execution time: 0.30050000000000004

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 360, 'a_rows': 30, 'a_size': 720, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0290626733222406, 'speedup_best_over_ref': 1.0290626733222406, 'xsmm_custom_avg': 0.30050000000000004, 'xsmm_custom_best': 0.30050000000000004, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.3092333333333333, 'xsmm_reference_best': 0.3092333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m132.txt...

Read matrix has 10 rows and 30 columns.

Input arrays: A (10, 30), B (30, 9600).

Output array: C (10, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.154033 ms

xsmm-reference Time (libxsmm): 0.154033 ms

xsmm-reference No. of CPU cycles: 154033

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.15403333333333336

xsmm-reference avg execution time: 0.15403333333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2103840143 cleaned_data/example_mats/tet/p2/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m132.txt...

Read matrix has 10 rows and 30 columns.

Input arrays: A (10, 30), B (30, 9600).

Output array: C (10, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 30

lda= 9600, ldb= 30, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.172733 ms

xsmm-custom Time (libxsmm): 0.172733 ms

xsmm-custom No. of CPU cycles: 172733

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.17273333333333335

xsmm-custom avg execution time: 0.17273333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 30, 'a_nonzero': 252, 'a_rows': 10, 'a_size': 300, 'a_unique': 23, 'alpha': 1.0, 'beta': 0.0, 'density': 0.84, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8917406406792745, 'speedup_best_over_ref': 0.8917406406792745, 'xsmm_custom_avg': 0.17273333333333335, 'xsmm_custom_best': 0.17273333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.15403333333333336, 'xsmm_reference_best': 0.15403333333333336, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m460.txt...

Read matrix has 30 rows and 10 columns.

Input arrays: A (30, 10), B (10, 9600).

Output array: C (30, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.171033 ms

xsmm-reference Time (libxsmm): 0.171033 ms

xsmm-reference No. of CPU cycles: 171033

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.17103333333333334

xsmm-reference avg execution time: 0.17103333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1832799554 cleaned_data/example_mats/tet/p2/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m460.txt...

Read matrix has 30 rows and 10 columns.

Input arrays: A (30, 10), B (10, 9600).

Output array: C (30, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 10

lda= 9600, ldb= 10, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.175233 ms

xsmm-custom Time (libxsmm): 0.175233 ms

xsmm-custom No. of CPU cycles: 175233

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.17523333333333332

xsmm-custom avg execution time: 0.17523333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 252, 'a_rows': 30, 'a_size': 300, 'a_unique': 23, 'alpha': 1.0, 'beta': 0.0, 'density': 0.84, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9760319573901466, 'speedup_best_over_ref': 0.9760319573901466, 'xsmm_custom_avg': 0.17523333333333332, 'xsmm_custom_best': 0.17523333333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.17103333333333334, 'xsmm_reference_best': 0.17103333333333334, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m0.txt...

Read matrix has 40 rows and 20 columns.

Input arrays: A (40, 20), B (20, 9600).

Output array: C (40, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.401200 ms

xsmm-reference Time (libxsmm): 0.401167 ms

xsmm-reference No. of CPU cycles: 401166

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.4012

xsmm-reference avg execution time: 0.4012

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 763733469 cleaned_data/example_mats/tet/p3/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m0.txt...

Read matrix has 40 rows and 20 columns.

Input arrays: A (40, 20), B (20, 9600).

Output array: C (40, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 40, k= 20

lda= 9600, ldb= 20, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 40

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.381333 ms

xsmm-custom Time (libxsmm): 0.381333 ms

xsmm-custom No. of CPU cycles: 381333

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.3813333333333333

xsmm-custom avg execution time: 0.3813333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 800, 'a_rows': 40, 'a_size': 800, 'a_unique': 40, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0520979020979022, 'speedup_best_over_ref': 1.0520979020979022, 'xsmm_custom_avg': 0.3813333333333333, 'xsmm_custom_best': 0.3813333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4012, 'xsmm_reference_best': 0.4012, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m3.txt...

Read matrix has 20 rows and 40 columns.

Input arrays: A (20, 40), B (40, 9600).

Output array: C (20, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.359600 ms

xsmm-reference Time (libxsmm): 0.359600 ms

xsmm-reference No. of CPU cycles: 359600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.35960000000000003

xsmm-reference avg execution time: 0.35960000000000003

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 791922222 cleaned_data/example_mats/tet/p3/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m3.txt...

Read matrix has 20 rows and 40 columns.

Input arrays: A (20, 40), B (40, 9600).

Output array: C (20, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 40

lda= 9600, ldb= 40, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.351533 ms

xsmm-custom Time (libxsmm): 0.351533 ms

xsmm-custom No. of CPU cycles: 351533

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.35153333333333331

xsmm-custom avg execution time: 0.35153333333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 40, 'a_nonzero': 800, 'a_rows': 20, 'a_size': 800, 'a_unique': 80, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0229470889436756, 'speedup_best_over_ref': 1.0229470889436756, 'xsmm_custom_avg': 0.3515333333333333, 'xsmm_custom_best': 0.3515333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.35960000000000003, 'xsmm_reference_best': 0.35960000000000003, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m6.txt...

Read matrix has 60 rows and 40 columns.

Input arrays: A (60, 40), B (40, 9600).

Output array: C (60, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.048533 ms

xsmm-reference Time (libxsmm): 1.048533 ms

xsmm-reference No. of CPU cycles: 1048533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.0485333333333333

xsmm-reference avg execution time: 1.0485333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2079046547 cleaned_data/example_mats/tet/p3/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m6.txt...

Read matrix has 60 rows and 40 columns.

Input arrays: A (60, 40), B (40, 9600).

Output array: C (60, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 60, k= 40

lda= 9600, ldb= 40, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.977600 ms

xsmm-custom Time (libxsmm): 0.977600 ms

xsmm-custom No. of CPU cycles: 977600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.97760000000000002

xsmm-custom avg execution time: 0.97760000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 40, 'a_nonzero': 1200, 'a_rows': 60, 'a_size': 2400, 'a_unique': 40, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.072558647026732, 'speedup_best_over_ref': 1.072558647026732, 'xsmm_custom_avg': 0.9776, 'xsmm_custom_best': 0.9776, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.0485333333333333, 'xsmm_reference_best': 1.0485333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m132.txt...

Read matrix has 20 rows and 60 columns.

Input arrays: A (20, 60), B (60, 9600).

Output array: C (20, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.528067 ms

xsmm-reference Time (libxsmm): 0.528067 ms

xsmm-reference No. of CPU cycles: 528066

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.52806666666666668

xsmm-reference avg execution time: 0.52806666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2103843142 cleaned_data/example_mats/tet/p3/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m132.txt...

Read matrix has 20 rows and 60 columns.

Input arrays: A (20, 60), B (60, 9600).

Output array: C (20, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 60

lda= 9600, ldb= 60, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.508400 ms

xsmm-custom Time (libxsmm): 0.508400 ms

xsmm-custom No. of CPU cycles: 508400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.50840000000000007

xsmm-custom avg execution time: 0.50840000000000007

Freeing A

Freeing B

Freeing C

{'a_cols': 60, 'a_nonzero': 1092, 'a_rows': 20, 'a_size': 1200, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 0.91, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0386834513506424, 'speedup_best_over_ref': 1.0386834513506424, 'xsmm_custom_avg': 0.5084000000000001, 'xsmm_custom_best': 0.5084000000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5280666666666667, 'xsmm_reference_best': 0.5280666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m460.txt...

Read matrix has 60 rows and 20 columns.

Input arrays: A (60, 20), B (20, 9600).

Output array: C (60, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.560400 ms

xsmm-reference Time (libxsmm): 0.560400 ms

xsmm-reference No. of CPU cycles: 560400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.56040000000000001

xsmm-reference avg execution time: 0.56040000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1623318456 cleaned_data/example_mats/tet/p3/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m460.txt...

Read matrix has 60 rows and 20 columns.

Input arrays: A (60, 20), B (20, 9600).

Output array: C (60, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 60, k= 20

lda= 9600, ldb= 20, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.525367 ms

xsmm-custom Time (libxsmm): 0.525333 ms

xsmm-custom No. of CPU cycles: 525333

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.52536666666666665

xsmm-custom avg execution time: 0.52536666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 1092, 'a_rows': 60, 'a_size': 1200, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 0.91, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.066683586066874, 'speedup_best_over_ref': 1.066683586066874, 'xsmm_custom_avg': 0.5253666666666666, 'xsmm_custom_best': 0.5253666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5604, 'xsmm_reference_best': 0.5604, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m0.txt...

Read matrix has 60 rows and 35 columns.

Input arrays: A (60, 35), B (35, 9600).

Output array: C (60, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.929500 ms

xsmm-reference Time (libxsmm): 0.929500 ms

xsmm-reference No. of CPU cycles: 929500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.9295000000000001

xsmm-reference avg execution time: 0.9295000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1680842664 cleaned_data/example_mats/tet/p4/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m0.txt...

Read matrix has 60 rows and 35 columns.

Input arrays: A (60, 35), B (35, 9600).

Output array: C (60, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 60, k= 35

lda= 9600, ldb= 35, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.870100 ms

xsmm-custom Time (libxsmm): 0.870100 ms

xsmm-custom No. of CPU cycles: 870100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.8701000000000001

xsmm-custom avg execution time: 0.8701000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 35, 'a_nonzero': 2100, 'a_rows': 60, 'a_size': 2100, 'a_unique': 101, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.06826801517067, 'speedup_best_over_ref': 1.06826801517067, 'xsmm_custom_avg': 0.8701000000000001, 'xsmm_custom_best': 0.8701000000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.9295000000000001, 'xsmm_reference_best': 0.9295000000000001, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m3.txt...

Read matrix has 35 rows and 60 columns.

Input arrays: A (35, 60), B (60, 9600).

Output array: C (35, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.885533 ms

xsmm-reference Time (libxsmm): 0.885533 ms

xsmm-reference No. of CPU cycles: 885533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.88553333333333328

xsmm-reference avg execution time: 0.88553333333333328

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1096672959 cleaned_data/example_mats/tet/p4/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m3.txt...

Read matrix has 35 rows and 60 columns.

Input arrays: A (35, 60), B (60, 9600).

Output array: C (35, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 35, k= 60

lda= 9600, ldb= 60, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.857433 ms

xsmm-custom Time (libxsmm): 0.857433 ms

xsmm-custom No. of CPU cycles: 857433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.85743333333333327

xsmm-custom avg execution time: 0.85743333333333327

Freeing A

Freeing B

Freeing C

{'a_cols': 60, 'a_nonzero': 2100, 'a_rows': 35, 'a_size': 2100, 'a_unique': 202, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0327722271896747, 'speedup_best_over_ref': 1.0327722271896747, 'xsmm_custom_avg': 0.8574333333333333, 'xsmm_custom_best': 0.8574333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.8855333333333333, 'xsmm_reference_best': 0.8855333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m6.txt...

Read matrix has 105 rows and 60 columns.

Input arrays: A (105, 60), B (60, 9600).

Output array: C (105, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.678400 ms

xsmm-reference Time (libxsmm): 2.678367 ms

xsmm-reference No. of CPU cycles: 2678366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.678399999999999

xsmm-reference avg execution time: 2.678399999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 991012181 cleaned_data/example_mats/tet/p4/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m6.txt...

Read matrix has 105 rows and 60 columns.

Input arrays: A (105, 60), B (60, 9600).

Output array: C (105, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 105, k= 60

lda= 9600, ldb= 60, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.593767 ms

xsmm-custom Time (libxsmm): 2.593800 ms

xsmm-custom No. of CPU cycles: 2593800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.5937666666666668

xsmm-custom avg execution time: 2.5937666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 60, 'a_nonzero': 3150, 'a_rows': 105, 'a_size': 6300, 'a_unique': 101, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0326295092079725, 'speedup_best_over_ref': 1.0326295092079725, 'xsmm_custom_avg': 2.5937666666666668, 'xsmm_custom_best': 2.5937666666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.678399999999999, 'xsmm_reference_best': 2.678399999999999, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m132.txt...

Read matrix has 35 rows and 105 columns.

Input arrays: A (35, 105), B (105, 9600).

Output array: C (35, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.551300 ms

xsmm-reference Time (libxsmm): 1.551300 ms

xsmm-reference No. of CPU cycles: 1551300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.5513000000000001

xsmm-reference avg execution time: 1.5513000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 682349163 cleaned_data/example_mats/tet/p4/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m132.txt...

Read matrix has 35 rows and 105 columns.

Input arrays: A (35, 105), B (105, 9600).

Output array: C (35, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 35, k= 105

lda= 9600, ldb= 105, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.504667 ms

xsmm-custom Time (libxsmm): 1.504667 ms

xsmm-custom No. of CPU cycles: 1504666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.5046666666666666

xsmm-custom avg execution time: 1.5046666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 105, 'a_nonzero': 3432, 'a_rows': 35, 'a_size': 3675, 'a_unique': 304, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9338775510204081, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0309924678777138, 'speedup_best_over_ref': 1.0309924678777138, 'xsmm_custom_avg': 1.5046666666666666, 'xsmm_custom_best': 1.5046666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.5513000000000001, 'xsmm_reference_best': 1.5513000000000001, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m460.txt...

Read matrix has 105 rows and 35 columns.

Input arrays: A (105, 35), B (35, 9600).

Output array: C (105, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.569133 ms

xsmm-reference Time (libxsmm): 1.569133 ms

xsmm-reference No. of CPU cycles: 1569133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.5691333333333333

xsmm-reference avg execution time: 1.5691333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1454119795 cleaned_data/example_mats/tet/p4/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m460.txt...

Read matrix has 105 rows and 35 columns.

Input arrays: A (105, 35), B (35, 9600).

Output array: C (105, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 105, k= 35

lda= 9600, ldb= 35, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.530333 ms

xsmm-custom Time (libxsmm): 1.530333 ms

xsmm-custom No. of CPU cycles: 1530333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.5303333333333333

xsmm-custom avg execution time: 1.5303333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 35, 'a_nonzero': 3432, 'a_rows': 105, 'a_size': 3675, 'a_unique': 304, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9338775510204081, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0253539533870617, 'speedup_best_over_ref': 1.0253539533870617, 'xsmm_custom_avg': 1.5303333333333333, 'xsmm_custom_best': 1.5303333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.5691333333333333, 'xsmm_reference_best': 1.5691333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m0.txt...

Read matrix has 84 rows and 56 columns.

Input arrays: A (84, 56), B (56, 9600).

Output array: C (84, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.974833 ms

xsmm-reference Time (libxsmm): 1.974800 ms

xsmm-reference No. of CPU cycles: 1974800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.9748333333333332

xsmm-reference avg execution time: 1.9748333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 603244833 cleaned_data/example_mats/tet/p5/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m0.txt...

Read matrix has 84 rows and 56 columns.

Input arrays: A (84, 56), B (56, 9600).

Output array: C (84, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 84, k= 56

lda= 9600, ldb= 56, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.916000 ms

xsmm-custom Time (libxsmm): 1.916000 ms

xsmm-custom No. of CPU cycles: 1916000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.9160000000000006

xsmm-custom avg execution time: 1.9160000000000006

Freeing A

Freeing B

Freeing C

{'a_cols': 56, 'a_nonzero': 4704, 'a_rows': 84, 'a_size': 4704, 'a_unique': 214, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0307063326374388, 'speedup_best_over_ref': 1.0307063326374388, 'xsmm_custom_avg': 1.9160000000000006, 'xsmm_custom_best': 1.9160000000000006, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.9748333333333332, 'xsmm_reference_best': 1.9748333333333332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m3.txt...

Read matrix has 56 rows and 84 columns.

Input arrays: A (56, 84), B (84, 9600).

Output array: C (56, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.004033 ms

xsmm-reference Time (libxsmm): 2.004000 ms

xsmm-reference No. of CPU cycles: 2004000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.0040333333333336

xsmm-reference avg execution time: 2.0040333333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1822975096 cleaned_data/example_mats/tet/p5/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m3.txt...

Read matrix has 56 rows and 84 columns.

Input arrays: A (56, 84), B (84, 9600).

Output array: C (56, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 84

lda= 9600, ldb= 84, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.925400 ms

xsmm-custom Time (libxsmm): 1.925400 ms

xsmm-custom No. of CPU cycles: 1925400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.9254

xsmm-custom avg execution time: 1.9254

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 4704, 'a_rows': 56, 'a_size': 4704, 'a_unique': 428, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0408399986150065, 'speedup_best_over_ref': 1.0408399986150065, 'xsmm_custom_avg': 1.9254, 'xsmm_custom_best': 1.9254, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.0040333333333336, 'xsmm_reference_best': 2.0040333333333336, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m6.txt...

Read matrix has 168 rows and 84 columns.

Input arrays: A (168, 84), B (84, 9600).

Output array: C (168, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.936200 ms

xsmm-reference Time (libxsmm): 5.936200 ms

xsmm-reference No. of CPU cycles: 5936200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.9362000000000004

xsmm-reference avg execution time: 5.9362000000000004

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1015980606 cleaned_data/example_mats/tet/p5/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m6.txt...

Read matrix has 168 rows and 84 columns.

Input arrays: A (168, 84), B (84, 9600).

Output array: C (168, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 168, k= 84

lda= 9600, ldb= 84, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 168

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.900967 ms

xsmm-custom Time (libxsmm): 5.900967 ms

xsmm-custom No. of CPU cycles: 5900966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.9009666666666662

xsmm-custom avg execution time: 5.9009666666666662

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 7056, 'a_rows': 168, 'a_size': 14112, 'a_unique': 214, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.005970773150162, 'speedup_best_over_ref': 1.005970773150162, 'xsmm_custom_avg': 5.900966666666666, 'xsmm_custom_best': 5.900966666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.9362, 'xsmm_reference_best': 5.9362, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m132.txt...

Read matrix has 56 rows and 168 columns.

Input arrays: A (56, 168), B (168, 9600).

Output array: C (56, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.011000 ms

xsmm-reference Time (libxsmm): 4.011000 ms

xsmm-reference No. of CPU cycles: 4011000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.0110000000000001

xsmm-reference avg execution time: 4.0110000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1335938044 cleaned_data/example_mats/tet/p5/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m132.txt...

Read matrix has 56 rows and 168 columns.

Input arrays: A (56, 168), B (168, 9600).

Output array: C (56, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 168

lda= 9600, ldb= 168, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.962967 ms

xsmm-custom Time (libxsmm): 3.962967 ms

xsmm-custom No. of CPU cycles: 3962966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.9629666666666665

xsmm-custom avg execution time: 3.9629666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 168, 'a_nonzero': 8976, 'a_rows': 56, 'a_size': 9408, 'a_unique': 784, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9540816326530612, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0121205494200474, 'speedup_best_over_ref': 1.0121205494200474, 'xsmm_custom_avg': 3.9629666666666665, 'xsmm_custom_best': 3.9629666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.011, 'xsmm_reference_best': 4.011, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m460.txt...

Read matrix has 168 rows and 56 columns.

Input arrays: A (168, 56), B (56, 9600).

Output array: C (168, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.982733 ms

xsmm-reference Time (libxsmm): 3.982733 ms

xsmm-reference No. of CPU cycles: 3982733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.9827333333333326

xsmm-reference avg execution time: 3.9827333333333326

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1159858193 cleaned_data/example_mats/tet/p5/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m460.txt...

Read matrix has 168 rows and 56 columns.

Input arrays: A (168, 56), B (56, 9600).

Output array: C (168, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 168, k= 56

lda= 9600, ldb= 56, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 168

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.888833 ms

xsmm-custom Time (libxsmm): 3.888833 ms

xsmm-custom No. of CPU cycles: 3888833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.8888333333333334

xsmm-custom avg execution time: 3.8888333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 56, 'a_nonzero': 8976, 'a_rows': 168, 'a_size': 9408, 'a_unique': 784, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9540816326530612, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0241460592294174, 'speedup_best_over_ref': 1.0241460592294174, 'xsmm_custom_avg': 3.8888333333333334, 'xsmm_custom_best': 3.8888333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.9827333333333326, 'xsmm_reference_best': 3.9827333333333326, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m0.txt...

Read matrix has 112 rows and 84 columns.

Input arrays: A (112, 84), B (84, 9600).

Output array: C (112, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.862833 ms

xsmm-reference Time (libxsmm): 3.862833 ms

xsmm-reference No. of CPU cycles: 3862833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.8628333333333336

xsmm-reference avg execution time: 3.8628333333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1241574235 cleaned_data/example_mats/tet/p6/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m0.txt...

Read matrix has 112 rows and 84 columns.

Input arrays: A (112, 84), B (84, 9600).

Output array: C (112, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 112, k= 84

lda= 9600, ldb= 84, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 112

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.820333 ms

xsmm-custom Time (libxsmm): 3.820300 ms

xsmm-custom No. of CPU cycles: 3820300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.8203333333333336

xsmm-custom avg execution time: 3.8203333333333336

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 9408, 'a_rows': 112, 'a_size': 9408, 'a_unique': 425, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.011124683709973, 'speedup_best_over_ref': 1.011124683709973, 'xsmm_custom_avg': 3.8203333333333336, 'xsmm_custom_best': 3.8203333333333336, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.8628333333333336, 'xsmm_reference_best': 3.8628333333333336, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m3.txt...

Read matrix has 84 rows and 112 columns.

Input arrays: A (84, 112), B (112, 9600).

Output array: C (84, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.841133 ms

xsmm-reference Time (libxsmm): 3.841100 ms

xsmm-reference No. of CPU cycles: 3841100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.8411333333333331

xsmm-reference avg execution time: 3.8411333333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 990595664 cleaned_data/example_mats/tet/p6/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m3.txt...

Read matrix has 84 rows and 112 columns.

Input arrays: A (84, 112), B (112, 9600).

Output array: C (84, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 84, k= 112

lda= 9600, ldb= 112, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.804733 ms

xsmm-custom Time (libxsmm): 3.804767 ms

xsmm-custom No. of CPU cycles: 3804766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.8047333333333331

xsmm-custom avg execution time: 3.8047333333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 112, 'a_nonzero': 9408, 'a_rows': 84, 'a_size': 9408, 'a_unique': 850, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0095670305409052, 'speedup_best_over_ref': 1.0095670305409052, 'xsmm_custom_avg': 3.804733333333333, 'xsmm_custom_best': 3.804733333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.841133333333333, 'xsmm_reference_best': 3.841133333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m6.txt...

Read matrix has 252 rows and 112 columns.

Input arrays: A (252, 112), B (112, 9600).

Output array: C (252, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 12.832067 ms

xsmm-reference Time (libxsmm): 12.832000 ms

xsmm-reference No. of CPU cycles: 12832000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 12.832066666666666

xsmm-reference avg execution time: 12.832066666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1982560972 cleaned_data/example_mats/tet/p6/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m6.txt...

Read matrix has 252 rows and 112 columns.

Input arrays: A (252, 112), B (112, 9600).

Output array: C (252, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 252, k= 112

lda= 9600, ldb= 112, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 12.742400 ms

xsmm-custom Time (libxsmm): 12.742400 ms

xsmm-custom No. of CPU cycles: 12742400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 12.742400000000002

xsmm-custom avg execution time: 12.742400000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 112, 'a_nonzero': 14112, 'a_rows': 252, 'a_size': 28224, 'a_unique': 425, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.007036874267537, 'speedup_best_over_ref': 1.007036874267537, 'xsmm_custom_avg': 12.742400000000002, 'xsmm_custom_best': 12.742400000000002, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 12.832066666666666, 'xsmm_reference_best': 12.832066666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m132.txt...

Read matrix has 84 rows and 252 columns.

Input arrays: A (84, 252), B (252, 9600).

Output array: C (84, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 11.239433 ms

xsmm-reference Time (libxsmm): 11.239400 ms

xsmm-reference No. of CPU cycles: 11239400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 11.239433333333332

xsmm-reference avg execution time: 11.239433333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 52374405 cleaned_data/example_mats/tet/p6/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m132.txt...

Read matrix has 84 rows and 252 columns.

Input arrays: A (84, 252), B (252, 9600).

Output array: C (84, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 84, k= 252

lda= 9600, ldb= 252, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 11.206767 ms

xsmm-custom Time (libxsmm): 11.206800 ms

xsmm-custom No. of CPU cycles: 11206800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 11.206766666666665

xsmm-custom avg execution time: 11.206766666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 252, 'a_nonzero': 20400, 'a_rows': 84, 'a_size': 21168, 'a_unique': 1760, 'alpha': 1.0, 'beta': 0.0, 'density': 0.963718820861678, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.00291490557788, 'speedup_best_over_ref': 1.00291490557788, 'xsmm_custom_avg': 11.206766666666665, 'xsmm_custom_best': 11.206766666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 11.239433333333332, 'xsmm_reference_best': 11.239433333333332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m460.txt...

Read matrix has 252 rows and 84 columns.

Input arrays: A (252, 84), B (84, 9600).

Output array: C (252, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 9.800067 ms

xsmm-reference Time (libxsmm): 9.800067 ms

xsmm-reference No. of CPU cycles: 9800066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 9.8000666666666643

xsmm-reference avg execution time: 9.8000666666666643

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 209386566 cleaned_data/example_mats/tet/p6/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m460.txt...

Read matrix has 252 rows and 84 columns.

Input arrays: A (252, 84), B (84, 9600).

Output array: C (252, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 252, k= 84

lda= 9600, ldb= 84, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 9.813833 ms

xsmm-custom Time (libxsmm): 9.813800 ms

xsmm-custom No. of CPU cycles: 9813800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 9.8138333333333332

xsmm-custom avg execution time: 9.8138333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 20400, 'a_rows': 252, 'a_size': 21168, 'a_unique': 1760, 'alpha': 1.0, 'beta': 0.0, 'density': 0.963718820861678, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.998597218212387, 'speedup_best_over_ref': 0.998597218212387, 'xsmm_custom_avg': 9.813833333333333, 'xsmm_custom_best': 9.813833333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 9.800066666666664, 'xsmm_reference_best': 9.800066666666664, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m0.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 9600).

Output array: C (6, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.019500 ms

xsmm-reference Time (libxsmm): 0.019500 ms

xsmm-reference No. of CPU cycles: 19500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.0195

xsmm-reference avg execution time: 0.0195

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2052889550 cleaned_data/example_mats/tri/p1/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m0.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 9600).

Output array: C (6, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 3

lda= 9600, ldb= 3, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.025700 ms

xsmm-custom Time (libxsmm): 0.025700 ms

xsmm-custom No. of CPU cycles: 25700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.025700000000000001

xsmm-custom avg execution time: 0.025700000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 3, 'a_nonzero': 18, 'a_rows': 6, 'a_size': 18, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.7587548638132295, 'speedup_best_over_ref': 0.7587548638132295, 'xsmm_custom_avg': 0.0257, 'xsmm_custom_best': 0.0257, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.0195, 'xsmm_reference_best': 0.0195, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m3.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 9600).

Output array: C (3, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.018000 ms

xsmm-reference Time (libxsmm): 0.018000 ms

xsmm-reference No. of CPU cycles: 18000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.018000000000000002

xsmm-reference avg execution time: 0.018000000000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1481829917 cleaned_data/example_mats/tri/p1/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m3.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 9600).

Output array: C (3, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 3, k= 6

lda= 9600, ldb= 6, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.022900 ms

xsmm-custom Time (libxsmm): 0.022900 ms

xsmm-custom No. of CPU cycles: 22900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.0229

xsmm-custom avg execution time: 0.0229

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 18, 'a_rows': 3, 'a_size': 18, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.7860262008733625, 'speedup_best_over_ref': 0.7860262008733625, 'xsmm_custom_avg': 0.0229, 'xsmm_custom_best': 0.0229, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.018000000000000002, 'xsmm_reference_best': 0.018000000000000002, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m6.txt...

Read matrix has 6 rows and 6 columns.

Input arrays: A (6, 6), B (6, 9600).

Output array: C (6, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.025800 ms

xsmm-reference Time (libxsmm): 0.025767 ms

xsmm-reference No. of CPU cycles: 25766

CPU clock speed (GHz): 0.999974

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.0258

xsmm-reference avg execution time: 0.0258

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 131835523 cleaned_data/example_mats/tri/p1/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m6.txt...

Read matrix has 6 rows and 6 columns.

Input arrays: A (6, 6), B (6, 9600).

Output array: C (6, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 6

lda= 9600, ldb= 6, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.031033 ms

xsmm-custom Time (libxsmm): 0.031033 ms

xsmm-custom No. of CPU cycles: 31033

CPU clock speed (GHz): 0.999989

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.031033333333333336

xsmm-custom avg execution time: 0.031033333333333336

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 24, 'a_rows': 6, 'a_size': 36, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8313641245972072, 'speedup_best_over_ref': 0.8313641245972072, 'xsmm_custom_avg': 0.031033333333333336, 'xsmm_custom_best': 0.031033333333333336, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.0258, 'xsmm_reference_best': 0.0258, 'xsmm_reference_cpu_freq': 0.999989, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m132.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 9600).

Output array: C (3, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.017933 ms

xsmm-reference Time (libxsmm): 0.017933 ms

xsmm-reference No. of CPU cycles: 17933

CPU clock speed (GHz): 0.999981

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.017933333333333336

xsmm-reference avg execution time: 0.017933333333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2084238261 cleaned_data/example_mats/tri/p1/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m132.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 9600).

Output array: C (3, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 3, k= 6

lda= 9600, ldb= 6, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.023467 ms

xsmm-custom Time (libxsmm): 0.023467 ms

xsmm-custom No. of CPU cycles: 23466

CPU clock speed (GHz): 0.999972

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.023466666666666667

xsmm-custom avg execution time: 0.023466666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 12, 'a_rows': 3, 'a_size': 18, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.7642045454545455, 'speedup_best_over_ref': 0.7642045454545455, 'xsmm_custom_avg': 0.023466666666666667, 'xsmm_custom_best': 0.023466666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.017933333333333336, 'xsmm_reference_best': 0.017933333333333336, 'xsmm_reference_cpu_freq': 0.999972, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m460.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 9600).

Output array: C (6, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.019600 ms

xsmm-reference Time (libxsmm): 0.019600 ms

xsmm-reference No. of CPU cycles: 19600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.019599999999999999

xsmm-reference avg execution time: 0.019599999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1916473340 cleaned_data/example_mats/tri/p1/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m460.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 9600).

Output array: C (6, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 3

lda= 9600, ldb= 3, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.025367 ms

xsmm-custom Time (libxsmm): 0.025367 ms

xsmm-custom No. of CPU cycles: 25366

CPU clock speed (GHz): 0.999974

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.025366666666666666

xsmm-custom avg execution time: 0.025366666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 3, 'a_nonzero': 12, 'a_rows': 6, 'a_size': 18, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.7726675427069645, 'speedup_best_over_ref': 0.7726675427069645, 'xsmm_custom_avg': 0.025366666666666666, 'xsmm_custom_best': 0.025366666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.0196, 'xsmm_reference_best': 0.0196, 'xsmm_reference_cpu_freq': 0.999974, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m0.txt...

Read matrix has 9 rows and 6 columns.

Input arrays: A (9, 6), B (6, 9600).

Output array: C (9, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.036533 ms

xsmm-reference Time (libxsmm): 0.036533 ms

xsmm-reference No. of CPU cycles: 36533

CPU clock speed (GHz): 0.999991

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.036533333333333334

xsmm-reference avg execution time: 0.036533333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 478080499 cleaned_data/example_mats/tri/p2/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m0.txt...

Read matrix has 9 rows and 6 columns.

Input arrays: A (9, 6), B (6, 9600).

Output array: C (9, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 6

lda= 9600, ldb= 6, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.044967 ms

xsmm-custom Time (libxsmm): 0.044967 ms

xsmm-custom No. of CPU cycles: 44966

CPU clock speed (GHz): 0.999985

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.044966666666666669

xsmm-custom avg execution time: 0.044966666666666669

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 54, 'a_rows': 9, 'a_size': 54, 'a_unique': 10, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8124536693847294, 'speedup_best_over_ref': 0.8124536693847294, 'xsmm_custom_avg': 0.04496666666666667, 'xsmm_custom_best': 0.04496666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.036533333333333334, 'xsmm_reference_best': 0.036533333333333334, 'xsmm_reference_cpu_freq': 0.999985, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m3.txt...

Read matrix has 6 rows and 9 columns.

Input arrays: A (6, 9), B (9, 9600).

Output array: C (6, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.034433 ms

xsmm-reference Time (libxsmm): 0.034433 ms

xsmm-reference No. of CPU cycles: 34433

CPU clock speed (GHz): 0.999990

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.03443333333333333

xsmm-reference avg execution time: 0.03443333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1526999092 cleaned_data/example_mats/tri/p2/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m3.txt...

Read matrix has 6 rows and 9 columns.

Input arrays: A (6, 9), B (9, 9600).

Output array: C (6, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 9

lda= 9600, ldb= 9, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.039667 ms

xsmm-custom Time (libxsmm): 0.039667 ms

xsmm-custom No. of CPU cycles: 39666

CPU clock speed (GHz): 0.999983

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.039666666666666663

xsmm-custom avg execution time: 0.039666666666666663

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 54, 'a_rows': 6, 'a_size': 54, 'a_unique': 20, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8680672268907563, 'speedup_best_over_ref': 0.8680672268907563, 'xsmm_custom_avg': 0.03966666666666666, 'xsmm_custom_best': 0.03966666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.03443333333333333, 'xsmm_reference_best': 0.03443333333333333, 'xsmm_reference_cpu_freq': 0.999983, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m6.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 9600).

Output array: C (12, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.060467 ms

xsmm-reference Time (libxsmm): 0.060467 ms

xsmm-reference No. of CPU cycles: 60466

CPU clock speed (GHz): 0.999989

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.060466666666666669

xsmm-reference avg execution time: 0.060466666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1891132404 cleaned_data/example_mats/tri/p2/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m6.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 9600).

Output array: C (12, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 9

lda= 9600, ldb= 9, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.067967 ms

xsmm-custom Time (libxsmm): 0.067967 ms

xsmm-custom No. of CPU cycles: 67966

CPU clock speed (GHz): 0.999990

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.067966666666666675

xsmm-custom avg execution time: 0.067966666666666675

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 72, 'a_rows': 12, 'a_size': 108, 'a_unique': 10, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8896517900931828, 'speedup_best_over_ref': 0.8896517900931828, 'xsmm_custom_avg': 0.06796666666666668, 'xsmm_custom_best': 0.06796666666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.06046666666666667, 'xsmm_reference_best': 0.06046666666666667, 'xsmm_reference_cpu_freq': 0.99999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m132.txt...

Read matrix has 6 rows and 12 columns.

Input arrays: A (6, 12), B (12, 9600).

Output array: C (6, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.037400 ms

xsmm-reference Time (libxsmm): 0.037400 ms

xsmm-reference No. of CPU cycles: 37400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.037400000000000003

xsmm-reference avg execution time: 0.037400000000000003

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1720266387 cleaned_data/example_mats/tri/p2/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m132.txt...

Read matrix has 6 rows and 12 columns.

Input arrays: A (6, 12), B (12, 9600).

Output array: C (6, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 12

lda= 9600, ldb= 12, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.043167 ms

xsmm-custom Time (libxsmm): 0.043133 ms

xsmm-custom No. of CPU cycles: 43133

CPU clock speed (GHz): 0.999992

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.043166666666666666

xsmm-custom avg execution time: 0.043166666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 64, 'a_rows': 6, 'a_size': 72, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 0.8888888888888888, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8664092664092665, 'speedup_best_over_ref': 0.8664092664092665, 'xsmm_custom_avg': 0.043166666666666666, 'xsmm_custom_best': 0.043166666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.0374, 'xsmm_reference_best': 0.0374, 'xsmm_reference_cpu_freq': 0.999992, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m460.txt...

Read matrix has 12 rows and 6 columns.

Input arrays: A (12, 6), B (6, 9600).

Output array: C (12, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.045833 ms

xsmm-reference Time (libxsmm): 0.045833 ms

xsmm-reference No. of CPU cycles: 45833

CPU clock speed (GHz): 0.999993

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.04583333333333333

xsmm-reference avg execution time: 0.04583333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 397681976 cleaned_data/example_mats/tri/p2/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m460.txt...

Read matrix has 12 rows and 6 columns.

Input arrays: A (12, 6), B (6, 9600).

Output array: C (12, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 6

lda= 9600, ldb= 6, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.058067 ms

xsmm-custom Time (libxsmm): 0.058067 ms

xsmm-custom No. of CPU cycles: 58066

CPU clock speed (GHz): 0.999989

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.058066666666666669

xsmm-custom avg execution time: 0.058066666666666669

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 64, 'a_rows': 12, 'a_size': 72, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 0.8888888888888888, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.7893226176808266, 'speedup_best_over_ref': 0.7893226176808266, 'xsmm_custom_avg': 0.05806666666666667, 'xsmm_custom_best': 0.05806666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.04583333333333333, 'xsmm_reference_best': 0.04583333333333333, 'xsmm_reference_cpu_freq': 0.999989, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m0.txt...

Read matrix has 12 rows and 10 columns.

Input arrays: A (12, 10), B (10, 9600).

Output array: C (12, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.066133 ms

xsmm-reference Time (libxsmm): 0.066100 ms

xsmm-reference No. of CPU cycles: 66100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.066133333333333336

xsmm-reference avg execution time: 0.066133333333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 789938737 cleaned_data/example_mats/tri/p3/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m0.txt...

Read matrix has 12 rows and 10 columns.

Input arrays: A (12, 10), B (10, 9600).

Output array: C (12, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 10

lda= 9600, ldb= 10, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.077333 ms

xsmm-custom Time (libxsmm): 0.077333 ms

xsmm-custom No. of CPU cycles: 77333

CPU clock speed (GHz): 0.999996

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.077333333333333323

xsmm-custom avg execution time: 0.077333333333333323

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 120, 'a_rows': 12, 'a_size': 120, 'a_unique': 20, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8551724137931036, 'speedup_best_over_ref': 0.8551724137931036, 'xsmm_custom_avg': 0.07733333333333332, 'xsmm_custom_best': 0.07733333333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.06613333333333334, 'xsmm_reference_best': 0.06613333333333334, 'xsmm_reference_cpu_freq': 0.999996, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m3.txt...

Read matrix has 10 rows and 12 columns.

Input arrays: A (10, 12), B (12, 9600).

Output array: C (10, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.068867 ms

xsmm-reference Time (libxsmm): 0.068867 ms

xsmm-reference No. of CPU cycles: 68866

CPU clock speed (GHz): 0.999990

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.068866666666666659

xsmm-reference avg execution time: 0.068866666666666659

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2093912807 cleaned_data/example_mats/tri/p3/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m3.txt...

Read matrix has 10 rows and 12 columns.

Input arrays: A (10, 12), B (12, 9600).

Output array: C (10, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 12

lda= 9600, ldb= 12, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.077967 ms

xsmm-custom Time (libxsmm): 0.077967 ms

xsmm-custom No. of CPU cycles: 77966

CPU clock speed (GHz): 0.999991

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.07796666666666667

xsmm-custom avg execution time: 0.07796666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 120, 'a_rows': 10, 'a_size': 120, 'a_unique': 40, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8832834544677212, 'speedup_best_over_ref': 0.8832834544677212, 'xsmm_custom_avg': 0.07796666666666667, 'xsmm_custom_best': 0.07796666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.06886666666666666, 'xsmm_reference_best': 0.06886666666666666, 'xsmm_reference_cpu_freq': 0.999991, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m6.txt...

Read matrix has 20 rows and 12 columns.

Input arrays: A (20, 12), B (12, 9600).

Output array: C (20, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.134600 ms

xsmm-reference Time (libxsmm): 0.134600 ms

xsmm-reference No. of CPU cycles: 134600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.1346

xsmm-reference avg execution time: 0.1346

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 304235831 cleaned_data/example_mats/tri/p3/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m6.txt...

Read matrix has 20 rows and 12 columns.

Input arrays: A (20, 12), B (12, 9600).

Output array: C (20, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 12

lda= 9600, ldb= 12, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.153300 ms

xsmm-custom Time (libxsmm): 0.153300 ms

xsmm-custom No. of CPU cycles: 153300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.15330000000000002

xsmm-custom avg execution time: 0.15330000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 160, 'a_rows': 20, 'a_size': 240, 'a_unique': 20, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8780169602087409, 'speedup_best_over_ref': 0.8780169602087409, 'xsmm_custom_avg': 0.15330000000000002, 'xsmm_custom_best': 0.15330000000000002, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.1346, 'xsmm_reference_best': 0.1346, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m132.txt...

Read matrix has 10 rows and 20 columns.

Input arrays: A (10, 20), B (20, 9600).

Output array: C (10, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.104300 ms

xsmm-reference Time (libxsmm): 0.104300 ms

xsmm-reference No. of CPU cycles: 104300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.1043

xsmm-reference avg execution time: 0.1043

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 488961983 cleaned_data/example_mats/tri/p3/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m132.txt...

Read matrix has 10 rows and 20 columns.

Input arrays: A (10, 20), B (20, 9600).

Output array: C (10, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 20

lda= 9600, ldb= 20, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.112033 ms

xsmm-custom Time (libxsmm): 0.112033 ms

xsmm-custom No. of CPU cycles: 112033

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.11203333333333335

xsmm-custom avg execution time: 0.11203333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 192, 'a_rows': 10, 'a_size': 200, 'a_unique': 48, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9309729247247842, 'speedup_best_over_ref': 0.9309729247247842, 'xsmm_custom_avg': 0.11203333333333335, 'xsmm_custom_best': 0.11203333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.1043, 'xsmm_reference_best': 0.1043, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m460.txt...

Read matrix has 20 rows and 10 columns.

Input arrays: A (20, 10), B (10, 9600).

Output array: C (20, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.098200 ms

xsmm-reference Time (libxsmm): 0.098200 ms

xsmm-reference No. of CPU cycles: 98200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.09820000000000001

xsmm-reference avg execution time: 0.09820000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1006227224 cleaned_data/example_mats/tri/p3/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m460.txt...

Read matrix has 20 rows and 10 columns.

Input arrays: A (20, 10), B (10, 9600).

Output array: C (20, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 10

lda= 9600, ldb= 10, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.098367 ms

xsmm-custom Time (libxsmm): 0.098367 ms

xsmm-custom No. of CPU cycles: 98366

CPU clock speed (GHz): 0.999993

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.098366666666666672

xsmm-custom avg execution time: 0.098366666666666672

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 192, 'a_rows': 20, 'a_size': 200, 'a_unique': 48, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9983056590986107, 'speedup_best_over_ref': 0.9983056590986107, 'xsmm_custom_avg': 0.09836666666666667, 'xsmm_custom_best': 0.09836666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.09820000000000001, 'xsmm_reference_best': 0.09820000000000001, 'xsmm_reference_cpu_freq': 0.999993, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m0.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 9600).

Output array: C (15, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.114400 ms

xsmm-reference Time (libxsmm): 0.114367 ms

xsmm-reference No. of CPU cycles: 114366

CPU clock speed (GHz): 0.999994

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.1144

xsmm-reference avg execution time: 0.1144

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 740825771 cleaned_data/example_mats/tri/p4/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m0.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 9600).

Output array: C (15, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 15, k= 15

lda= 9600, ldb= 15, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.128933 ms

xsmm-custom Time (libxsmm): 0.128933 ms

xsmm-custom No. of CPU cycles: 128933

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.12893333333333332

xsmm-custom avg execution time: 0.12893333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 225, 'a_rows': 15, 'a_size': 225, 'a_unique': 39, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8872802481902794, 'speedup_best_over_ref': 0.8872802481902794, 'xsmm_custom_avg': 0.12893333333333332, 'xsmm_custom_best': 0.12893333333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.1144, 'xsmm_reference_best': 0.1144, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m3.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 9600).

Output array: C (15, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.122633 ms

xsmm-reference Time (libxsmm): 0.122600 ms

xsmm-reference No. of CPU cycles: 122600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.12263333333333333

xsmm-reference avg execution time: 0.12263333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 144890110 cleaned_data/example_mats/tri/p4/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m3.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 9600).

Output array: C (15, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 15, k= 15

lda= 9600, ldb= 15, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.139700 ms

xsmm-custom Time (libxsmm): 0.139700 ms

xsmm-custom No. of CPU cycles: 139700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.13969999999999999

xsmm-custom avg execution time: 0.13969999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 225, 'a_rows': 15, 'a_size': 225, 'a_unique': 78, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.8778334526366023, 'speedup_best_over_ref': 0.8778334526366023, 'xsmm_custom_avg': 0.1397, 'xsmm_custom_best': 0.1397, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.12263333333333333, 'xsmm_reference_best': 0.12263333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m6.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 9600).

Output array: C (30, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.226367 ms

xsmm-reference Time (libxsmm): 0.226367 ms

xsmm-reference No. of CPU cycles: 226366

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.22636666666666669

xsmm-reference avg execution time: 0.22636666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1895733461 cleaned_data/example_mats/tri/p4/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m6.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 9600).

Output array: C (30, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 15

lda= 9600, ldb= 15, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.245367 ms

xsmm-custom Time (libxsmm): 0.245367 ms

xsmm-custom No. of CPU cycles: 245366

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.24536666666666665

xsmm-custom avg execution time: 0.24536666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 300, 'a_rows': 30, 'a_size': 450, 'a_unique': 39, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9225648689036817, 'speedup_best_over_ref': 0.9225648689036817, 'xsmm_custom_avg': 0.24536666666666665, 'xsmm_custom_best': 0.24536666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.2263666666666667, 'xsmm_reference_best': 0.2263666666666667, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m132.txt...

Read matrix has 15 rows and 30 columns.

Input arrays: A (15, 30), B (30, 9600).

Output array: C (15, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.225167 ms

xsmm-reference Time (libxsmm): 0.225167 ms

xsmm-reference No. of CPU cycles: 225166

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.22516666666666665

xsmm-reference avg execution time: 0.22516666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 865774045 cleaned_data/example_mats/tri/p4/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m132.txt...

Read matrix has 15 rows and 30 columns.

Input arrays: A (15, 30), B (30, 9600).

Output array: C (15, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 15, k= 30

lda= 9600, ldb= 30, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.227633 ms

xsmm-custom Time (libxsmm): 0.227600 ms

xsmm-custom No. of CPU cycles: 227600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.22763333333333333

xsmm-custom avg execution time: 0.22763333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 30, 'a_nonzero': 432, 'a_rows': 15, 'a_size': 450, 'a_unique': 108, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.989163860008786, 'speedup_best_over_ref': 0.989163860008786, 'xsmm_custom_avg': 0.22763333333333333, 'xsmm_custom_best': 0.22763333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.22516666666666665, 'xsmm_reference_best': 0.22516666666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m460.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 9600).

Output array: C (30, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.235567 ms

xsmm-reference Time (libxsmm): 0.235567 ms

xsmm-reference No. of CPU cycles: 235566

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.23556666666666667

xsmm-reference avg execution time: 0.23556666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 903927584 cleaned_data/example_mats/tri/p4/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m460.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 9600).

Output array: C (30, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 15

lda= 9600, ldb= 15, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.244933 ms

xsmm-custom Time (libxsmm): 0.244933 ms

xsmm-custom No. of CPU cycles: 244933

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.24493333333333334

xsmm-custom avg execution time: 0.24493333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 432, 'a_rows': 30, 'a_size': 450, 'a_unique': 108, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9617583015786609, 'speedup_best_over_ref': 0.9617583015786609, 'xsmm_custom_avg': 0.24493333333333334, 'xsmm_custom_best': 0.24493333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.23556666666666667, 'xsmm_reference_best': 0.23556666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m0.txt...

Read matrix has 18 rows and 21 columns.

Input arrays: A (18, 21), B (21, 9600).

Output array: C (18, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.212367 ms

xsmm-reference Time (libxsmm): 0.212333 ms

xsmm-reference No. of CPU cycles: 212333

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.21236666666666668

xsmm-reference avg execution time: 0.21236666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 2088590354 cleaned_data/example_mats/tri/p5/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m0.txt...

Read matrix has 18 rows and 21 columns.

Input arrays: A (18, 21), B (21, 9600).

Output array: C (18, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 21

lda= 9600, ldb= 21, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.219400 ms

xsmm-custom Time (libxsmm): 0.219400 ms

xsmm-custom No. of CPU cycles: 219400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.21939999999999998

xsmm-custom avg execution time: 0.21939999999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 378, 'a_rows': 18, 'a_size': 378, 'a_unique': 63, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9679428745062292, 'speedup_best_over_ref': 0.9679428745062292, 'xsmm_custom_avg': 0.21939999999999998, 'xsmm_custom_best': 0.21939999999999998, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.21236666666666668, 'xsmm_reference_best': 0.21236666666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m3.txt...

Read matrix has 21 rows and 18 columns.

Input arrays: A (21, 18), B (18, 9600).

Output array: C (21, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.200133 ms

xsmm-reference Time (libxsmm): 0.200133 ms

xsmm-reference No. of CPU cycles: 200133

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.20013333333333333

xsmm-reference avg execution time: 0.20013333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1718423798 cleaned_data/example_mats/tri/p5/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m3.txt...

Read matrix has 21 rows and 18 columns.

Input arrays: A (21, 18), B (18, 9600).

Output array: C (21, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 21, k= 18

lda= 9600, ldb= 18, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.217000 ms

xsmm-custom Time (libxsmm): 0.217000 ms

xsmm-custom No. of CPU cycles: 217000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.217

xsmm-custom avg execution time: 0.217

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 378, 'a_rows': 21, 'a_size': 378, 'a_unique': 126, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.922273425499232, 'speedup_best_over_ref': 0.922273425499232, 'xsmm_custom_avg': 0.217, 'xsmm_custom_best': 0.217, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.20013333333333333, 'xsmm_reference_best': 0.20013333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m6.txt...

Read matrix has 42 rows and 18 columns.

Input arrays: A (42, 18), B (18, 9600).

Output array: C (42, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.385500 ms

xsmm-reference Time (libxsmm): 0.385500 ms

xsmm-reference No. of CPU cycles: 385500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.38550000000000001

xsmm-reference avg execution time: 0.38550000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1936412887 cleaned_data/example_mats/tri/p5/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m6.txt...

Read matrix has 42 rows and 18 columns.

Input arrays: A (42, 18), B (18, 9600).

Output array: C (42, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 42, k= 18

lda= 9600, ldb= 18, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.374033 ms

xsmm-custom Time (libxsmm): 0.374033 ms

xsmm-custom No. of CPU cycles: 374033

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.37403333333333333

xsmm-custom avg execution time: 0.37403333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 504, 'a_rows': 42, 'a_size': 756, 'a_unique': 63, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0306568042063988, 'speedup_best_over_ref': 1.0306568042063988, 'xsmm_custom_avg': 0.37403333333333333, 'xsmm_custom_best': 0.37403333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.3855, 'xsmm_reference_best': 0.3855, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m132.txt...

Read matrix has 21 rows and 42 columns.

Input arrays: A (21, 42), B (42, 9600).

Output array: C (21, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.402700 ms

xsmm-reference Time (libxsmm): 0.402700 ms

xsmm-reference No. of CPU cycles: 402700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.4027

xsmm-reference avg execution time: 0.4027

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1129846393 cleaned_data/example_mats/tri/p5/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m132.txt...

Read matrix has 21 rows and 42 columns.

Input arrays: A (21, 42), B (42, 9600).

Output array: C (21, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 21, k= 42

lda= 9600, ldb= 42, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.379500 ms

xsmm-custom Time (libxsmm): 0.379500 ms

xsmm-custom No. of CPU cycles: 379500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.3795

xsmm-custom avg execution time: 0.3795

Freeing A

Freeing B

Freeing C

{'a_cols': 42, 'a_nonzero': 864, 'a_rows': 21, 'a_size': 882, 'a_unique': 216, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.061133069828722, 'speedup_best_over_ref': 1.061133069828722, 'xsmm_custom_avg': 0.3795, 'xsmm_custom_best': 0.3795, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4027, 'xsmm_reference_best': 0.4027, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m460.txt...

Read matrix has 42 rows and 21 columns.

Input arrays: A (42, 21), B (21, 9600).

Output array: C (42, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.383967 ms

xsmm-reference Time (libxsmm): 0.383967 ms

xsmm-reference No. of CPU cycles: 383966

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.38396666666666668

xsmm-reference avg execution time: 0.38396666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1724681308 cleaned_data/example_mats/tri/p5/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m460.txt...

Read matrix has 42 rows and 21 columns.

Input arrays: A (42, 21), B (21, 9600).

Output array: C (42, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 42, k= 21

lda= 9600, ldb= 21, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.386200 ms

xsmm-custom Time (libxsmm): 0.386200 ms

xsmm-custom No. of CPU cycles: 386200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.38619999999999999

xsmm-custom avg execution time: 0.38619999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 864, 'a_rows': 42, 'a_size': 882, 'a_unique': 216, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9942171586397377, 'speedup_best_over_ref': 0.9942171586397377, 'xsmm_custom_avg': 0.3862, 'xsmm_custom_best': 0.3862, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.3839666666666667, 'xsmm_reference_best': 0.3839666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m0.txt...

Read matrix has 21 rows and 28 columns.

Input arrays: A (21, 28), B (28, 9600).

Output array: C (21, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.293467 ms

xsmm-reference Time (libxsmm): 0.293433 ms

xsmm-reference No. of CPU cycles: 293433

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.29346666666666665

xsmm-reference avg execution time: 0.29346666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1626929305 cleaned_data/example_mats/tri/p6/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m0.txt...

Read matrix has 21 rows and 28 columns.

Input arrays: A (21, 28), B (28, 9600).

Output array: C (21, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 21, k= 28

lda= 9600, ldb= 28, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.298233 ms

xsmm-custom Time (libxsmm): 0.298233 ms

xsmm-custom No. of CPU cycles: 298233

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.29823333333333329

xsmm-custom avg execution time: 0.29823333333333329

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 588, 'a_rows': 21, 'a_size': 588, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m0.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9840169889348386, 'speedup_best_over_ref': 0.9840169889348386, 'xsmm_custom_avg': 0.2982333333333333, 'xsmm_custom_best': 0.2982333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.29346666666666665, 'xsmm_reference_best': 0.29346666666666665, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m3.txt...

Read matrix has 28 rows and 21 columns.

Input arrays: A (28, 21), B (21, 9600).

Output array: C (28, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.295900 ms

xsmm-reference Time (libxsmm): 0.295900 ms

xsmm-reference No. of CPU cycles: 295900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.2959

xsmm-reference avg execution time: 0.2959

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 588969587 cleaned_data/example_mats/tri/p6/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m3.txt...

Read matrix has 28 rows and 21 columns.

Input arrays: A (28, 21), B (21, 9600).

Output array: C (28, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 21

lda= 9600, ldb= 21, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.300367 ms

xsmm-custom Time (libxsmm): 0.300367 ms

xsmm-custom No. of CPU cycles: 300366

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.30036666666666662

xsmm-custom avg execution time: 0.30036666666666662

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 588, 'a_rows': 28, 'a_size': 588, 'a_unique': 200, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m3.txt', 'size_n': 9600, 'speedup_avg_over_ref': 0.9851292864276996, 'speedup_best_over_ref': 0.9851292864276996, 'xsmm_custom_avg': 0.3003666666666666, 'xsmm_custom_best': 0.3003666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.2959, 'xsmm_reference_best': 0.2959, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m6.txt...

Read matrix has 56 rows and 21 columns.

Input arrays: A (56, 21), B (21, 9600).

Output array: C (56, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.601867 ms

xsmm-reference Time (libxsmm): 0.601867 ms

xsmm-reference No. of CPU cycles: 601866

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.60186666666666666

xsmm-reference avg execution time: 0.60186666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 493600264 cleaned_data/example_mats/tri/p6/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m6.txt...

Read matrix has 56 rows and 21 columns.

Input arrays: A (56, 21), B (21, 9600).

Output array: C (56, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 21

lda= 9600, ldb= 21, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.528300 ms

xsmm-custom Time (libxsmm): 0.528300 ms

xsmm-custom No. of CPU cycles: 528300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.52829999999999999

xsmm-custom avg execution time: 0.52829999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 784, 'a_rows': 56, 'a_size': 1176, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m6.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.139251687803647, 'speedup_best_over_ref': 1.139251687803647, 'xsmm_custom_avg': 0.5283, 'xsmm_custom_best': 0.5283, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6018666666666667, 'xsmm_reference_best': 0.6018666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m132.txt...

Read matrix has 28 rows and 56 columns.

Input arrays: A (28, 56), B (56, 9600).

Output array: C (28, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.644967 ms

xsmm-reference Time (libxsmm): 0.644967 ms

xsmm-reference No. of CPU cycles: 644966

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.64496666666666669

xsmm-reference avg execution time: 0.64496666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 1601708754 cleaned_data/example_mats/tri/p6/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m132.txt...

Read matrix has 28 rows and 56 columns.

Input arrays: A (28, 56), B (56, 9600).

Output array: C (28, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 56

lda= 9600, ldb= 56, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.643300 ms

xsmm-custom Time (libxsmm): 0.643300 ms

xsmm-custom No. of CPU cycles: 643300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.64329999999999998

xsmm-custom avg execution time: 0.64329999999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 56, 'a_nonzero': 1536, 'a_rows': 28, 'a_size': 1568, 'a_unique': 384, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m132.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0025908078138763, 'speedup_best_over_ref': 1.0025908078138763, 'xsmm_custom_avg': 0.6433, 'xsmm_custom_best': 0.6433, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6449666666666667, 'xsmm_reference_best': 0.6449666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m460.txt...

Read matrix has 56 rows and 28 columns.

Input arrays: A (56, 28), B (28, 9600).

Output array: C (56, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.710900 ms

xsmm-reference Time (libxsmm): 0.710900 ms

xsmm-reference No. of CPU cycles: 710900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.71090000000000009

xsmm-reference avg execution time: 0.71090000000000009

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 9600 800509165 cleaned_data/example_mats/tri/p6/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m460.txt...

Read matrix has 56 rows and 28 columns.

Input arrays: A (56, 28), B (28, 9600).

Output array: C (56, 9600).

Array B width (N): 9600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 28

lda= 9600, ldb= 28, ldc= 9600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.648933 ms

xsmm-custom Time (libxsmm): 0.648933 ms

xsmm-custom No. of CPU cycles: 648933

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.64893333333333336

xsmm-custom avg execution time: 0.64893333333333336

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 1536, 'a_rows': 56, 'a_size': 1568, 'a_unique': 384, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m460.txt', 'size_n': 9600, 'speedup_avg_over_ref': 1.0954900349291146, 'speedup_best_over_ref': 1.0954900349291146, 'xsmm_custom_avg': 0.6489333333333334, 'xsmm_custom_best': 0.6489333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.7109000000000001, 'xsmm_reference_best': 0.7109000000000001, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
Average speedup (best) of custom over reference 0.98448249633863
Average speedup (iqr avg) of custom over reference 0.98448249633863
