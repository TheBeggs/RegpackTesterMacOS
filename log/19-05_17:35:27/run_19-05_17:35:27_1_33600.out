run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m0.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 33600).

Output array: C (24, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.387033 ms

xsmm-reference Time (libxsmm): 0.387033 ms

xsmm-reference No. of CPU cycles: 387033

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.38703333333333334

xsmm-reference avg execution time: 0.38703333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1326986926 cleaned_data/example_mats/hex/p1/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m0.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 33600).

Output array: C (24, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 8

lda= 33600, ldb= 8, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.377800 ms

xsmm-custom Time (libxsmm): 0.377800 ms

xsmm-custom No. of CPU cycles: 377800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.37779999999999997

xsmm-custom avg execution time: 0.37779999999999997

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 48, 'a_rows': 24, 'a_size': 192, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.024439738838892, 'speedup_best_over_ref': 1.024439738838892, 'xsmm_custom_avg': 0.37779999999999997, 'xsmm_custom_best': 0.37779999999999997, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.38703333333333334, 'xsmm_reference_best': 0.38703333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m3.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 33600).

Output array: C (8, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.398167 ms

xsmm-reference Time (libxsmm): 0.398167 ms

xsmm-reference No. of CPU cycles: 398166

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.39816666666666667

xsmm-reference avg execution time: 0.39816666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1928878708 cleaned_data/example_mats/hex/p1/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m3.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 33600).

Output array: C (8, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 24

lda= 33600, ldb= 24, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.404867 ms

xsmm-custom Time (libxsmm): 0.404833 ms

xsmm-custom No. of CPU cycles: 404833

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.40486666666666671

xsmm-custom avg execution time: 0.40486666666666671

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 48, 'a_rows': 8, 'a_size': 192, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9834513420055985, 'speedup_best_over_ref': 0.9834513420055985, 'xsmm_custom_avg': 0.4048666666666667, 'xsmm_custom_best': 0.4048666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.39816666666666667, 'xsmm_reference_best': 0.39816666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m6.txt...

Read matrix has 24 rows and 24 columns.

Input arrays: A (24, 24), B (24, 33600).

Output array: C (24, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.882033 ms

xsmm-reference Time (libxsmm): 0.882033 ms

xsmm-reference No. of CPU cycles: 882033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.88203333333333334

xsmm-reference avg execution time: 0.88203333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1382367224 cleaned_data/example_mats/hex/p1/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m6.txt...

Read matrix has 24 rows and 24 columns.

Input arrays: A (24, 24), B (24, 33600).

Output array: C (24, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 24

lda= 33600, ldb= 24, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.903567 ms

xsmm-custom Time (libxsmm): 0.903567 ms

xsmm-custom No. of CPU cycles: 903566

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.90356666666666663

xsmm-custom avg execution time: 0.90356666666666663

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 48, 'a_rows': 24, 'a_size': 576, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.08333333333333333, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9761685173571403, 'speedup_best_over_ref': 0.9761685173571403, 'xsmm_custom_avg': 0.9035666666666666, 'xsmm_custom_best': 0.9035666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.8820333333333333, 'xsmm_reference_best': 0.8820333333333333, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m132.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 33600).

Output array: C (8, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.387367 ms

xsmm-reference Time (libxsmm): 0.387367 ms

xsmm-reference No. of CPU cycles: 387366

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.38736666666666669

xsmm-reference avg execution time: 0.38736666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 145936965 cleaned_data/example_mats/hex/p1/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m132.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 33600).

Output array: C (8, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 24

lda= 33600, ldb= 24, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.378333 ms

xsmm-custom Time (libxsmm): 0.378333 ms

xsmm-custom No. of CPU cycles: 378333

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.3783333333333333

xsmm-custom avg execution time: 0.3783333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 48, 'a_rows': 8, 'a_size': 192, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.023876651982379, 'speedup_best_over_ref': 1.023876651982379, 'xsmm_custom_avg': 0.3783333333333333, 'xsmm_custom_best': 0.3783333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.3873666666666667, 'xsmm_reference_best': 0.3873666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m460.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 33600).

Output array: C (24, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.377933 ms

xsmm-reference Time (libxsmm): 0.377933 ms

xsmm-reference No. of CPU cycles: 377933

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.37793333333333329

xsmm-reference avg execution time: 0.37793333333333329

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1667629343 cleaned_data/example_mats/hex/p1/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m460.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 33600).

Output array: C (24, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 8

lda= 33600, ldb= 8, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.368533 ms

xsmm-custom Time (libxsmm): 0.368533 ms

xsmm-custom No. of CPU cycles: 368533

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.36853333333333332

xsmm-custom avg execution time: 0.36853333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 48, 'a_rows': 24, 'a_size': 192, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.025506512301013, 'speedup_best_over_ref': 1.025506512301013, 'xsmm_custom_avg': 0.3685333333333333, 'xsmm_custom_best': 0.3685333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.3779333333333333, 'xsmm_reference_best': 0.3779333333333333, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 33600).

Output array: C (54, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.420367 ms

xsmm-reference Time (libxsmm): 2.420367 ms

xsmm-reference No. of CPU cycles: 2420366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.4203666666666668

xsmm-reference avg execution time: 2.4203666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1882965991 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 33600).

Output array: C (54, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 54, k= 27

lda= 33600, ldb= 27, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.514567 ms

xsmm-custom Time (libxsmm): 2.514567 ms

xsmm-custom No. of CPU cycles: 2514566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.5145666666666666

xsmm-custom avg execution time: 2.5145666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 54, 'a_rows': 54, 'a_size': 1458, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.037037037037037035, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9625382769728383, 'speedup_best_over_ref': 0.9625382769728383, 'xsmm_custom_avg': 2.5145666666666666, 'xsmm_custom_best': 2.5145666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.4203666666666668, 'xsmm_reference_best': 2.4203666666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 33600).

Output array: C (27, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.490767 ms

xsmm-reference Time (libxsmm): 2.490767 ms

xsmm-reference No. of CPU cycles: 2490766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.4907666666666666

xsmm-reference avg execution time: 2.4907666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1877459215 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 33600).

Output array: C (27, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 54

lda= 33600, ldb= 54, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.519133 ms

xsmm-custom Time (libxsmm): 2.519133 ms

xsmm-custom No. of CPU cycles: 2519133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.5191333333333334

xsmm-custom avg execution time: 2.5191333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 27, 'a_size': 1458, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9887395135893295, 'speedup_best_over_ref': 0.9887395135893295, 'xsmm_custom_avg': 2.5191333333333334, 'xsmm_custom_best': 2.5191333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.4907666666666666, 'xsmm_reference_best': 2.4907666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 33600).

Output array: C (81, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 7.774400 ms

xsmm-reference Time (libxsmm): 7.774400 ms

xsmm-reference No. of CPU cycles: 7774400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 7.7744

xsmm-reference avg execution time: 7.7744

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1796688964 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 33600).

Output array: C (81, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 54

lda= 33600, ldb= 54, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 7.737467 ms

xsmm-custom Time (libxsmm): 7.737400 ms

xsmm-custom No. of CPU cycles: 7737400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 7.7374666666666663

xsmm-custom avg execution time: 7.7374666666666663

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 81, 'a_size': 4374, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.037037037037037035, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0047733108166326, 'speedup_best_over_ref': 1.0047733108166326, 'xsmm_custom_avg': 7.737466666666666, 'xsmm_custom_best': 7.737466666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 7.7744, 'xsmm_reference_best': 7.7744, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 33600).

Output array: C (27, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.056167 ms

xsmm-reference Time (libxsmm): 4.056067 ms

xsmm-reference No. of CPU cycles: 4056066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.0561666666666669

xsmm-reference avg execution time: 4.0561666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1635210758 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 33600).

Output array: C (27, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 81

lda= 33600, ldb= 81, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.008633 ms

xsmm-custom Time (libxsmm): 4.008600 ms

xsmm-custom No. of CPU cycles: 4008600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.008633333333333

xsmm-custom avg execution time: 4.008633333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 81, 'a_nonzero': 216, 'a_rows': 27, 'a_size': 2187, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0118577403770197, 'speedup_best_over_ref': 1.0118577403770197, 'xsmm_custom_avg': 4.008633333333333, 'xsmm_custom_best': 4.008633333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.056166666666667, 'xsmm_reference_best': 4.056166666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 33600).

Output array: C (81, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.051733 ms

xsmm-reference Time (libxsmm): 4.051733 ms

xsmm-reference No. of CPU cycles: 4051733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.0517333333333339

xsmm-reference avg execution time: 4.0517333333333339

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1216590700 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 33600).

Output array: C (81, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 27

lda= 33600, ldb= 27, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.145600 ms

xsmm-custom Time (libxsmm): 4.145600 ms

xsmm-custom No. of CPU cycles: 4145600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.1456000000000017

xsmm-custom avg execution time: 4.1456000000000017

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 216, 'a_rows': 81, 'a_size': 2187, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9773575196191944, 'speedup_best_over_ref': 0.9773575196191944, 'xsmm_custom_avg': 4.145600000000002, 'xsmm_custom_best': 4.145600000000002, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.051733333333334, 'xsmm_reference_best': 4.051733333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 33600).

Output array: C (54, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.449167 ms

xsmm-reference Time (libxsmm): 2.449167 ms

xsmm-reference No. of CPU cycles: 2449166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.4491666666666663

xsmm-reference avg execution time: 2.4491666666666663

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1094257675 cleaned_data/example_mats/hex/p2/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 33600).

Output array: C (54, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 54, k= 27

lda= 33600, ldb= 27, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.483700 ms

xsmm-custom Time (libxsmm): 2.483700 ms

xsmm-custom No. of CPU cycles: 2483700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.4836999999999998

xsmm-custom avg execution time: 2.4836999999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 162, 'a_rows': 54, 'a_size': 1458, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9860960126692703, 'speedup_best_over_ref': 0.9860960126692703, 'xsmm_custom_avg': 2.4837, 'xsmm_custom_best': 2.4837, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.4491666666666663, 'xsmm_reference_best': 2.4491666666666663, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 33600).

Output array: C (27, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.489633 ms

xsmm-reference Time (libxsmm): 2.489600 ms

xsmm-reference No. of CPU cycles: 2489600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.489633333333332

xsmm-reference avg execution time: 2.489633333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 467925428 cleaned_data/example_mats/hex/p2/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 33600).

Output array: C (27, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 54

lda= 33600, ldb= 54, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.504200 ms

xsmm-custom Time (libxsmm): 2.504200 ms

xsmm-custom No. of CPU cycles: 2504200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.5042

xsmm-custom avg execution time: 2.5042

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 27, 'a_size': 1458, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9941831057157304, 'speedup_best_over_ref': 0.9941831057157304, 'xsmm_custom_avg': 2.5042, 'xsmm_custom_best': 2.5042, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.489633333333332, 'xsmm_reference_best': 2.489633333333332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 33600).

Output array: C (81, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 7.749533 ms

xsmm-reference Time (libxsmm): 7.749567 ms

xsmm-reference No. of CPU cycles: 7749566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 7.7495333333333329

xsmm-reference avg execution time: 7.7495333333333329

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1363224799 cleaned_data/example_mats/hex/p2/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 33600).

Output array: C (81, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 54

lda= 33600, ldb= 54, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 7.722100 ms

xsmm-custom Time (libxsmm): 7.722000 ms

xsmm-custom No. of CPU cycles: 7722000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 7.7221000000000002

xsmm-custom avg execution time: 7.7221000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 81, 'a_size': 4374, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.037037037037037035, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0035525742134048, 'speedup_best_over_ref': 1.0035525742134048, 'xsmm_custom_avg': 7.7221, 'xsmm_custom_best': 7.7221, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 7.749533333333333, 'xsmm_reference_best': 7.749533333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 33600).

Output array: C (27, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.021433 ms

xsmm-reference Time (libxsmm): 4.021433 ms

xsmm-reference No. of CPU cycles: 4021433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.0214333333333334

xsmm-reference avg execution time: 4.0214333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 389046984 cleaned_data/example_mats/hex/p2/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 33600).

Output array: C (27, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 81

lda= 33600, ldb= 81, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.990733 ms

xsmm-custom Time (libxsmm): 3.990633 ms

xsmm-custom No. of CPU cycles: 3990633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.990733333333333

xsmm-custom avg execution time: 3.990733333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 81, 'a_nonzero': 216, 'a_rows': 27, 'a_size': 2187, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0076928217036134, 'speedup_best_over_ref': 1.0076928217036134, 'xsmm_custom_avg': 3.990733333333333, 'xsmm_custom_best': 3.990733333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.021433333333333, 'xsmm_reference_best': 4.021433333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 33600).

Output array: C (81, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.991700 ms

xsmm-reference Time (libxsmm): 3.991700 ms

xsmm-reference No. of CPU cycles: 3991700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.9917000000000002

xsmm-reference avg execution time: 3.9917000000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 605171814 cleaned_data/example_mats/hex/p2/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 33600).

Output array: C (81, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 27

lda= 33600, ldb= 27, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.038067 ms

xsmm-custom Time (libxsmm): 4.038067 ms

xsmm-custom No. of CPU cycles: 4038066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.0380666666666665

xsmm-custom avg execution time: 4.0380666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 216, 'a_rows': 81, 'a_size': 2187, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9885176074359018, 'speedup_best_over_ref': 0.9885176074359018, 'xsmm_custom_avg': 4.0380666666666665, 'xsmm_custom_best': 4.0380666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.9917000000000002, 'xsmm_reference_best': 3.9917000000000002, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 33600).

Output array: C (96, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 11.669267 ms

xsmm-reference Time (libxsmm): 11.669300 ms

xsmm-reference No. of CPU cycles: 11669300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 11.669266666666665

xsmm-reference avg execution time: 11.669266666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1271410062 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 33600).

Output array: C (96, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 96, k= 64

lda= 33600, ldb= 64, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 96

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 11.635433 ms

xsmm-custom Time (libxsmm): 11.635333 ms

xsmm-custom No. of CPU cycles: 11635333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 11.635433333333333

xsmm-custom avg execution time: 11.635433333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 96, 'a_rows': 96, 'a_size': 6144, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.015625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0029077845546506, 'speedup_best_over_ref': 1.0029077845546506, 'xsmm_custom_avg': 11.635433333333333, 'xsmm_custom_best': 11.635433333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 11.669266666666665, 'xsmm_reference_best': 11.669266666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 33600).

Output array: C (64, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 11.993533 ms

xsmm-reference Time (libxsmm): 11.993533 ms

xsmm-reference No. of CPU cycles: 11993533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 11.993533333333335

xsmm-reference avg execution time: 11.993533333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 276467848 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 33600).

Output array: C (64, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 96

lda= 33600, ldb= 96, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 11.764433 ms

xsmm-custom Time (libxsmm): 11.764400 ms

xsmm-custom No. of CPU cycles: 11764400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 11.764433333333333

xsmm-custom avg execution time: 11.764433333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 64, 'a_size': 6144, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0194739511465352, 'speedup_best_over_ref': 1.0194739511465352, 'xsmm_custom_avg': 11.764433333333333, 'xsmm_custom_best': 11.764433333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 11.993533333333335, 'xsmm_reference_best': 11.993533333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 33600).

Output array: C (192, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 31.407067 ms

xsmm-reference Time (libxsmm): 31.407067 ms

xsmm-reference No. of CPU cycles: 31407066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 31.407066666666665

xsmm-reference avg execution time: 31.407066666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 850402557 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 33600).

Output array: C (192, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 96

lda= 33600, ldb= 96, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 31.311567 ms

xsmm-custom Time (libxsmm): 31.311533 ms

xsmm-custom No. of CPU cycles: 31311533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 31.311566666666668

xsmm-custom avg execution time: 31.311566666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 192, 'a_size': 18432, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.020833333333333332, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0030499911108461, 'speedup_best_over_ref': 1.0030499911108461, 'xsmm_custom_avg': 31.311566666666668, 'xsmm_custom_best': 31.311566666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 31.407066666666665, 'xsmm_reference_best': 31.407066666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 33600).

Output array: C (64, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 21.239200 ms

xsmm-reference Time (libxsmm): 21.239200 ms

xsmm-reference No. of CPU cycles: 21239200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 21.239199999999997

xsmm-reference avg execution time: 21.239199999999997

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 825662763 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 33600).

Output array: C (64, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 192

lda= 33600, ldb= 192, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 21.180500 ms

xsmm-custom Time (libxsmm): 21.180500 ms

xsmm-custom No. of CPU cycles: 21180500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 21.180499999999999

xsmm-custom avg execution time: 21.180499999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 192, 'a_nonzero': 672, 'a_rows': 64, 'a_size': 12288, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0546875, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0027714171053563, 'speedup_best_over_ref': 1.0027714171053563, 'xsmm_custom_avg': 21.1805, 'xsmm_custom_best': 21.1805, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 21.239199999999997, 'xsmm_reference_best': 21.239199999999997, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 33600).

Output array: C (192, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 22.151367 ms

xsmm-reference Time (libxsmm): 22.151367 ms

xsmm-reference No. of CPU cycles: 22151366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 22.151366666666668

xsmm-reference avg execution time: 22.151366666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 392365085 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 33600).

Output array: C (192, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 64

lda= 33600, ldb= 64, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 22.066333 ms

xsmm-custom Time (libxsmm): 22.066200 ms

xsmm-custom No. of CPU cycles: 22066200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 22.066333333333333

xsmm-custom avg execution time: 22.066333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 672, 'a_rows': 192, 'a_size': 12288, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0546875, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.003853532530703, 'speedup_best_over_ref': 1.003853532530703, 'xsmm_custom_avg': 22.066333333333333, 'xsmm_custom_best': 22.066333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 22.151366666666668, 'xsmm_reference_best': 22.151366666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 33600).

Output array: C (96, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 11.635600 ms

xsmm-reference Time (libxsmm): 11.635600 ms

xsmm-reference No. of CPU cycles: 11635600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 11.6356

xsmm-reference avg execution time: 11.6356

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1310913317 cleaned_data/example_mats/hex/p3/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 33600).

Output array: C (96, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 96, k= 64

lda= 33600, ldb= 64, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 96

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 11.613367 ms

xsmm-custom Time (libxsmm): 11.613367 ms

xsmm-custom No. of CPU cycles: 11613366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 11.613366666666666

xsmm-custom avg execution time: 11.613366666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 384, 'a_rows': 96, 'a_size': 6144, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0019144606358765, 'speedup_best_over_ref': 1.0019144606358765, 'xsmm_custom_avg': 11.613366666666666, 'xsmm_custom_best': 11.613366666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 11.6356, 'xsmm_reference_best': 11.6356, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 33600).

Output array: C (64, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 11.980833 ms

xsmm-reference Time (libxsmm): 11.980833 ms

xsmm-reference No. of CPU cycles: 11980833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 11.980833333333333

xsmm-reference avg execution time: 11.980833333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1370791490 cleaned_data/example_mats/hex/p3/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 33600).

Output array: C (64, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 96

lda= 33600, ldb= 96, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 11.862800 ms

xsmm-custom Time (libxsmm): 11.862767 ms

xsmm-custom No. of CPU cycles: 11862766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 11.8628

xsmm-custom avg execution time: 11.8628

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 64, 'a_size': 6144, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0099498713063808, 'speedup_best_over_ref': 1.0099498713063808, 'xsmm_custom_avg': 11.8628, 'xsmm_custom_best': 11.8628, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 11.980833333333333, 'xsmm_reference_best': 11.980833333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 33600).

Output array: C (192, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 31.406100 ms

xsmm-reference Time (libxsmm): 31.406067 ms

xsmm-reference No. of CPU cycles: 31406066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 31.406099999999999

xsmm-reference avg execution time: 31.406099999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1441141911 cleaned_data/example_mats/hex/p3/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 33600).

Output array: C (192, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 96

lda= 33600, ldb= 96, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 31.329833 ms

xsmm-custom Time (libxsmm): 31.329800 ms

xsmm-custom No. of CPU cycles: 31329800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 31.329833333333333

xsmm-custom avg execution time: 31.329833333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 192, 'a_size': 18432, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.020833333333333332, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0024343144712973, 'speedup_best_over_ref': 1.0024343144712973, 'xsmm_custom_avg': 31.329833333333333, 'xsmm_custom_best': 31.329833333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 31.4061, 'xsmm_reference_best': 31.4061, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 33600).

Output array: C (64, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 21.199767 ms

xsmm-reference Time (libxsmm): 21.199767 ms

xsmm-reference No. of CPU cycles: 21199766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 21.199766666666665

xsmm-reference avg execution time: 21.199766666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1858198922 cleaned_data/example_mats/hex/p3/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 33600).

Output array: C (64, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 192

lda= 33600, ldb= 192, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 21.082533 ms

xsmm-custom Time (libxsmm): 21.082500 ms

xsmm-custom No. of CPU cycles: 21082500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 21.082533333333334

xsmm-custom avg execution time: 21.082533333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 192, 'a_nonzero': 768, 'a_rows': 64, 'a_size': 12288, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0055606853066361, 'speedup_best_over_ref': 1.0055606853066361, 'xsmm_custom_avg': 21.082533333333334, 'xsmm_custom_best': 21.082533333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 21.199766666666665, 'xsmm_reference_best': 21.199766666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 33600).

Output array: C (192, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 22.150700 ms

xsmm-reference Time (libxsmm): 22.150633 ms

xsmm-reference No. of CPU cycles: 22150633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 22.150699999999997

xsmm-reference avg execution time: 22.150699999999997

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1805853600 cleaned_data/example_mats/hex/p3/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 33600).

Output array: C (192, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 64

lda= 33600, ldb= 64, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 22.020700 ms

xsmm-custom Time (libxsmm): 22.020600 ms

xsmm-custom No. of CPU cycles: 22020600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 22.020699999999998

xsmm-custom avg execution time: 22.020699999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 768, 'a_rows': 192, 'a_size': 12288, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0059035362181947, 'speedup_best_over_ref': 1.0059035362181947, 'xsmm_custom_avg': 22.020699999999998, 'xsmm_custom_best': 22.020699999999998, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 22.150699999999997, 'xsmm_reference_best': 22.150699999999997, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 33600).

Output array: C (150, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 31.030200 ms

xsmm-reference Time (libxsmm): 31.030200 ms

xsmm-reference No. of CPU cycles: 31030200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 31.030199999999997

xsmm-reference avg execution time: 31.030199999999997

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 758316662 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 33600).

Output array: C (150, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 150, k= 125

lda= 33600, ldb= 125, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 31.077700 ms

xsmm-custom Time (libxsmm): 31.077700 ms

xsmm-custom No. of CPU cycles: 31077700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 31.0777

xsmm-custom avg execution time: 31.0777

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 150, 'a_rows': 150, 'a_size': 18750, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.008, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9984715728641437, 'speedup_best_over_ref': 0.9984715728641437, 'xsmm_custom_avg': 31.0777, 'xsmm_custom_best': 31.0777, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 31.030199999999997, 'xsmm_reference_best': 31.030199999999997, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 33600).

Output array: C (125, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 31.102667 ms

xsmm-reference Time (libxsmm): 31.102633 ms

xsmm-reference No. of CPU cycles: 31102633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 31.102666666666668

xsmm-reference avg execution time: 31.102666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1840750959 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 33600).

Output array: C (125, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 150

lda= 33600, ldb= 150, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 31.105333 ms

xsmm-custom Time (libxsmm): 31.105300 ms

xsmm-custom No. of CPU cycles: 31105300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 31.105333333333331

xsmm-custom avg execution time: 31.105333333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 125, 'a_size': 18750, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9999142697929617, 'speedup_best_over_ref': 0.9999142697929617, 'xsmm_custom_avg': 31.10533333333333, 'xsmm_custom_best': 31.10533333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 31.102666666666668, 'xsmm_reference_best': 31.102666666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 33600).

Output array: C (375, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 86.048900 ms

xsmm-reference Time (libxsmm): 86.048900 ms

xsmm-reference No. of CPU cycles: 86048900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 86.048900000000003

xsmm-reference avg execution time: 86.048900000000003

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 2123300732 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 33600).

Output array: C (375, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 150

lda= 33600, ldb= 150, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 86.047767 ms

xsmm-custom Time (libxsmm): 86.047733 ms

xsmm-custom No. of CPU cycles: 86047733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 86.047766666666661

xsmm-custom avg execution time: 86.047766666666661

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 375, 'a_size': 56250, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.013333333333333334, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0000131709790647, 'speedup_best_over_ref': 1.0000131709790647, 'xsmm_custom_avg': 86.04776666666666, 'xsmm_custom_best': 86.04776666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 86.0489, 'xsmm_reference_best': 86.0489, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 33600).

Output array: C (125, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 86.707933 ms

xsmm-reference Time (libxsmm): 86.707900 ms

xsmm-reference No. of CPU cycles: 86707900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 86.707933333333344

xsmm-reference avg execution time: 86.707933333333344

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 804702473 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 33600).

Output array: C (125, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 375

lda= 33600, ldb= 375, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 86.591600 ms

xsmm-custom Time (libxsmm): 86.591600 ms

xsmm-custom No. of CPU cycles: 86591600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 86.5916

xsmm-custom avg execution time: 86.5916

Freeing A

Freeing B

Freeing C

{'a_cols': 375, 'a_nonzero': 1650, 'a_rows': 125, 'a_size': 46875, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0352, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0013434713451805, 'speedup_best_over_ref': 1.0013434713451805, 'xsmm_custom_avg': 86.5916, 'xsmm_custom_best': 86.5916, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 86.70793333333334, 'xsmm_reference_best': 86.70793333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 33600).

Output array: C (375, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 72.585467 ms

xsmm-reference Time (libxsmm): 72.585433 ms

xsmm-reference No. of CPU cycles: 72585433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 72.585466666666662

xsmm-reference avg execution time: 72.585466666666662

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1530210480 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 33600).

Output array: C (375, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 125

lda= 33600, ldb= 125, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 72.723300 ms

xsmm-custom Time (libxsmm): 72.723267 ms

xsmm-custom No. of CPU cycles: 72723266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 72.723300000000009

xsmm-custom avg execution time: 72.723300000000009

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 1650, 'a_rows': 375, 'a_size': 46875, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0352, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9981046881352559, 'speedup_best_over_ref': 0.9981046881352559, 'xsmm_custom_avg': 72.72330000000001, 'xsmm_custom_best': 72.72330000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 72.58546666666666, 'xsmm_reference_best': 72.58546666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 33600).

Output array: C (150, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 31.024667 ms

xsmm-reference Time (libxsmm): 31.024700 ms

xsmm-reference No. of CPU cycles: 31024700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 31.024666666666668

xsmm-reference avg execution time: 31.024666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 2092083478 cleaned_data/example_mats/hex/p4/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 33600).

Output array: C (150, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 150, k= 125

lda= 33600, ldb= 125, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 31.018600 ms

xsmm-custom Time (libxsmm): 31.018600 ms

xsmm-custom No. of CPU cycles: 31018600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 31.018599999999999

xsmm-custom avg execution time: 31.018599999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 750, 'a_rows': 150, 'a_size': 18750, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0001955815757857, 'speedup_best_over_ref': 1.0001955815757857, 'xsmm_custom_avg': 31.0186, 'xsmm_custom_best': 31.0186, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 31.02466666666667, 'xsmm_reference_best': 31.02466666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 33600).

Output array: C (125, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 31.066233 ms

xsmm-reference Time (libxsmm): 31.066200 ms

xsmm-reference No. of CPU cycles: 31066200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 31.066233333333333

xsmm-reference avg execution time: 31.066233333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1181325014 cleaned_data/example_mats/hex/p4/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 33600).

Output array: C (125, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 150

lda= 33600, ldb= 150, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 31.265600 ms

xsmm-custom Time (libxsmm): 31.265567 ms

xsmm-custom No. of CPU cycles: 31265566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 31.265599999999999

xsmm-custom avg execution time: 31.265599999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 125, 'a_size': 18750, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9936234498405063, 'speedup_best_over_ref': 0.9936234498405063, 'xsmm_custom_avg': 31.2656, 'xsmm_custom_best': 31.2656, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 31.066233333333333, 'xsmm_reference_best': 31.066233333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 33600).

Output array: C (375, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 86.033733 ms

xsmm-reference Time (libxsmm): 86.033700 ms

xsmm-reference No. of CPU cycles: 86033700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 86.033733333333331

xsmm-reference avg execution time: 86.033733333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 540332224 cleaned_data/example_mats/hex/p4/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 33600).

Output array: C (375, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 150

lda= 33600, ldb= 150, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 85.922100 ms

xsmm-custom Time (libxsmm): 85.922100 ms

xsmm-custom No. of CPU cycles: 85922100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 85.9221

xsmm-custom avg execution time: 85.9221

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 375, 'a_size': 56250, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.013333333333333334, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0012992388842141, 'speedup_best_over_ref': 1.0012992388842141, 'xsmm_custom_avg': 85.9221, 'xsmm_custom_best': 85.9221, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 86.03373333333333, 'xsmm_reference_best': 86.03373333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 33600).

Output array: C (125, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 86.088467 ms

xsmm-reference Time (libxsmm): 86.088467 ms

xsmm-reference No. of CPU cycles: 86088466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 86.088466666666662

xsmm-reference avg execution time: 86.088466666666662

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1650451317 cleaned_data/example_mats/hex/p4/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 33600).

Output array: C (125, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 375

lda= 33600, ldb= 375, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 86.356267 ms

xsmm-custom Time (libxsmm): 86.356233 ms

xsmm-custom No. of CPU cycles: 86356233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 86.35626666666667

xsmm-custom avg execution time: 86.35626666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 375, 'a_nonzero': 1800, 'a_rows': 125, 'a_size': 46875, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0384, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9968988932669622, 'speedup_best_over_ref': 0.9968988932669622, 'xsmm_custom_avg': 86.35626666666667, 'xsmm_custom_best': 86.35626666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 86.08846666666666, 'xsmm_reference_best': 86.08846666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 33600).

Output array: C (375, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 72.590133 ms

xsmm-reference Time (libxsmm): 72.590167 ms

xsmm-reference No. of CPU cycles: 72590166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 72.590133333333341

xsmm-reference avg execution time: 72.590133333333341

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1451772325 cleaned_data/example_mats/hex/p4/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 33600).

Output array: C (375, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 125

lda= 33600, ldb= 125, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 72.540600 ms

xsmm-custom Time (libxsmm): 72.540567 ms

xsmm-custom No. of CPU cycles: 72540566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 72.540599999999998

xsmm-custom avg execution time: 72.540599999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 1800, 'a_rows': 375, 'a_size': 46875, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0384, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0006828360026432, 'speedup_best_over_ref': 1.0006828360026432, 'xsmm_custom_avg': 72.5406, 'xsmm_custom_best': 72.5406, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 72.59013333333334, 'xsmm_reference_best': 72.59013333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 33600).

Output array: C (216, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 72.821233 ms

xsmm-reference Time (libxsmm): 72.821233 ms

xsmm-reference No. of CPU cycles: 72821233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 72.821233333333339

xsmm-reference avg execution time: 72.821233333333339

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 2050251666 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 33600).

Output array: C (216, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 33600, ldb= 216, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 72.899133 ms

xsmm-custom Time (libxsmm): 72.899133 ms

xsmm-custom No. of CPU cycles: 72899133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 72.899133333333339

xsmm-custom avg execution time: 72.899133333333339

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 216, 'a_rows': 216, 'a_size': 46656, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.004629629629629629, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9989314001904, 'speedup_best_over_ref': 0.9989314001904, 'xsmm_custom_avg': 72.89913333333334, 'xsmm_custom_best': 72.89913333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 72.82123333333334, 'xsmm_reference_best': 72.82123333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 33600).

Output array: C (216, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 72.528700 ms

xsmm-reference Time (libxsmm): 72.528667 ms

xsmm-reference No. of CPU cycles: 72528666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 72.528700000000001

xsmm-reference avg execution time: 72.528700000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1101750932 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 33600).

Output array: C (216, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 33600, ldb= 216, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 72.818967 ms

xsmm-custom Time (libxsmm): 72.818967 ms

xsmm-custom No. of CPU cycles: 72818966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 72.818966666666668

xsmm-custom avg execution time: 72.818966666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 216, 'a_size': 46656, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9960138590266546, 'speedup_best_over_ref': 0.9960138590266546, 'xsmm_custom_avg': 72.81896666666667, 'xsmm_custom_best': 72.81896666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 72.5287, 'xsmm_reference_best': 72.5287, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 33600).

Output array: C (648, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 210.879400 ms

xsmm-reference Time (libxsmm): 210.879400 ms

xsmm-reference No. of CPU cycles: 210879400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 210.87939999999998

xsmm-reference avg execution time: 210.87939999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1837285009 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 33600).

Output array: C (648, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 33600, ldb= 216, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 210.608267 ms

xsmm-custom Time (libxsmm): 210.608267 ms

xsmm-custom No. of CPU cycles: 210608266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 210.60826666666665

xsmm-custom avg execution time: 210.60826666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 648, 'a_size': 139968, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.009259259259259259, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0012873821983561, 'speedup_best_over_ref': 1.0012873821983561, 'xsmm_custom_avg': 210.60826666666665, 'xsmm_custom_best': 210.60826666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 210.87939999999998, 'xsmm_reference_best': 210.87939999999998, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 33600).

Output array: C (216, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 250.025800 ms

xsmm-reference Time (libxsmm): 250.025767 ms

xsmm-reference No. of CPU cycles: 250025766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 250.0258

xsmm-reference avg execution time: 250.0258

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 2047956130 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 33600).

Output array: C (216, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 648

lda= 33600, ldb= 648, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 250.268300 ms

xsmm-custom Time (libxsmm): 250.268300 ms

xsmm-custom No. of CPU cycles: 250268300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 250.26830000000001

xsmm-custom avg execution time: 250.26830000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 648, 'a_nonzero': 3456, 'a_rows': 216, 'a_size': 139968, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.024691358024691357, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9990310398879921, 'speedup_best_over_ref': 0.9990310398879921, 'xsmm_custom_avg': 250.2683, 'xsmm_custom_best': 250.2683, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 250.0258, 'xsmm_reference_best': 250.0258, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 33600).

Output array: C (648, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 210.575200 ms

xsmm-reference Time (libxsmm): 210.575167 ms

xsmm-reference No. of CPU cycles: 210575166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 210.57520000000002

xsmm-reference avg execution time: 210.57520000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1404991104 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 33600).

Output array: C (648, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 33600, ldb= 216, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 210.556900 ms

xsmm-custom Time (libxsmm): 210.556867 ms

xsmm-custom No. of CPU cycles: 210556866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 210.55690000000001

xsmm-custom avg execution time: 210.55690000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 3456, 'a_rows': 648, 'a_size': 139968, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.024691358024691357, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.000086912373805, 'speedup_best_over_ref': 1.000086912373805, 'xsmm_custom_avg': 210.5569, 'xsmm_custom_best': 210.5569, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 210.57520000000002, 'xsmm_reference_best': 210.57520000000002, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 33600).

Output array: C (216, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 72.759567 ms

xsmm-reference Time (libxsmm): 72.759567 ms

xsmm-reference No. of CPU cycles: 72759566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 72.759566666666657

xsmm-reference avg execution time: 72.759566666666657

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 585489814 cleaned_data/example_mats/hex/p5/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 33600).

Output array: C (216, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 33600, ldb= 216, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 72.776700 ms

xsmm-custom Time (libxsmm): 72.776667 ms

xsmm-custom No. of CPU cycles: 72776666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 72.776699999999991

xsmm-custom avg execution time: 72.776699999999991

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 216, 'a_size': 46656, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9997645766662498, 'speedup_best_over_ref': 0.9997645766662498, 'xsmm_custom_avg': 72.77669999999999, 'xsmm_custom_best': 72.77669999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 72.75956666666666, 'xsmm_reference_best': 72.75956666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 33600).

Output array: C (216, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 72.733267 ms

xsmm-reference Time (libxsmm): 72.733267 ms

xsmm-reference No. of CPU cycles: 72733266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 72.733266666666665

xsmm-reference avg execution time: 72.733266666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1121734576 cleaned_data/example_mats/hex/p5/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 33600).

Output array: C (216, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 33600, ldb= 216, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 73.377233 ms

xsmm-custom Time (libxsmm): 73.377233 ms

xsmm-custom No. of CPU cycles: 73377233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 73.377233333333336

xsmm-custom avg execution time: 73.377233333333336

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 216, 'a_size': 46656, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9912238900621764, 'speedup_best_over_ref': 0.9912238900621764, 'xsmm_custom_avg': 73.37723333333334, 'xsmm_custom_best': 73.37723333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 72.73326666666667, 'xsmm_reference_best': 72.73326666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 33600).

Output array: C (648, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 210.776233 ms

xsmm-reference Time (libxsmm): 210.776233 ms

xsmm-reference No. of CPU cycles: 210776233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 210.77623333333335

xsmm-reference avg execution time: 210.77623333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 740870677 cleaned_data/example_mats/hex/p5/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 33600).

Output array: C (648, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 33600, ldb= 216, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 210.522833 ms

xsmm-custom Time (libxsmm): 210.522833 ms

xsmm-custom No. of CPU cycles: 210522833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 210.52283333333335

xsmm-custom avg execution time: 210.52283333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 648, 'a_size': 139968, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.009259259259259259, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0012036699107065, 'speedup_best_over_ref': 1.0012036699107065, 'xsmm_custom_avg': 210.52283333333335, 'xsmm_custom_best': 210.52283333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 210.77623333333335, 'xsmm_reference_best': 210.77623333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 33600).

Output array: C (216, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 249.661867 ms

xsmm-reference Time (libxsmm): 249.661833 ms

xsmm-reference No. of CPU cycles: 249661833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 249.66186666666667

xsmm-reference avg execution time: 249.66186666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1257831139 cleaned_data/example_mats/hex/p5/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 33600).

Output array: C (216, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 648

lda= 33600, ldb= 648, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 250.095233 ms

xsmm-custom Time (libxsmm): 250.095267 ms

xsmm-custom No. of CPU cycles: 250095266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 250.09523333333334

xsmm-custom avg execution time: 250.09523333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 648, 'a_nonzero': 3888, 'a_rows': 216, 'a_size': 139968, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.998267193417121, 'speedup_best_over_ref': 0.998267193417121, 'xsmm_custom_avg': 250.09523333333334, 'xsmm_custom_best': 250.09523333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 249.66186666666667, 'xsmm_reference_best': 249.66186666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 33600).

Output array: C (648, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 210.666967 ms

xsmm-reference Time (libxsmm): 210.666933 ms

xsmm-reference No. of CPU cycles: 210666933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 210.66696666666667

xsmm-reference avg execution time: 210.66696666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 220782779 cleaned_data/example_mats/hex/p5/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 33600).

Output array: C (648, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 33600, ldb= 216, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 210.689667 ms

xsmm-custom Time (libxsmm): 210.689667 ms

xsmm-custom No. of CPU cycles: 210689666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 210.68966666666665

xsmm-custom avg execution time: 210.68966666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 3888, 'a_rows': 648, 'a_size': 139968, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9998922585983493, 'speedup_best_over_ref': 0.9998922585983493, 'xsmm_custom_avg': 210.68966666666665, 'xsmm_custom_best': 210.68966666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 210.66696666666667, 'xsmm_reference_best': 210.66696666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 33600).

Output array: C (294, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 175.590567 ms

xsmm-reference Time (libxsmm): 175.590533 ms

xsmm-reference No. of CPU cycles: 175590533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 175.59056666666666

xsmm-reference avg execution time: 175.59056666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1121605424 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 33600).

Output array: C (294, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 294, k= 343

lda= 33600, ldb= 343, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 175.770200 ms

xsmm-custom Time (libxsmm): 175.770167 ms

xsmm-custom No. of CPU cycles: 175770166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 175.77019999999999

xsmm-custom avg execution time: 175.77019999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 294, 'a_rows': 294, 'a_size': 100842, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0029154518950437317, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9989780216820978, 'speedup_best_over_ref': 0.9989780216820978, 'xsmm_custom_avg': 175.7702, 'xsmm_custom_best': 175.7702, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 175.59056666666666, 'xsmm_reference_best': 175.59056666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 33600).

Output array: C (343, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 173.376900 ms

xsmm-reference Time (libxsmm): 173.376867 ms

xsmm-reference No. of CPU cycles: 173376866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 173.37690000000001

xsmm-reference avg execution time: 173.37690000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1318591293 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 33600).

Output array: C (343, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 294

lda= 33600, ldb= 294, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 173.103133 ms

xsmm-custom Time (libxsmm): 173.103133 ms

xsmm-custom No. of CPU cycles: 173103133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 173.10313333333335

xsmm-custom avg execution time: 173.10313333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 343, 'a_size': 100842, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0015815234617358, 'speedup_best_over_ref': 1.0015815234617358, 'xsmm_custom_avg': 173.10313333333335, 'xsmm_custom_best': 173.10313333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 173.3769, 'xsmm_reference_best': 173.3769, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 33600).

Output array: C (1029, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 508.114633 ms

xsmm-reference Time (libxsmm): 508.114600 ms

xsmm-reference No. of CPU cycles: 508114600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 508.11463333333336

xsmm-reference avg execution time: 508.11463333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1165911737 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 33600).

Output array: C (1029, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 294

lda= 33600, ldb= 294, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 508.419733 ms

xsmm-custom Time (libxsmm): 508.419700 ms

xsmm-custom No. of CPU cycles: 508419700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 508.41973333333334

xsmm-custom avg execution time: 508.41973333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 1029, 'a_size': 302526, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.006802721088435374, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9993999052751166, 'speedup_best_over_ref': 0.9993999052751166, 'xsmm_custom_avg': 508.41973333333334, 'xsmm_custom_best': 508.41973333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 508.11463333333336, 'xsmm_reference_best': 508.11463333333336, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 33600).

Output array: C (343, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 609.029400 ms

xsmm-reference Time (libxsmm): 609.029400 ms

xsmm-reference No. of CPU cycles: 609029400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 609.02940000000001

xsmm-reference avg execution time: 609.02940000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1121722860 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 33600).

Output array: C (343, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 1029

lda= 33600, ldb= 1029, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 609.607633 ms

xsmm-custom Time (libxsmm): 609.607633 ms

xsmm-custom No. of CPU cycles: 609607633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 609.6076333333333

xsmm-custom avg execution time: 609.6076333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 1029, 'a_nonzero': 6468, 'a_rows': 343, 'a_size': 352947, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.018325697625989172, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9990514663831036, 'speedup_best_over_ref': 0.9990514663831036, 'xsmm_custom_avg': 609.6076333333333, 'xsmm_custom_best': 609.6076333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 609.0294, 'xsmm_reference_best': 609.0294, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 33600).

Output array: C (1029, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 594.612433 ms

xsmm-reference Time (libxsmm): 594.612400 ms

xsmm-reference No. of CPU cycles: 594612400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 594.61243333333334

xsmm-reference avg execution time: 594.61243333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1191786087 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 33600).

Output array: C (1029, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 343

lda= 33600, ldb= 343, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 594.944867 ms

xsmm-custom Time (libxsmm): 594.944833 ms

xsmm-custom No. of CPU cycles: 594944833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 594.94486666666671

xsmm-custom avg execution time: 594.94486666666671

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 6468, 'a_rows': 1029, 'a_size': 352947, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.018325697625989172, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9994412367398077, 'speedup_best_over_ref': 0.9994412367398077, 'xsmm_custom_avg': 594.9448666666667, 'xsmm_custom_best': 594.9448666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 594.6124333333333, 'xsmm_reference_best': 594.6124333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 33600).

Output array: C (294, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 175.578900 ms

xsmm-reference Time (libxsmm): 175.578900 ms

xsmm-reference No. of CPU cycles: 175578900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 175.5789

xsmm-reference avg execution time: 175.5789

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1593945954 cleaned_data/example_mats/hex/p6/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 33600).

Output array: C (294, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 294, k= 343

lda= 33600, ldb= 343, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 175.502733 ms

xsmm-custom Time (libxsmm): 175.502700 ms

xsmm-custom No. of CPU cycles: 175502700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 175.50273333333334

xsmm-custom avg execution time: 175.50273333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 2058, 'a_rows': 294, 'a_size': 100842, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0004339913414453, 'speedup_best_over_ref': 1.0004339913414453, 'xsmm_custom_avg': 175.50273333333334, 'xsmm_custom_best': 175.50273333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 175.5789, 'xsmm_reference_best': 175.5789, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 33600).

Output array: C (343, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 173.383900 ms

xsmm-reference Time (libxsmm): 173.383900 ms

xsmm-reference No. of CPU cycles: 173383900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 173.38389999999998

xsmm-reference avg execution time: 173.38389999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 356336889 cleaned_data/example_mats/hex/p6/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 33600).

Output array: C (343, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 294

lda= 33600, ldb= 294, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 173.174067 ms

xsmm-custom Time (libxsmm): 173.174067 ms

xsmm-custom No. of CPU cycles: 173174066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 173.17406666666665

xsmm-custom avg execution time: 173.17406666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 343, 'a_size': 100842, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0012116902800303, 'speedup_best_over_ref': 1.0012116902800303, 'xsmm_custom_avg': 173.17406666666665, 'xsmm_custom_best': 173.17406666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 173.38389999999998, 'xsmm_reference_best': 173.38389999999998, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 33600).

Output array: C (1029, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 507.790233 ms

xsmm-reference Time (libxsmm): 507.790233 ms

xsmm-reference No. of CPU cycles: 507790233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 507.79023333333333

xsmm-reference avg execution time: 507.79023333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1425892149 cleaned_data/example_mats/hex/p6/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 33600).

Output array: C (1029, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 294

lda= 33600, ldb= 294, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 507.770367 ms

xsmm-custom Time (libxsmm): 507.770333 ms

xsmm-custom No. of CPU cycles: 507770333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 507.77036666666669

xsmm-custom avg execution time: 507.77036666666669

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 1029, 'a_size': 302526, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.006802721088435374, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.000039125297518, 'speedup_best_over_ref': 1.000039125297518, 'xsmm_custom_avg': 507.7703666666667, 'xsmm_custom_best': 507.7703666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 507.79023333333333, 'xsmm_reference_best': 507.79023333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 33600).

Output array: C (343, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 611.115167 ms

xsmm-reference Time (libxsmm): 611.115167 ms

xsmm-reference No. of CPU cycles: 611115166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 611.11516666666671

xsmm-reference avg execution time: 611.11516666666671

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 508509848 cleaned_data/example_mats/hex/p6/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 33600).

Output array: C (343, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 1029

lda= 33600, ldb= 1029, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 609.478833 ms

xsmm-custom Time (libxsmm): 609.478833 ms

xsmm-custom No. of CPU cycles: 609478833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 609.47883333333334

xsmm-custom avg execution time: 609.47883333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 1029, 'a_nonzero': 7056, 'a_rows': 343, 'a_size': 352947, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.019991670137442734, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0026848074844272, 'speedup_best_over_ref': 1.0026848074844272, 'xsmm_custom_avg': 609.4788333333333, 'xsmm_custom_best': 609.4788333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 611.1151666666667, 'xsmm_reference_best': 611.1151666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 33600).

Output array: C (1029, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 594.352733 ms

xsmm-reference Time (libxsmm): 594.352767 ms

xsmm-reference No. of CPU cycles: 594352766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 594.35273333333328

xsmm-reference avg execution time: 594.35273333333328

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 588795125 cleaned_data/example_mats/hex/p6/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 33600).

Output array: C (1029, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 343

lda= 33600, ldb= 343, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 594.478067 ms

xsmm-custom Time (libxsmm): 594.478067 ms

xsmm-custom No. of CPU cycles: 594478066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 594.47806666666668

xsmm-custom avg execution time: 594.47806666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 7056, 'a_rows': 1029, 'a_size': 352947, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.019991670137442734, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9997891708031615, 'speedup_best_over_ref': 0.9997891708031615, 'xsmm_custom_avg': 594.4780666666667, 'xsmm_custom_best': 594.4780666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 594.3527333333333, 'xsmm_reference_best': 594.3527333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m0.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 33600).

Output array: C (8, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.110400 ms

xsmm-reference Time (libxsmm): 0.110400 ms

xsmm-reference No. of CPU cycles: 110400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.1104

xsmm-reference avg execution time: 0.1104

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 205393579 cleaned_data/example_mats/quad/p1/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m0.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 33600).

Output array: C (8, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 4

lda= 33600, ldb= 4, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.139000 ms

xsmm-custom Time (libxsmm): 0.139000 ms

xsmm-custom No. of CPU cycles: 139000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.13899999999999998

xsmm-custom avg execution time: 0.13899999999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 16, 'a_rows': 8, 'a_size': 32, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.7942446043165469, 'speedup_best_over_ref': 0.7942446043165469, 'xsmm_custom_avg': 0.13899999999999998, 'xsmm_custom_best': 0.13899999999999998, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.1104, 'xsmm_reference_best': 0.1104, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m3.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 33600).

Output array: C (4, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.090533 ms

xsmm-reference Time (libxsmm): 0.090533 ms

xsmm-reference No. of CPU cycles: 90533

CPU clock speed (GHz): 0.999996

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.090533333333333341

xsmm-reference avg execution time: 0.090533333333333341

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 431254670 cleaned_data/example_mats/quad/p1/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m3.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 33600).

Output array: C (4, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 8

lda= 33600, ldb= 8, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.110600 ms

xsmm-custom Time (libxsmm): 0.110600 ms

xsmm-custom No. of CPU cycles: 110600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.1106

xsmm-custom avg execution time: 0.1106

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 16, 'a_rows': 4, 'a_size': 32, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.8185654008438819, 'speedup_best_over_ref': 0.8185654008438819, 'xsmm_custom_avg': 0.1106, 'xsmm_custom_best': 0.1106, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.09053333333333334, 'xsmm_reference_best': 0.09053333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m6.txt...

Read matrix has 8 rows and 8 columns.

Input arrays: A (8, 8), B (8, 33600).

Output array: C (8, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.163467 ms

xsmm-reference Time (libxsmm): 0.163467 ms

xsmm-reference No. of CPU cycles: 163466

CPU clock speed (GHz): 0.999996

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.16346666666666668

xsmm-reference avg execution time: 0.16346666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1906613127 cleaned_data/example_mats/quad/p1/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m6.txt...

Read matrix has 8 rows and 8 columns.

Input arrays: A (8, 8), B (8, 33600).

Output array: C (8, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 8

lda= 33600, ldb= 8, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.191267 ms

xsmm-custom Time (libxsmm): 0.191233 ms

xsmm-custom No. of CPU cycles: 191233

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.19126666666666667

xsmm-custom avg execution time: 0.19126666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 16, 'a_rows': 8, 'a_size': 64, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.8546531892645521, 'speedup_best_over_ref': 0.8546531892645521, 'xsmm_custom_avg': 0.19126666666666667, 'xsmm_custom_best': 0.19126666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.16346666666666668, 'xsmm_reference_best': 0.16346666666666668, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m132.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 33600).

Output array: C (4, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.090067 ms

xsmm-reference Time (libxsmm): 0.090067 ms

xsmm-reference No. of CPU cycles: 90066

CPU clock speed (GHz): 0.999993

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.09006666666666667

xsmm-reference avg execution time: 0.09006666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 476086621 cleaned_data/example_mats/quad/p1/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m132.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 33600).

Output array: C (4, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 8

lda= 33600, ldb= 8, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.110400 ms

xsmm-custom Time (libxsmm): 0.110400 ms

xsmm-custom No. of CPU cycles: 110400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.1104

xsmm-custom avg execution time: 0.1104

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 16, 'a_rows': 4, 'a_size': 32, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.8158212560386474, 'speedup_best_over_ref': 0.8158212560386474, 'xsmm_custom_avg': 0.1104, 'xsmm_custom_best': 0.1104, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.09006666666666667, 'xsmm_reference_best': 0.09006666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m460.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 33600).

Output array: C (8, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.110267 ms

xsmm-reference Time (libxsmm): 0.110267 ms

xsmm-reference No. of CPU cycles: 110266

CPU clock speed (GHz): 0.999994

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.11026666666666667

xsmm-reference avg execution time: 0.11026666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1862501717 cleaned_data/example_mats/quad/p1/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m460.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 33600).

Output array: C (8, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 4

lda= 33600, ldb= 4, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.138433 ms

xsmm-custom Time (libxsmm): 0.138433 ms

xsmm-custom No. of CPU cycles: 138433

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.13843333333333332

xsmm-custom avg execution time: 0.13843333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 16, 'a_rows': 8, 'a_size': 32, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.7965326270166145, 'speedup_best_over_ref': 0.7965326270166145, 'xsmm_custom_avg': 0.13843333333333332, 'xsmm_custom_best': 0.13843333333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.11026666666666667, 'xsmm_reference_best': 0.11026666666666667, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 33600).

Output array: C (12, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.220033 ms

xsmm-reference Time (libxsmm): 0.220033 ms

xsmm-reference No. of CPU cycles: 220033

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.22003333333333333

xsmm-reference avg execution time: 0.22003333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 703073902 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 33600).

Output array: C (12, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 9

lda= 33600, ldb= 9, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.230433 ms

xsmm-custom Time (libxsmm): 0.230433 ms

xsmm-custom No. of CPU cycles: 230433

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.23043333333333335

xsmm-custom avg execution time: 0.23043333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 12, 'a_rows': 12, 'a_size': 108, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9548676406769853, 'speedup_best_over_ref': 0.9548676406769853, 'xsmm_custom_avg': 0.23043333333333335, 'xsmm_custom_best': 0.23043333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.22003333333333333, 'xsmm_reference_best': 0.22003333333333333, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 33600).

Output array: C (9, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.219033 ms

xsmm-reference Time (libxsmm): 0.219033 ms

xsmm-reference No. of CPU cycles: 219033

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.21903333333333333

xsmm-reference avg execution time: 0.21903333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1475372567 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 33600).

Output array: C (9, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 12

lda= 33600, ldb= 12, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.246867 ms

xsmm-custom Time (libxsmm): 0.246867 ms

xsmm-custom No. of CPU cycles: 246866

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.24686666666666665

xsmm-custom avg execution time: 0.24686666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 9, 'a_size': 108, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.3333333333333333, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.8872535781798542, 'speedup_best_over_ref': 0.8872535781798542, 'xsmm_custom_avg': 0.24686666666666665, 'xsmm_custom_best': 0.24686666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.21903333333333333, 'xsmm_reference_best': 0.21903333333333333, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 33600).

Output array: C (18, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.394000 ms

xsmm-reference Time (libxsmm): 0.394000 ms

xsmm-reference No. of CPU cycles: 394000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.39400000000000002

xsmm-reference avg execution time: 0.39400000000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 366881916 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 33600).

Output array: C (18, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 12

lda= 33600, ldb= 12, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.396533 ms

xsmm-custom Time (libxsmm): 0.396533 ms

xsmm-custom No. of CPU cycles: 396533

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.39653333333333335

xsmm-custom avg execution time: 0.39653333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 18, 'a_size': 216, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9936112979152656, 'speedup_best_over_ref': 0.9936112979152656, 'xsmm_custom_avg': 0.39653333333333335, 'xsmm_custom_best': 0.39653333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.394, 'xsmm_reference_best': 0.394, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 33600).

Output array: C (9, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.293467 ms

xsmm-reference Time (libxsmm): 0.293467 ms

xsmm-reference No. of CPU cycles: 293466

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.29346666666666665

xsmm-reference avg execution time: 0.29346666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 450405255 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 33600).

Output array: C (9, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 18

lda= 33600, ldb= 18, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.291333 ms

xsmm-custom Time (libxsmm): 0.291333 ms

xsmm-custom No. of CPU cycles: 291333

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.29133333333333333

xsmm-custom avg execution time: 0.29133333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 48, 'a_rows': 9, 'a_size': 162, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0073226544622425, 'speedup_best_over_ref': 1.0073226544622425, 'xsmm_custom_avg': 0.29133333333333333, 'xsmm_custom_best': 0.29133333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.29346666666666665, 'xsmm_reference_best': 0.29346666666666665, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 33600).

Output array: C (18, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.302467 ms

xsmm-reference Time (libxsmm): 0.302467 ms

xsmm-reference No. of CPU cycles: 302466

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.30246666666666666

xsmm-reference avg execution time: 0.30246666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 503381889 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 33600).

Output array: C (18, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 9

lda= 33600, ldb= 9, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.322500 ms

xsmm-custom Time (libxsmm): 0.322500 ms

xsmm-custom No. of CPU cycles: 322500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.32250000000000001

xsmm-custom avg execution time: 0.32250000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 48, 'a_rows': 18, 'a_size': 162, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9378811369509044, 'speedup_best_over_ref': 0.9378811369509044, 'xsmm_custom_avg': 0.3225, 'xsmm_custom_best': 0.3225, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.30246666666666666, 'xsmm_reference_best': 0.30246666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 33600).

Output array: C (12, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.221133 ms

xsmm-reference Time (libxsmm): 0.221133 ms

xsmm-reference No. of CPU cycles: 221133

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.22113333333333335

xsmm-reference avg execution time: 0.22113333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1036562246 cleaned_data/example_mats/quad/p2/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 33600).

Output array: C (12, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 9

lda= 33600, ldb= 9, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.232367 ms

xsmm-custom Time (libxsmm): 0.232367 ms

xsmm-custom No. of CPU cycles: 232366

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.23236666666666667

xsmm-custom avg execution time: 0.23236666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 36, 'a_rows': 12, 'a_size': 108, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.3333333333333333, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9516568641514848, 'speedup_best_over_ref': 0.9516568641514848, 'xsmm_custom_avg': 0.23236666666666667, 'xsmm_custom_best': 0.23236666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.22113333333333335, 'xsmm_reference_best': 0.22113333333333335, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 33600).

Output array: C (9, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.218933 ms

xsmm-reference Time (libxsmm): 0.218933 ms

xsmm-reference No. of CPU cycles: 218933

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.21893333333333331

xsmm-reference avg execution time: 0.21893333333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1518128482 cleaned_data/example_mats/quad/p2/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 33600).

Output array: C (9, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 12

lda= 33600, ldb= 12, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.247767 ms

xsmm-custom Time (libxsmm): 0.247767 ms

xsmm-custom No. of CPU cycles: 247766

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.24776666666666666

xsmm-custom avg execution time: 0.24776666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 9, 'a_size': 108, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.3333333333333333, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.883627068478407, 'speedup_best_over_ref': 0.883627068478407, 'xsmm_custom_avg': 0.24776666666666666, 'xsmm_custom_best': 0.24776666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.2189333333333333, 'xsmm_reference_best': 0.2189333333333333, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 33600).

Output array: C (18, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.403500 ms

xsmm-reference Time (libxsmm): 0.403500 ms

xsmm-reference No. of CPU cycles: 403500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.40350000000000003

xsmm-reference avg execution time: 0.40350000000000003

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1207205001 cleaned_data/example_mats/quad/p2/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 33600).

Output array: C (18, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 12

lda= 33600, ldb= 12, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.408833 ms

xsmm-custom Time (libxsmm): 0.408833 ms

xsmm-custom No. of CPU cycles: 408833

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.40883333333333333

xsmm-custom avg execution time: 0.40883333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 18, 'a_size': 216, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9869547492865879, 'speedup_best_over_ref': 0.9869547492865879, 'xsmm_custom_avg': 0.4088333333333333, 'xsmm_custom_best': 0.4088333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4035, 'xsmm_reference_best': 0.4035, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 33600).

Output array: C (9, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.304933 ms

xsmm-reference Time (libxsmm): 0.304933 ms

xsmm-reference No. of CPU cycles: 304933

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.30493333333333333

xsmm-reference avg execution time: 0.30493333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 713990639 cleaned_data/example_mats/quad/p2/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 33600).

Output array: C (9, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 18

lda= 33600, ldb= 18, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.319867 ms

xsmm-custom Time (libxsmm): 0.319900 ms

xsmm-custom No. of CPU cycles: 319900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.31986666666666669

xsmm-custom avg execution time: 0.31986666666666669

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 48, 'a_rows': 9, 'a_size': 162, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9533138807836598, 'speedup_best_over_ref': 0.9533138807836598, 'xsmm_custom_avg': 0.3198666666666667, 'xsmm_custom_best': 0.3198666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.30493333333333333, 'xsmm_reference_best': 0.30493333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 33600).

Output array: C (18, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.325000 ms

xsmm-reference Time (libxsmm): 0.325000 ms

xsmm-reference No. of CPU cycles: 325000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.32500000000000001

xsmm-reference avg execution time: 0.32500000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 784532570 cleaned_data/example_mats/quad/p2/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 33600).

Output array: C (18, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 9

lda= 33600, ldb= 9, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.340667 ms

xsmm-custom Time (libxsmm): 0.340667 ms

xsmm-custom No. of CPU cycles: 340666

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.34066666666666667

xsmm-custom avg execution time: 0.34066666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 48, 'a_rows': 18, 'a_size': 162, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9540117416829745, 'speedup_best_over_ref': 0.9540117416829745, 'xsmm_custom_avg': 0.3406666666666667, 'xsmm_custom_best': 0.3406666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.325, 'xsmm_reference_best': 0.325, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 33600).

Output array: C (16, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.449133 ms

xsmm-reference Time (libxsmm): 0.449133 ms

xsmm-reference No. of CPU cycles: 449133

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.44913333333333488

xsmm-reference avg execution time: 0.44913333333333488

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 375751539 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 33600).

Output array: C (16, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 33600, ldb= 16, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.442800 ms

xsmm-custom Time (libxsmm): 0.442800 ms

xsmm-custom No. of CPU cycles: 442800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.44280000000000003

xsmm-custom avg execution time: 0.44280000000000003

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 16, 'a_rows': 16, 'a_size': 256, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0143029208069894, 'speedup_best_over_ref': 1.0143029208069894, 'xsmm_custom_avg': 0.4428, 'xsmm_custom_best': 0.4428, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4491333333333349, 'xsmm_reference_best': 0.4491333333333349, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 33600).

Output array: C (16, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.443433 ms

xsmm-reference Time (libxsmm): 0.443433 ms

xsmm-reference No. of CPU cycles: 443433

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.44343333333333335

xsmm-reference avg execution time: 0.44343333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1836863463 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 33600).

Output array: C (16, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 33600, ldb= 16, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.439000 ms

xsmm-custom Time (libxsmm): 0.439000 ms

xsmm-custom No. of CPU cycles: 439000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.439

xsmm-custom avg execution time: 0.439

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 16, 'a_size': 256, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0100987091875475, 'speedup_best_over_ref': 1.0100987091875475, 'xsmm_custom_avg': 0.439, 'xsmm_custom_best': 0.439, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.44343333333333335, 'xsmm_reference_best': 0.44343333333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 33600).

Output array: C (32, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.832500 ms

xsmm-reference Time (libxsmm): 0.832500 ms

xsmm-reference No. of CPU cycles: 832500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.83250000000000002

xsmm-reference avg execution time: 0.83250000000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 186031000 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 33600).

Output array: C (32, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 33600, ldb= 16, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.809333 ms

xsmm-custom Time (libxsmm): 0.809333 ms

xsmm-custom No. of CPU cycles: 809333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.80933333333333335

xsmm-custom avg execution time: 0.80933333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 32, 'a_size': 512, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.125, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0286243822075782, 'speedup_best_over_ref': 1.0286243822075782, 'xsmm_custom_avg': 0.8093333333333333, 'xsmm_custom_best': 0.8093333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.8325, 'xsmm_reference_best': 0.8325, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 33600).

Output array: C (16, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.820133 ms

xsmm-reference Time (libxsmm): 0.820133 ms

xsmm-reference No. of CPU cycles: 820133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.82013333333333327

xsmm-reference avg execution time: 0.82013333333333327

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1578497252 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 33600).

Output array: C (16, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 32

lda= 33600, ldb= 32, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.806633 ms

xsmm-custom Time (libxsmm): 0.806600 ms

xsmm-custom No. of CPU cycles: 806600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.80663333333333342

xsmm-custom avg execution time: 0.80663333333333342

Freeing A

Freeing B

Freeing C

{'a_cols': 32, 'a_nonzero': 112, 'a_rows': 16, 'a_size': 512, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.21875, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0167362287697836, 'speedup_best_over_ref': 1.0167362287697836, 'xsmm_custom_avg': 0.8066333333333334, 'xsmm_custom_best': 0.8066333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.8201333333333333, 'xsmm_reference_best': 0.8201333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 33600).

Output array: C (32, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.823933 ms

xsmm-reference Time (libxsmm): 0.823933 ms

xsmm-reference No. of CPU cycles: 823933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.8239333333333333

xsmm-reference avg execution time: 0.8239333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1507878880 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 33600).

Output array: C (32, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 33600, ldb= 16, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.844767 ms

xsmm-custom Time (libxsmm): 0.844767 ms

xsmm-custom No. of CPU cycles: 844766

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.84476666666666667

xsmm-custom avg execution time: 0.84476666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 112, 'a_rows': 32, 'a_size': 512, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.21875, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.975338357731918, 'speedup_best_over_ref': 0.975338357731918, 'xsmm_custom_avg': 0.8447666666666667, 'xsmm_custom_best': 0.8447666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.8239333333333333, 'xsmm_reference_best': 0.8239333333333333, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 33600).

Output array: C (16, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.457700 ms

xsmm-reference Time (libxsmm): 0.457700 ms

xsmm-reference No. of CPU cycles: 457700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.4577

xsmm-reference avg execution time: 0.4577

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 2083356200 cleaned_data/example_mats/quad/p3/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 33600).

Output array: C (16, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 33600, ldb= 16, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.429500 ms

xsmm-custom Time (libxsmm): 0.429500 ms

xsmm-custom No. of CPU cycles: 429500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.42949999999999999

xsmm-custom avg execution time: 0.42949999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 16, 'a_size': 256, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0656577415599535, 'speedup_best_over_ref': 1.0656577415599535, 'xsmm_custom_avg': 0.4295, 'xsmm_custom_best': 0.4295, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4577, 'xsmm_reference_best': 0.4577, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 33600).

Output array: C (16, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.458600 ms

xsmm-reference Time (libxsmm): 0.458600 ms

xsmm-reference No. of CPU cycles: 458600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.45859999999999995

xsmm-reference avg execution time: 0.45859999999999995

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 855008106 cleaned_data/example_mats/quad/p3/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 33600).

Output array: C (16, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 33600, ldb= 16, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.442800 ms

xsmm-custom Time (libxsmm): 0.442800 ms

xsmm-custom No. of CPU cycles: 442800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.44280000000000003

xsmm-custom avg execution time: 0.44280000000000003

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 16, 'a_size': 256, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0356820234869013, 'speedup_best_over_ref': 1.0356820234869013, 'xsmm_custom_avg': 0.4428, 'xsmm_custom_best': 0.4428, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.45859999999999995, 'xsmm_reference_best': 0.45859999999999995, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 33600).

Output array: C (32, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.837967 ms

xsmm-reference Time (libxsmm): 0.837933 ms

xsmm-reference No. of CPU cycles: 837933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.83796666666666664

xsmm-reference avg execution time: 0.83796666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 779488550 cleaned_data/example_mats/quad/p3/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 33600).

Output array: C (32, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 33600, ldb= 16, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.816067 ms

xsmm-custom Time (libxsmm): 0.816067 ms

xsmm-custom No. of CPU cycles: 816066

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.81606666666666661

xsmm-custom avg execution time: 0.81606666666666661

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 32, 'a_size': 512, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.125, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0268360428069603, 'speedup_best_over_ref': 1.0268360428069603, 'xsmm_custom_avg': 0.8160666666666666, 'xsmm_custom_best': 0.8160666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.8379666666666666, 'xsmm_reference_best': 0.8379666666666666, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 33600).

Output array: C (16, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.816367 ms

xsmm-reference Time (libxsmm): 0.816367 ms

xsmm-reference No. of CPU cycles: 816366

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.81636666666666668

xsmm-reference avg execution time: 0.81636666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 523465763 cleaned_data/example_mats/quad/p3/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 33600).

Output array: C (16, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 32

lda= 33600, ldb= 32, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.804467 ms

xsmm-custom Time (libxsmm): 0.804467 ms

xsmm-custom No. of CPU cycles: 804466

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.80446666666666666

xsmm-custom avg execution time: 0.80446666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 32, 'a_nonzero': 128, 'a_rows': 16, 'a_size': 512, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0147924090494738, 'speedup_best_over_ref': 1.0147924090494738, 'xsmm_custom_avg': 0.8044666666666667, 'xsmm_custom_best': 0.8044666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.8163666666666667, 'xsmm_reference_best': 0.8163666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 33600).

Output array: C (32, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.839867 ms

xsmm-reference Time (libxsmm): 0.839867 ms

xsmm-reference No. of CPU cycles: 839866

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.83986666666666676

xsmm-reference avg execution time: 0.83986666666666676

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1129865361 cleaned_data/example_mats/quad/p3/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 33600).

Output array: C (32, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 33600, ldb= 16, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.815067 ms

xsmm-custom Time (libxsmm): 0.815067 ms

xsmm-custom No. of CPU cycles: 815066

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.81506666666666672

xsmm-custom avg execution time: 0.81506666666666672

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 128, 'a_rows': 32, 'a_size': 512, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0304269589399642, 'speedup_best_over_ref': 1.0304269589399642, 'xsmm_custom_avg': 0.8150666666666667, 'xsmm_custom_best': 0.8150666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.8398666666666668, 'xsmm_reference_best': 0.8398666666666668, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 33600).

Output array: C (20, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.792300 ms

xsmm-reference Time (libxsmm): 0.792300 ms

xsmm-reference No. of CPU cycles: 792300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.79229999999999989

xsmm-reference avg execution time: 0.79229999999999989

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 925219505 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 33600).

Output array: C (20, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 25

lda= 33600, ldb= 25, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.797667 ms

xsmm-custom Time (libxsmm): 0.797667 ms

xsmm-custom No. of CPU cycles: 797666

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.79766666666666663

xsmm-custom avg execution time: 0.79766666666666663

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 20, 'a_rows': 20, 'a_size': 500, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9932720434600918, 'speedup_best_over_ref': 0.9932720434600918, 'xsmm_custom_avg': 0.7976666666666666, 'xsmm_custom_best': 0.7976666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.7922999999999999, 'xsmm_reference_best': 0.7922999999999999, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 33600).

Output array: C (25, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.812433 ms

xsmm-reference Time (libxsmm): 0.812433 ms

xsmm-reference No. of CPU cycles: 812433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.81243333333333334

xsmm-reference avg execution time: 0.81243333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 557443748 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 33600).

Output array: C (25, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 20

lda= 33600, ldb= 20, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.796933 ms

xsmm-custom Time (libxsmm): 0.796933 ms

xsmm-custom No. of CPU cycles: 796933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.79693333333333338

xsmm-custom avg execution time: 0.79693333333333338

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 25, 'a_size': 500, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0194495566337627, 'speedup_best_over_ref': 1.0194495566337627, 'xsmm_custom_avg': 0.7969333333333334, 'xsmm_custom_best': 0.7969333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.8124333333333333, 'xsmm_reference_best': 0.8124333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 33600).

Output array: C (50, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.594900 ms

xsmm-reference Time (libxsmm): 1.594867 ms

xsmm-reference No. of CPU cycles: 1594866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.5949

xsmm-reference avg execution time: 1.5949

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1470332859 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 33600).

Output array: C (50, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 20

lda= 33600, ldb= 20, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.578333 ms

xsmm-custom Time (libxsmm): 1.578333 ms

xsmm-custom No. of CPU cycles: 1578333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.5783333333333334

xsmm-custom avg execution time: 1.5783333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 50, 'a_size': 1000, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0104963041182682, 'speedup_best_over_ref': 1.0104963041182682, 'xsmm_custom_avg': 1.5783333333333334, 'xsmm_custom_best': 1.5783333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.5949, 'xsmm_reference_best': 1.5949, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 33600).

Output array: C (25, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.065067 ms

xsmm-reference Time (libxsmm): 2.065033 ms

xsmm-reference No. of CPU cycles: 2065033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.0650666666666666

xsmm-reference avg execution time: 2.0650666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1608316714 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 33600).

Output array: C (25, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 50

lda= 33600, ldb= 50, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.076167 ms

xsmm-custom Time (libxsmm): 2.076167 ms

xsmm-custom No. of CPU cycles: 2076166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.0761666666666665

xsmm-custom avg execution time: 2.0761666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 50, 'a_nonzero': 220, 'a_rows': 25, 'a_size': 1250, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.176, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9946536084129406, 'speedup_best_over_ref': 0.9946536084129406, 'xsmm_custom_avg': 2.0761666666666665, 'xsmm_custom_best': 2.0761666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.0650666666666666, 'xsmm_reference_best': 2.0650666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 33600).

Output array: C (50, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.054067 ms

xsmm-reference Time (libxsmm): 2.054067 ms

xsmm-reference No. of CPU cycles: 2054066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.0540666666666665

xsmm-reference avg execution time: 2.0540666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1424253892 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 33600).

Output array: C (50, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 25

lda= 33600, ldb= 25, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.030167 ms

xsmm-custom Time (libxsmm): 2.030167 ms

xsmm-custom No. of CPU cycles: 2030166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.0301666666666667

xsmm-custom avg execution time: 2.0301666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 220, 'a_rows': 50, 'a_size': 1250, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.176, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.011772432476808, 'speedup_best_over_ref': 1.011772432476808, 'xsmm_custom_avg': 2.0301666666666667, 'xsmm_custom_best': 2.0301666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.0540666666666665, 'xsmm_reference_best': 2.0540666666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 33600).

Output array: C (20, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.818833 ms

xsmm-reference Time (libxsmm): 0.818833 ms

xsmm-reference No. of CPU cycles: 818833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.81883333333333341

xsmm-reference avg execution time: 0.81883333333333341

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1764343550 cleaned_data/example_mats/quad/p4/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 33600).

Output array: C (20, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 25

lda= 33600, ldb= 25, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.796033 ms

xsmm-custom Time (libxsmm): 0.796033 ms

xsmm-custom No. of CPU cycles: 796033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.79603333333333337

xsmm-custom avg execution time: 0.79603333333333337

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 100, 'a_rows': 20, 'a_size': 500, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0286420166659689, 'speedup_best_over_ref': 1.0286420166659689, 'xsmm_custom_avg': 0.7960333333333334, 'xsmm_custom_best': 0.7960333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.8188333333333334, 'xsmm_reference_best': 0.8188333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 33600).

Output array: C (25, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.845400 ms

xsmm-reference Time (libxsmm): 0.845400 ms

xsmm-reference No. of CPU cycles: 845400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.84539999999999993

xsmm-reference avg execution time: 0.84539999999999993

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 840441835 cleaned_data/example_mats/quad/p4/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 33600).

Output array: C (25, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 20

lda= 33600, ldb= 20, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.798633 ms

xsmm-custom Time (libxsmm): 0.798633 ms

xsmm-custom No. of CPU cycles: 798633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.79863333333333331

xsmm-custom avg execution time: 0.79863333333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 25, 'a_size': 500, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.058558370549689, 'speedup_best_over_ref': 1.058558370549689, 'xsmm_custom_avg': 0.7986333333333333, 'xsmm_custom_best': 0.7986333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.8453999999999999, 'xsmm_reference_best': 0.8453999999999999, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 33600).

Output array: C (50, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.551333 ms

xsmm-reference Time (libxsmm): 1.551333 ms

xsmm-reference No. of CPU cycles: 1551333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.5513333333333332

xsmm-reference avg execution time: 1.5513333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 727188831 cleaned_data/example_mats/quad/p4/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 33600).

Output array: C (50, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 20

lda= 33600, ldb= 20, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.596367 ms

xsmm-custom Time (libxsmm): 1.596367 ms

xsmm-custom No. of CPU cycles: 1596366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.5963666666666667

xsmm-custom avg execution time: 1.5963666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 50, 'a_size': 1000, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9717901067006326, 'speedup_best_over_ref': 0.9717901067006326, 'xsmm_custom_avg': 1.5963666666666667, 'xsmm_custom_best': 1.5963666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.5513333333333332, 'xsmm_reference_best': 1.5513333333333332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 33600).

Output array: C (25, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.127300 ms

xsmm-reference Time (libxsmm): 2.127267 ms

xsmm-reference No. of CPU cycles: 2127266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.1273

xsmm-reference avg execution time: 2.1273

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1844146704 cleaned_data/example_mats/quad/p4/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 33600).

Output array: C (25, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 50

lda= 33600, ldb= 50, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.107333 ms

xsmm-custom Time (libxsmm): 2.107233 ms

xsmm-custom No. of CPU cycles: 2107233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.1073333333333335

xsmm-custom avg execution time: 2.1073333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 50, 'a_nonzero': 240, 'a_rows': 25, 'a_size': 1250, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.192, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0094748497310977, 'speedup_best_over_ref': 1.0094748497310977, 'xsmm_custom_avg': 2.1073333333333335, 'xsmm_custom_best': 2.1073333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.1273, 'xsmm_reference_best': 2.1273, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 33600).

Output array: C (50, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.020667 ms

xsmm-reference Time (libxsmm): 2.020667 ms

xsmm-reference No. of CPU cycles: 2020666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.0206666666666666

xsmm-reference avg execution time: 2.0206666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 523009600 cleaned_data/example_mats/quad/p4/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 33600).

Output array: C (50, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 25

lda= 33600, ldb= 25, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.020733 ms

xsmm-custom Time (libxsmm): 2.020733 ms

xsmm-custom No. of CPU cycles: 2020733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.0207333333333333

xsmm-custom avg execution time: 2.0207333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 240, 'a_rows': 50, 'a_size': 1250, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.192, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9999670086767181, 'speedup_best_over_ref': 0.9999670086767181, 'xsmm_custom_avg': 2.0207333333333333, 'xsmm_custom_best': 2.0207333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.0206666666666666, 'xsmm_reference_best': 2.0206666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 33600).

Output array: C (24, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.360700 ms

xsmm-reference Time (libxsmm): 1.360700 ms

xsmm-reference No. of CPU cycles: 1360700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.3607

xsmm-reference avg execution time: 1.3607

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 61603371 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 33600).

Output array: C (24, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 36

lda= 33600, ldb= 36, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.342933 ms

xsmm-custom Time (libxsmm): 1.342933 ms

xsmm-custom No. of CPU cycles: 1342933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.3429333333333333

xsmm-custom avg execution time: 1.3429333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 24, 'a_rows': 24, 'a_size': 864, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.013229745830024, 'speedup_best_over_ref': 1.013229745830024, 'xsmm_custom_avg': 1.3429333333333333, 'xsmm_custom_best': 1.3429333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.3607, 'xsmm_reference_best': 1.3607, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 33600).

Output array: C (36, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.380000 ms

xsmm-reference Time (libxsmm): 1.380033 ms

xsmm-reference No. of CPU cycles: 1380033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.3799999999999992

xsmm-reference avg execution time: 1.3799999999999992

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1136028185 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 33600).

Output array: C (36, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 24

lda= 33600, ldb= 24, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.342700 ms

xsmm-custom Time (libxsmm): 1.342667 ms

xsmm-custom No. of CPU cycles: 1342666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.3427

xsmm-custom avg execution time: 1.3427

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 36, 'a_size': 864, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0277798465777905, 'speedup_best_over_ref': 1.0277798465777905, 'xsmm_custom_avg': 1.3427, 'xsmm_custom_best': 1.3427, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.3799999999999992, 'xsmm_reference_best': 1.3799999999999992, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 33600).

Output array: C (72, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.236067 ms

xsmm-reference Time (libxsmm): 3.236067 ms

xsmm-reference No. of CPU cycles: 3236066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.2360666666666664

xsmm-reference avg execution time: 3.2360666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 445346272 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 33600).

Output array: C (72, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 24

lda= 33600, ldb= 24, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.268633 ms

xsmm-custom Time (libxsmm): 3.268600 ms

xsmm-custom No. of CPU cycles: 3268600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.2686333333333333

xsmm-custom avg execution time: 3.2686333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 72, 'a_size': 1728, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.08333333333333333, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9900366106119785, 'speedup_best_over_ref': 0.9900366106119785, 'xsmm_custom_avg': 3.2686333333333333, 'xsmm_custom_best': 3.2686333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.2360666666666664, 'xsmm_reference_best': 3.2360666666666664, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 33600).

Output array: C (36, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.602567 ms

xsmm-reference Time (libxsmm): 4.602567 ms

xsmm-reference No. of CPU cycles: 4602566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.6025666666666663

xsmm-reference avg execution time: 4.6025666666666663

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 662276695 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 33600).

Output array: C (36, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 72

lda= 33600, ldb= 72, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.595533 ms

xsmm-custom Time (libxsmm): 4.595433 ms

xsmm-custom No. of CPU cycles: 4595433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.5955333333333339

xsmm-custom avg execution time: 4.5955333333333339

Freeing A

Freeing B

Freeing C

{'a_cols': 72, 'a_nonzero': 384, 'a_rows': 36, 'a_size': 2592, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14814814814814814, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0015304716173674, 'speedup_best_over_ref': 1.0015304716173674, 'xsmm_custom_avg': 4.595533333333334, 'xsmm_custom_best': 4.595533333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.602566666666666, 'xsmm_reference_best': 4.602566666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 33600).

Output array: C (72, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.466600 ms

xsmm-reference Time (libxsmm): 4.466633 ms

xsmm-reference No. of CPU cycles: 4466633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.4665999999999997

xsmm-reference avg execution time: 4.4665999999999997

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 798434455 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 33600).

Output array: C (72, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 36

lda= 33600, ldb= 36, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.503000 ms

xsmm-custom Time (libxsmm): 4.503000 ms

xsmm-custom No. of CPU cycles: 4503000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.5030000000000001

xsmm-custom avg execution time: 4.5030000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 384, 'a_rows': 72, 'a_size': 2592, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14814814814814814, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9919165001110369, 'speedup_best_over_ref': 0.9919165001110369, 'xsmm_custom_avg': 4.503, 'xsmm_custom_best': 4.503, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.4666, 'xsmm_reference_best': 4.4666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 33600).

Output array: C (24, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.339433 ms

xsmm-reference Time (libxsmm): 1.339400 ms

xsmm-reference No. of CPU cycles: 1339400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.3394333333333333

xsmm-reference avg execution time: 1.3394333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1770375628 cleaned_data/example_mats/quad/p5/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 33600).

Output array: C (24, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 36

lda= 33600, ldb= 36, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.334467 ms

xsmm-custom Time (libxsmm): 1.334467 ms

xsmm-custom No. of CPU cycles: 1334466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.3344666666666667

xsmm-custom avg execution time: 1.3344666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 144, 'a_rows': 24, 'a_size': 864, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0037218364390268, 'speedup_best_over_ref': 1.0037218364390268, 'xsmm_custom_avg': 1.3344666666666667, 'xsmm_custom_best': 1.3344666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.3394333333333333, 'xsmm_reference_best': 1.3394333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 33600).

Output array: C (36, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.371400 ms

xsmm-reference Time (libxsmm): 1.371400 ms

xsmm-reference No. of CPU cycles: 1371400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.3714000000000002

xsmm-reference avg execution time: 1.3714000000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1714917677 cleaned_data/example_mats/quad/p5/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 33600).

Output array: C (36, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 24

lda= 33600, ldb= 24, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.343233 ms

xsmm-custom Time (libxsmm): 1.343233 ms

xsmm-custom No. of CPU cycles: 1343233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.3432333333333333

xsmm-custom avg execution time: 1.3432333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 36, 'a_size': 864, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0209693029257763, 'speedup_best_over_ref': 1.0209693029257763, 'xsmm_custom_avg': 1.3432333333333333, 'xsmm_custom_best': 1.3432333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.3714000000000002, 'xsmm_reference_best': 1.3714000000000002, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 33600).

Output array: C (72, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.441467 ms

xsmm-reference Time (libxsmm): 4.441500 ms

xsmm-reference No. of CPU cycles: 4441500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.4414666666666669

xsmm-reference avg execution time: 4.4414666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 705034975 cleaned_data/example_mats/quad/p5/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 33600).

Output array: C (72, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 24

lda= 33600, ldb= 24, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.666267 ms

xsmm-custom Time (libxsmm): 3.666267 ms

xsmm-custom No. of CPU cycles: 3666266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.6662666666666666

xsmm-custom avg execution time: 3.6662666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 72, 'a_size': 1728, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.08333333333333333, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.2114412481361605, 'speedup_best_over_ref': 1.2114412481361605, 'xsmm_custom_avg': 3.6662666666666666, 'xsmm_custom_best': 3.6662666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.441466666666667, 'xsmm_reference_best': 4.441466666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 33600).

Output array: C (36, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.613033 ms

xsmm-reference Time (libxsmm): 4.613000 ms

xsmm-reference No. of CPU cycles: 4613000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.6130333333333331

xsmm-reference avg execution time: 4.6130333333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 184163319 cleaned_data/example_mats/quad/p5/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 33600).

Output array: C (36, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 72

lda= 33600, ldb= 72, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.620733 ms

xsmm-custom Time (libxsmm): 4.620767 ms

xsmm-custom No. of CPU cycles: 4620766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.6207333333333338

xsmm-custom avg execution time: 4.6207333333333338

Freeing A

Freeing B

Freeing C

{'a_cols': 72, 'a_nonzero': 432, 'a_rows': 36, 'a_size': 2592, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9983335978416122, 'speedup_best_over_ref': 0.9983335978416122, 'xsmm_custom_avg': 4.620733333333334, 'xsmm_custom_best': 4.620733333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.613033333333333, 'xsmm_reference_best': 4.613033333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 33600).

Output array: C (72, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.439133 ms

xsmm-reference Time (libxsmm): 4.439133 ms

xsmm-reference No. of CPU cycles: 4439133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.4391333333333325

xsmm-reference avg execution time: 4.4391333333333325

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1569634402 cleaned_data/example_mats/quad/p5/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 33600).

Output array: C (72, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 36

lda= 33600, ldb= 36, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.521233 ms

xsmm-custom Time (libxsmm): 4.521233 ms

xsmm-custom No. of CPU cycles: 4521233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.521233333333333

xsmm-custom avg execution time: 4.521233333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 432, 'a_rows': 72, 'a_size': 2592, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9818412380102773, 'speedup_best_over_ref': 0.9818412380102773, 'xsmm_custom_avg': 4.521233333333333, 'xsmm_custom_best': 4.521233333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.4391333333333325, 'xsmm_reference_best': 4.4391333333333325, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 33600).

Output array: C (28, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.255733 ms

xsmm-reference Time (libxsmm): 2.255733 ms

xsmm-reference No. of CPU cycles: 2255733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.2557333333333331

xsmm-reference avg execution time: 2.2557333333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 874989552 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 33600).

Output array: C (28, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 49

lda= 33600, ldb= 49, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.266033 ms

xsmm-custom Time (libxsmm): 2.266000 ms

xsmm-custom No. of CPU cycles: 2266000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.2660333333333331

xsmm-custom avg execution time: 2.2660333333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 28, 'a_rows': 28, 'a_size': 1372, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9954546123181477, 'speedup_best_over_ref': 0.9954546123181477, 'xsmm_custom_avg': 2.266033333333333, 'xsmm_custom_best': 2.266033333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.255733333333333, 'xsmm_reference_best': 2.255733333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 33600).

Output array: C (49, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.205800 ms

xsmm-reference Time (libxsmm): 2.205800 ms

xsmm-reference No. of CPU cycles: 2205800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.2058000000000004

xsmm-reference avg execution time: 2.2058000000000004

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 342959745 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 33600).

Output array: C (49, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 28

lda= 33600, ldb= 28, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.235233 ms

xsmm-custom Time (libxsmm): 2.235233 ms

xsmm-custom No. of CPU cycles: 2235233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.2352333333333334

xsmm-custom avg execution time: 2.2352333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 49, 'a_size': 1372, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14285714285714285, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9868320980658247, 'speedup_best_over_ref': 0.9868320980658247, 'xsmm_custom_avg': 2.2352333333333334, 'xsmm_custom_best': 2.2352333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.2058000000000004, 'xsmm_reference_best': 2.2058000000000004, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 33600).

Output array: C (98, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.053700 ms

xsmm-reference Time (libxsmm): 5.053700 ms

xsmm-reference No. of CPU cycles: 5053700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.0537000000000001

xsmm-reference avg execution time: 5.0537000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 653549567 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 33600).

Output array: C (98, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 28

lda= 33600, ldb= 28, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.022800 ms

xsmm-custom Time (libxsmm): 5.022800 ms

xsmm-custom No. of CPU cycles: 5022800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.0227999999999993

xsmm-custom avg execution time: 5.0227999999999993

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 98, 'a_size': 2744, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.07142857142857142, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0061519471211278, 'speedup_best_over_ref': 1.0061519471211278, 'xsmm_custom_avg': 5.022799999999999, 'xsmm_custom_best': 5.022799999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.0537, 'xsmm_reference_best': 5.0537, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 33600).

Output array: C (49, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.232867 ms

xsmm-reference Time (libxsmm): 8.232867 ms

xsmm-reference No. of CPU cycles: 8232866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.2328666666666663

xsmm-reference avg execution time: 8.2328666666666663

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1049063598 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 33600).

Output array: C (49, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 98

lda= 33600, ldb= 98, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.225733 ms

xsmm-custom Time (libxsmm): 8.225733 ms

xsmm-custom No. of CPU cycles: 8225733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.2257333333333342

xsmm-custom avg execution time: 8.2257333333333342

Freeing A

Freeing B

Freeing C

{'a_cols': 98, 'a_nonzero': 616, 'a_rows': 49, 'a_size': 4802, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1282798833819242, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0008671972509036, 'speedup_best_over_ref': 1.0008671972509036, 'xsmm_custom_avg': 8.225733333333334, 'xsmm_custom_best': 8.225733333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.232866666666666, 'xsmm_reference_best': 8.232866666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 33600).

Output array: C (98, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 9.398600 ms

xsmm-reference Time (libxsmm): 9.398600 ms

xsmm-reference No. of CPU cycles: 9398600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 9.3986000000000001

xsmm-reference avg execution time: 9.3986000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1696184692 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 33600).

Output array: C (98, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 49

lda= 33600, ldb= 49, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 9.410000 ms

xsmm-custom Time (libxsmm): 9.410000 ms

xsmm-custom No. of CPU cycles: 9410000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 9.4099999999999984

xsmm-custom avg execution time: 9.4099999999999984

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 616, 'a_rows': 98, 'a_size': 4802, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1282798833819242, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9987885228480342, 'speedup_best_over_ref': 0.9987885228480342, 'xsmm_custom_avg': 9.409999999999998, 'xsmm_custom_best': 9.409999999999998, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 9.3986, 'xsmm_reference_best': 9.3986, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 33600).

Output array: C (28, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.229600 ms

xsmm-reference Time (libxsmm): 2.229567 ms

xsmm-reference No. of CPU cycles: 2229566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.2296

xsmm-reference avg execution time: 2.2296

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1271729182 cleaned_data/example_mats/quad/p6/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 33600).

Output array: C (28, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 49

lda= 33600, ldb= 49, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.272733 ms

xsmm-custom Time (libxsmm): 2.272733 ms

xsmm-custom No. of CPU cycles: 2272733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.2727333333333335

xsmm-custom avg execution time: 2.2727333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 196, 'a_rows': 28, 'a_size': 1372, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14285714285714285, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9810213839429761, 'speedup_best_over_ref': 0.9810213839429761, 'xsmm_custom_avg': 2.2727333333333335, 'xsmm_custom_best': 2.2727333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.2296, 'xsmm_reference_best': 2.2296, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 33600).

Output array: C (49, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.220433 ms

xsmm-reference Time (libxsmm): 2.220433 ms

xsmm-reference No. of CPU cycles: 2220433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.220433333333335

xsmm-reference avg execution time: 2.220433333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 129125878 cleaned_data/example_mats/quad/p6/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 33600).

Output array: C (49, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 28

lda= 33600, ldb= 28, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.248633 ms

xsmm-custom Time (libxsmm): 2.248633 ms

xsmm-custom No. of CPU cycles: 2248633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.2486333333333333

xsmm-custom avg execution time: 2.2486333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 49, 'a_size': 1372, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14285714285714285, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9874590492002557, 'speedup_best_over_ref': 0.9874590492002557, 'xsmm_custom_avg': 2.2486333333333333, 'xsmm_custom_best': 2.2486333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.220433333333335, 'xsmm_reference_best': 2.220433333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 33600).

Output array: C (98, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.112867 ms

xsmm-reference Time (libxsmm): 5.112867 ms

xsmm-reference No. of CPU cycles: 5112866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.1128666666666662

xsmm-reference avg execution time: 5.1128666666666662

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 275870536 cleaned_data/example_mats/quad/p6/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 33600).

Output array: C (98, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 28

lda= 33600, ldb= 28, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.088067 ms

xsmm-custom Time (libxsmm): 5.088067 ms

xsmm-custom No. of CPU cycles: 5088066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.0880666666666663

xsmm-custom avg execution time: 5.0880666666666663

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 98, 'a_size': 2744, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.07142857142857142, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0048741499718294, 'speedup_best_over_ref': 1.0048741499718294, 'xsmm_custom_avg': 5.088066666666666, 'xsmm_custom_best': 5.088066666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.112866666666666, 'xsmm_reference_best': 5.112866666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 33600).

Output array: C (49, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.203267 ms

xsmm-reference Time (libxsmm): 8.203267 ms

xsmm-reference No. of CPU cycles: 8203266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.2032666666666678

xsmm-reference avg execution time: 8.2032666666666678

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 924775832 cleaned_data/example_mats/quad/p6/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 33600).

Output array: C (49, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 98

lda= 33600, ldb= 98, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.204067 ms

xsmm-custom Time (libxsmm): 8.203933 ms

xsmm-custom No. of CPU cycles: 8203933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.2040666666666677

xsmm-custom avg execution time: 8.2040666666666677

Freeing A

Freeing B

Freeing C

{'a_cols': 98, 'a_nonzero': 672, 'a_rows': 49, 'a_size': 4802, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.13994169096209913, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9999024873843053, 'speedup_best_over_ref': 0.9999024873843053, 'xsmm_custom_avg': 8.204066666666668, 'xsmm_custom_best': 8.204066666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.203266666666668, 'xsmm_reference_best': 8.203266666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 33600).

Output array: C (98, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 9.377467 ms

xsmm-reference Time (libxsmm): 9.377433 ms

xsmm-reference No. of CPU cycles: 9377433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 9.3774666666666668

xsmm-reference avg execution time: 9.3774666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 290782064 cleaned_data/example_mats/quad/p6/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 33600).

Output array: C (98, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 49

lda= 33600, ldb= 49, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 9.358300 ms

xsmm-custom Time (libxsmm): 9.358300 ms

xsmm-custom No. of CPU cycles: 9358300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 9.3583000000000016

xsmm-custom avg execution time: 9.3583000000000016

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 672, 'a_rows': 98, 'a_size': 4802, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.13994169096209913, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0020480927803836, 'speedup_best_over_ref': 1.0020480927803836, 'xsmm_custom_avg': 9.358300000000002, 'xsmm_custom_best': 9.358300000000002, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 9.377466666666667, 'xsmm_reference_best': 9.377466666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m0.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 33600).

Output array: C (12, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.141700 ms

xsmm-reference Time (libxsmm): 0.141700 ms

xsmm-reference No. of CPU cycles: 141700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.14170000000000002

xsmm-reference avg execution time: 0.14170000000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 699469976 cleaned_data/example_mats/tet/p1/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m0.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 33600).

Output array: C (12, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 4

lda= 33600, ldb= 4, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.163133 ms

xsmm-custom Time (libxsmm): 0.163133 ms

xsmm-custom No. of CPU cycles: 163133

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.16313333333333332

xsmm-custom avg execution time: 0.16313333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 48, 'a_rows': 12, 'a_size': 48, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.868614630159379, 'speedup_best_over_ref': 0.868614630159379, 'xsmm_custom_avg': 0.16313333333333332, 'xsmm_custom_best': 0.16313333333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.14170000000000002, 'xsmm_reference_best': 0.14170000000000002, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m3.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 33600).

Output array: C (4, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.119467 ms

xsmm-reference Time (libxsmm): 0.119467 ms

xsmm-reference No. of CPU cycles: 119466

CPU clock speed (GHz): 0.999994

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.11946666666666667

xsmm-reference avg execution time: 0.11946666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 263485586 cleaned_data/example_mats/tet/p1/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m3.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 33600).

Output array: C (4, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 12

lda= 33600, ldb= 12, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.143267 ms

xsmm-custom Time (libxsmm): 0.143267 ms

xsmm-custom No. of CPU cycles: 143266

CPU clock speed (GHz): 0.999995

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.14326666666666668

xsmm-custom avg execution time: 0.14326666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 48, 'a_rows': 4, 'a_size': 48, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.8338762214983713, 'speedup_best_over_ref': 0.8338762214983713, 'xsmm_custom_avg': 0.14326666666666668, 'xsmm_custom_best': 0.14326666666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.11946666666666667, 'xsmm_reference_best': 0.11946666666666667, 'xsmm_reference_cpu_freq': 0.999995, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m6.txt...

Read matrix has 12 rows and 12 columns.

Input arrays: A (12, 12), B (12, 33600).

Output array: C (12, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.279133 ms

xsmm-reference Time (libxsmm): 0.279100 ms

xsmm-reference No. of CPU cycles: 279100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.27913333333333334

xsmm-reference avg execution time: 0.27913333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1977215602 cleaned_data/example_mats/tet/p1/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m6.txt...

Read matrix has 12 rows and 12 columns.

Input arrays: A (12, 12), B (12, 33600).

Output array: C (12, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 12

lda= 33600, ldb= 12, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.294267 ms

xsmm-custom Time (libxsmm): 0.294267 ms

xsmm-custom No. of CPU cycles: 294266

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.29426666666666662

xsmm-custom avg execution time: 0.29426666666666662

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 72, 'a_rows': 12, 'a_size': 144, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9485727231536024, 'speedup_best_over_ref': 0.9485727231536024, 'xsmm_custom_avg': 0.2942666666666666, 'xsmm_custom_best': 0.2942666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.27913333333333334, 'xsmm_reference_best': 0.27913333333333334, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m132.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 33600).

Output array: C (4, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.111700 ms

xsmm-reference Time (libxsmm): 0.111700 ms

xsmm-reference No. of CPU cycles: 111700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.11169999999999999

xsmm-reference avg execution time: 0.11169999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 2033697959 cleaned_data/example_mats/tet/p1/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m132.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 33600).

Output array: C (4, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 12

lda= 33600, ldb= 12, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.132133 ms

xsmm-custom Time (libxsmm): 0.132133 ms

xsmm-custom No. of CPU cycles: 132133

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.13213333333333332

xsmm-custom avg execution time: 0.13213333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 24, 'a_rows': 4, 'a_size': 48, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.8453582240161454, 'speedup_best_over_ref': 0.8453582240161454, 'xsmm_custom_avg': 0.13213333333333332, 'xsmm_custom_best': 0.13213333333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.1117, 'xsmm_reference_best': 0.1117, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m460.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 33600).

Output array: C (12, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.142400 ms

xsmm-reference Time (libxsmm): 0.142400 ms

xsmm-reference No. of CPU cycles: 142400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.1424

xsmm-reference avg execution time: 0.1424

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1944396791 cleaned_data/example_mats/tet/p1/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m460.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 33600).

Output array: C (12, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 4

lda= 33600, ldb= 4, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.163267 ms

xsmm-custom Time (libxsmm): 0.163267 ms

xsmm-custom No. of CPU cycles: 163266

CPU clock speed (GHz): 0.999996

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.16326666666666664

xsmm-custom avg execution time: 0.16326666666666664

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 24, 'a_rows': 12, 'a_size': 48, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.8721927317272358, 'speedup_best_over_ref': 0.8721927317272358, 'xsmm_custom_avg': 0.16326666666666664, 'xsmm_custom_best': 0.16326666666666664, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.1424, 'xsmm_reference_best': 0.1424, 'xsmm_reference_cpu_freq': 0.999996, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m0.txt...

Read matrix has 24 rows and 10 columns.

Input arrays: A (24, 10), B (10, 33600).

Output array: C (24, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.453133 ms

xsmm-reference Time (libxsmm): 0.453133 ms

xsmm-reference No. of CPU cycles: 453133

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.45313333333333333

xsmm-reference avg execution time: 0.45313333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 364453355 cleaned_data/example_mats/tet/p2/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m0.txt...

Read matrix has 24 rows and 10 columns.

Input arrays: A (24, 10), B (10, 33600).

Output array: C (24, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 10

lda= 33600, ldb= 10, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.432900 ms

xsmm-custom Time (libxsmm): 0.432900 ms

xsmm-custom No. of CPU cycles: 432900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.43290000000000001

xsmm-custom avg execution time: 0.43290000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 240, 'a_rows': 24, 'a_size': 240, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0467390467390467, 'speedup_best_over_ref': 1.0467390467390467, 'xsmm_custom_avg': 0.4329, 'xsmm_custom_best': 0.4329, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.45313333333333333, 'xsmm_reference_best': 0.45313333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m3.txt...

Read matrix has 10 rows and 24 columns.

Input arrays: A (10, 24), B (24, 33600).

Output array: C (10, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.420067 ms

xsmm-reference Time (libxsmm): 0.420067 ms

xsmm-reference No. of CPU cycles: 420066

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.4200666666666667

xsmm-reference avg execution time: 0.4200666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 301247327 cleaned_data/example_mats/tet/p2/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m3.txt...

Read matrix has 10 rows and 24 columns.

Input arrays: A (10, 24), B (24, 33600).

Output array: C (10, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 24

lda= 33600, ldb= 24, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.429900 ms

xsmm-custom Time (libxsmm): 0.429900 ms

xsmm-custom No. of CPU cycles: 429900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.4299

xsmm-custom avg execution time: 0.4299

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 240, 'a_rows': 10, 'a_size': 240, 'a_unique': 28, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9771264635186478, 'speedup_best_over_ref': 0.9771264635186478, 'xsmm_custom_avg': 0.4299, 'xsmm_custom_best': 0.4299, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4200666666666667, 'xsmm_reference_best': 0.4200666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m6.txt...

Read matrix has 30 rows and 24 columns.

Input arrays: A (30, 24), B (24, 33600).

Output array: C (30, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.128833 ms

xsmm-reference Time (libxsmm): 1.128833 ms

xsmm-reference No. of CPU cycles: 1128833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.1288333333333334

xsmm-reference avg execution time: 1.1288333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1018255394 cleaned_data/example_mats/tet/p2/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m6.txt...

Read matrix has 30 rows and 24 columns.

Input arrays: A (30, 24), B (24, 33600).

Output array: C (30, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 24

lda= 33600, ldb= 24, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.115600 ms

xsmm-custom Time (libxsmm): 1.115567 ms

xsmm-custom No. of CPU cycles: 1115566

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.1156000000000001

xsmm-custom avg execution time: 1.1156000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 360, 'a_rows': 30, 'a_size': 720, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0118620772080793, 'speedup_best_over_ref': 1.0118620772080793, 'xsmm_custom_avg': 1.1156000000000001, 'xsmm_custom_best': 1.1156000000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.1288333333333334, 'xsmm_reference_best': 1.1288333333333334, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m132.txt...

Read matrix has 10 rows and 30 columns.

Input arrays: A (10, 30), B (30, 33600).

Output array: C (10, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.497100 ms

xsmm-reference Time (libxsmm): 0.497100 ms

xsmm-reference No. of CPU cycles: 497100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.49709999999999999

xsmm-reference avg execution time: 0.49709999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 2030546786 cleaned_data/example_mats/tet/p2/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m132.txt...

Read matrix has 10 rows and 30 columns.

Input arrays: A (10, 30), B (30, 33600).

Output array: C (10, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 30

lda= 33600, ldb= 30, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.496433 ms

xsmm-custom Time (libxsmm): 0.496433 ms

xsmm-custom No. of CPU cycles: 496433

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.49643333333333334

xsmm-custom avg execution time: 0.49643333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 30, 'a_nonzero': 252, 'a_rows': 10, 'a_size': 300, 'a_unique': 23, 'alpha': 1.0, 'beta': 0.0, 'density': 0.84, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.001342912777815, 'speedup_best_over_ref': 1.001342912777815, 'xsmm_custom_avg': 0.49643333333333334, 'xsmm_custom_best': 0.49643333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4971, 'xsmm_reference_best': 0.4971, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m460.txt...

Read matrix has 30 rows and 10 columns.

Input arrays: A (30, 10), B (10, 33600).

Output array: C (30, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.529167 ms

xsmm-reference Time (libxsmm): 0.529167 ms

xsmm-reference No. of CPU cycles: 529166

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.52916666666666667

xsmm-reference avg execution time: 0.52916666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 424287672 cleaned_data/example_mats/tet/p2/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m460.txt...

Read matrix has 30 rows and 10 columns.

Input arrays: A (30, 10), B (10, 33600).

Output array: C (30, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 10

lda= 33600, ldb= 10, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.509533 ms

xsmm-custom Time (libxsmm): 0.509533 ms

xsmm-custom No. of CPU cycles: 509533

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.50953333333333328

xsmm-custom avg execution time: 0.50953333333333328

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 252, 'a_rows': 30, 'a_size': 300, 'a_unique': 23, 'alpha': 1.0, 'beta': 0.0, 'density': 0.84, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0385319900562608, 'speedup_best_over_ref': 1.0385319900562608, 'xsmm_custom_avg': 0.5095333333333333, 'xsmm_custom_best': 0.5095333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5291666666666667, 'xsmm_reference_best': 0.5291666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m0.txt...

Read matrix has 40 rows and 20 columns.

Input arrays: A (40, 20), B (20, 33600).

Output array: C (40, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.266433 ms

xsmm-reference Time (libxsmm): 1.266433 ms

xsmm-reference No. of CPU cycles: 1266433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.2664333333333333

xsmm-reference avg execution time: 1.2664333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1067576218 cleaned_data/example_mats/tet/p3/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m0.txt...

Read matrix has 40 rows and 20 columns.

Input arrays: A (40, 20), B (20, 33600).

Output array: C (40, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 40, k= 20

lda= 33600, ldb= 20, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 40

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.249533 ms

xsmm-custom Time (libxsmm): 1.249533 ms

xsmm-custom No. of CPU cycles: 1249533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.2495333333333332

xsmm-custom avg execution time: 1.2495333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 800, 'a_rows': 40, 'a_size': 800, 'a_unique': 40, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.013525049351758, 'speedup_best_over_ref': 1.013525049351758, 'xsmm_custom_avg': 1.2495333333333332, 'xsmm_custom_best': 1.2495333333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.2664333333333333, 'xsmm_reference_best': 1.2664333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m3.txt...

Read matrix has 20 rows and 40 columns.

Input arrays: A (20, 40), B (40, 33600).

Output array: C (20, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.250867 ms

xsmm-reference Time (libxsmm): 1.250867 ms

xsmm-reference No. of CPU cycles: 1250866

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.2508666666666668

xsmm-reference avg execution time: 1.2508666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1516343268 cleaned_data/example_mats/tet/p3/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m3.txt...

Read matrix has 20 rows and 40 columns.

Input arrays: A (20, 40), B (40, 33600).

Output array: C (20, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 40

lda= 33600, ldb= 40, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.266833 ms

xsmm-custom Time (libxsmm): 1.266833 ms

xsmm-custom No. of CPU cycles: 1266833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.2668333333333335

xsmm-custom avg execution time: 1.2668333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 40, 'a_nonzero': 800, 'a_rows': 20, 'a_size': 800, 'a_unique': 80, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9873963952111564, 'speedup_best_over_ref': 0.9873963952111564, 'xsmm_custom_avg': 1.2668333333333335, 'xsmm_custom_best': 1.2668333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.2508666666666668, 'xsmm_reference_best': 1.2508666666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m6.txt...

Read matrix has 60 rows and 40 columns.

Input arrays: A (60, 40), B (40, 33600).

Output array: C (60, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.178033 ms

xsmm-reference Time (libxsmm): 4.178033 ms

xsmm-reference No. of CPU cycles: 4178033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.1780333333333335

xsmm-reference avg execution time: 4.1780333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 114594025 cleaned_data/example_mats/tet/p3/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m6.txt...

Read matrix has 60 rows and 40 columns.

Input arrays: A (60, 40), B (40, 33600).

Output array: C (60, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 60, k= 40

lda= 33600, ldb= 40, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.168433 ms

xsmm-custom Time (libxsmm): 4.168433 ms

xsmm-custom No. of CPU cycles: 4168433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.1684333333333337

xsmm-custom avg execution time: 4.1684333333333337

Freeing A

Freeing B

Freeing C

{'a_cols': 40, 'a_nonzero': 1200, 'a_rows': 60, 'a_size': 2400, 'a_unique': 40, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0023030235180284, 'speedup_best_over_ref': 1.0023030235180284, 'xsmm_custom_avg': 4.168433333333334, 'xsmm_custom_best': 4.168433333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.1780333333333335, 'xsmm_reference_best': 4.1780333333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m132.txt...

Read matrix has 20 rows and 60 columns.

Input arrays: A (20, 60), B (60, 33600).

Output array: C (20, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.176033 ms

xsmm-reference Time (libxsmm): 2.176033 ms

xsmm-reference No. of CPU cycles: 2176033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.1760333333333337

xsmm-reference avg execution time: 2.1760333333333337

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 231192411 cleaned_data/example_mats/tet/p3/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m132.txt...

Read matrix has 20 rows and 60 columns.

Input arrays: A (20, 60), B (60, 33600).

Output array: C (20, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 60

lda= 33600, ldb= 60, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.188300 ms

xsmm-custom Time (libxsmm): 2.188300 ms

xsmm-custom No. of CPU cycles: 2188300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.1882999999999999

xsmm-custom avg execution time: 2.1882999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 60, 'a_nonzero': 1092, 'a_rows': 20, 'a_size': 1200, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 0.91, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.994394430989048, 'speedup_best_over_ref': 0.994394430989048, 'xsmm_custom_avg': 2.1883, 'xsmm_custom_best': 2.1883, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.1760333333333337, 'xsmm_reference_best': 2.1760333333333337, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m460.txt...

Read matrix has 60 rows and 20 columns.

Input arrays: A (60, 20), B (20, 33600).

Output array: C (60, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.080233 ms

xsmm-reference Time (libxsmm): 2.080233 ms

xsmm-reference No. of CPU cycles: 2080233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.0802333333333332

xsmm-reference avg execution time: 2.0802333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 245446371 cleaned_data/example_mats/tet/p3/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m460.txt...

Read matrix has 60 rows and 20 columns.

Input arrays: A (60, 20), B (20, 33600).

Output array: C (60, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 60, k= 20

lda= 33600, ldb= 20, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.088733 ms

xsmm-custom Time (libxsmm): 2.088733 ms

xsmm-custom No. of CPU cycles: 2088733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.0887333333333333

xsmm-custom avg execution time: 2.0887333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 1092, 'a_rows': 60, 'a_size': 1200, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 0.91, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9959305480195333, 'speedup_best_over_ref': 0.9959305480195333, 'xsmm_custom_avg': 2.0887333333333333, 'xsmm_custom_best': 2.0887333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.080233333333333, 'xsmm_reference_best': 2.080233333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m0.txt...

Read matrix has 60 rows and 35 columns.

Input arrays: A (60, 35), B (35, 33600).

Output array: C (60, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.630867 ms

xsmm-reference Time (libxsmm): 3.630867 ms

xsmm-reference No. of CPU cycles: 3630866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.6308666666666669

xsmm-reference avg execution time: 3.6308666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 614203730 cleaned_data/example_mats/tet/p4/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m0.txt...

Read matrix has 60 rows and 35 columns.

Input arrays: A (60, 35), B (35, 33600).

Output array: C (60, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 60, k= 35

lda= 33600, ldb= 35, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.628500 ms

xsmm-custom Time (libxsmm): 3.628500 ms

xsmm-custom No. of CPU cycles: 3628500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.6285000000000003

xsmm-custom avg execution time: 3.6285000000000003

Freeing A

Freeing B

Freeing C

{'a_cols': 35, 'a_nonzero': 2100, 'a_rows': 60, 'a_size': 2100, 'a_unique': 101, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0006522438105736, 'speedup_best_over_ref': 1.0006522438105736, 'xsmm_custom_avg': 3.6285000000000003, 'xsmm_custom_best': 3.6285000000000003, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.630866666666667, 'xsmm_reference_best': 3.630866666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m3.txt...

Read matrix has 35 rows and 60 columns.

Input arrays: A (35, 60), B (60, 33600).

Output array: C (35, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.729367 ms

xsmm-reference Time (libxsmm): 3.729333 ms

xsmm-reference No. of CPU cycles: 3729333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.7293666666666665

xsmm-reference avg execution time: 3.7293666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1303055907 cleaned_data/example_mats/tet/p4/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m3.txt...

Read matrix has 35 rows and 60 columns.

Input arrays: A (35, 60), B (60, 33600).

Output array: C (35, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 35, k= 60

lda= 33600, ldb= 60, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.763667 ms

xsmm-custom Time (libxsmm): 3.763667 ms

xsmm-custom No. of CPU cycles: 3763666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.7636666666666665

xsmm-custom avg execution time: 3.7636666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 60, 'a_nonzero': 2100, 'a_rows': 35, 'a_size': 2100, 'a_unique': 202, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9908865468071916, 'speedup_best_over_ref': 0.9908865468071916, 'xsmm_custom_avg': 3.7636666666666665, 'xsmm_custom_best': 3.7636666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.7293666666666665, 'xsmm_reference_best': 3.7293666666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m6.txt...

Read matrix has 105 rows and 60 columns.

Input arrays: A (105, 60), B (60, 33600).

Output array: C (105, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 12.303200 ms

xsmm-reference Time (libxsmm): 12.303200 ms

xsmm-reference No. of CPU cycles: 12303200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 12.3032

xsmm-reference avg execution time: 12.3032

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 352617817 cleaned_data/example_mats/tet/p4/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m6.txt...

Read matrix has 105 rows and 60 columns.

Input arrays: A (105, 60), B (60, 33600).

Output array: C (105, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 105, k= 60

lda= 33600, ldb= 60, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 12.258500 ms

xsmm-custom Time (libxsmm): 12.258500 ms

xsmm-custom No. of CPU cycles: 12258500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 12.2585

xsmm-custom avg execution time: 12.2585

Freeing A

Freeing B

Freeing C

{'a_cols': 60, 'a_nonzero': 3150, 'a_rows': 105, 'a_size': 6300, 'a_unique': 101, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0036464494024555, 'speedup_best_over_ref': 1.0036464494024555, 'xsmm_custom_avg': 12.2585, 'xsmm_custom_best': 12.2585, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 12.3032, 'xsmm_reference_best': 12.3032, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m132.txt...

Read matrix has 35 rows and 105 columns.

Input arrays: A (35, 105), B (105, 33600).

Output array: C (35, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.402300 ms

xsmm-reference Time (libxsmm): 6.402300 ms

xsmm-reference No. of CPU cycles: 6402300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.4022999999999985

xsmm-reference avg execution time: 6.4022999999999985

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1478550946 cleaned_data/example_mats/tet/p4/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m132.txt...

Read matrix has 35 rows and 105 columns.

Input arrays: A (35, 105), B (105, 33600).

Output array: C (35, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 35, k= 105

lda= 33600, ldb= 105, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.376200 ms

xsmm-custom Time (libxsmm): 6.376200 ms

xsmm-custom No. of CPU cycles: 6376200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.3761999999999999

xsmm-custom avg execution time: 6.3761999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 105, 'a_nonzero': 3432, 'a_rows': 35, 'a_size': 3675, 'a_unique': 304, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9338775510204081, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0040933471346567, 'speedup_best_over_ref': 1.0040933471346567, 'xsmm_custom_avg': 6.3762, 'xsmm_custom_best': 6.3762, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.4022999999999985, 'xsmm_reference_best': 6.4022999999999985, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m460.txt...

Read matrix has 105 rows and 35 columns.

Input arrays: A (105, 35), B (35, 33600).

Output array: C (105, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.427100 ms

xsmm-reference Time (libxsmm): 6.427067 ms

xsmm-reference No. of CPU cycles: 6427066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.4270999999999994

xsmm-reference avg execution time: 6.4270999999999994

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1956057135 cleaned_data/example_mats/tet/p4/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m460.txt...

Read matrix has 105 rows and 35 columns.

Input arrays: A (105, 35), B (35, 33600).

Output array: C (105, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 105, k= 35

lda= 33600, ldb= 35, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.396267 ms

xsmm-custom Time (libxsmm): 6.396267 ms

xsmm-custom No. of CPU cycles: 6396266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.3962666666666665

xsmm-custom avg execution time: 6.3962666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 35, 'a_nonzero': 3432, 'a_rows': 105, 'a_size': 3675, 'a_unique': 304, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9338775510204081, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0048205203035103, 'speedup_best_over_ref': 1.0048205203035103, 'xsmm_custom_avg': 6.3962666666666665, 'xsmm_custom_best': 6.3962666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.427099999999999, 'xsmm_reference_best': 6.427099999999999, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m0.txt...

Read matrix has 84 rows and 56 columns.

Input arrays: A (84, 56), B (56, 33600).

Output array: C (84, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.400067 ms

xsmm-reference Time (libxsmm): 8.400100 ms

xsmm-reference No. of CPU cycles: 8400100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.4000666666666675

xsmm-reference avg execution time: 8.4000666666666675

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1715885806 cleaned_data/example_mats/tet/p5/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m0.txt...

Read matrix has 84 rows and 56 columns.

Input arrays: A (84, 56), B (56, 33600).

Output array: C (84, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 84, k= 56

lda= 33600, ldb= 56, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.327467 ms

xsmm-custom Time (libxsmm): 8.327367 ms

xsmm-custom No. of CPU cycles: 8327366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.3274666666666644

xsmm-custom avg execution time: 8.3274666666666644

Freeing A

Freeing B

Freeing C

{'a_cols': 56, 'a_nonzero': 4704, 'a_rows': 84, 'a_size': 4704, 'a_unique': 214, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0087181375688488, 'speedup_best_over_ref': 1.0087181375688488, 'xsmm_custom_avg': 8.327466666666664, 'xsmm_custom_best': 8.327466666666664, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.400066666666667, 'xsmm_reference_best': 8.400066666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m3.txt...

Read matrix has 56 rows and 84 columns.

Input arrays: A (56, 84), B (84, 33600).

Output array: C (56, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.229300 ms

xsmm-reference Time (libxsmm): 8.229267 ms

xsmm-reference No. of CPU cycles: 8229266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.2293000000000003

xsmm-reference avg execution time: 8.2293000000000003

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 14787907 cleaned_data/example_mats/tet/p5/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m3.txt...

Read matrix has 56 rows and 84 columns.

Input arrays: A (56, 84), B (84, 33600).

Output array: C (56, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 84

lda= 33600, ldb= 84, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.256300 ms

xsmm-custom Time (libxsmm): 8.256300 ms

xsmm-custom No. of CPU cycles: 8256300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.2562999999999995

xsmm-custom avg execution time: 8.2562999999999995

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 4704, 'a_rows': 56, 'a_size': 4704, 'a_unique': 428, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.996729769993823, 'speedup_best_over_ref': 0.996729769993823, 'xsmm_custom_avg': 8.2563, 'xsmm_custom_best': 8.2563, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.2293, 'xsmm_reference_best': 8.2293, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m6.txt...

Read matrix has 168 rows and 84 columns.

Input arrays: A (168, 84), B (84, 33600).

Output array: C (168, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 24.633167 ms

xsmm-reference Time (libxsmm): 24.633133 ms

xsmm-reference No. of CPU cycles: 24633133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 24.633166666666668

xsmm-reference avg execution time: 24.633166666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 25513773 cleaned_data/example_mats/tet/p5/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m6.txt...

Read matrix has 168 rows and 84 columns.

Input arrays: A (168, 84), B (84, 33600).

Output array: C (168, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 168, k= 84

lda= 33600, ldb= 84, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 168

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 24.548200 ms

xsmm-custom Time (libxsmm): 24.548200 ms

xsmm-custom No. of CPU cycles: 24548200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 24.548200000000001

xsmm-custom avg execution time: 24.548200000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 7056, 'a_rows': 168, 'a_size': 14112, 'a_unique': 214, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0034612177946516, 'speedup_best_over_ref': 1.0034612177946516, 'xsmm_custom_avg': 24.5482, 'xsmm_custom_best': 24.5482, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 24.633166666666668, 'xsmm_reference_best': 24.633166666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m132.txt...

Read matrix has 56 rows and 168 columns.

Input arrays: A (56, 168), B (168, 33600).

Output array: C (56, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 17.545533 ms

xsmm-reference Time (libxsmm): 17.545500 ms

xsmm-reference No. of CPU cycles: 17545500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 17.545533333333331

xsmm-reference avg execution time: 17.545533333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1196582391 cleaned_data/example_mats/tet/p5/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m132.txt...

Read matrix has 56 rows and 168 columns.

Input arrays: A (56, 168), B (168, 33600).

Output array: C (56, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 168

lda= 33600, ldb= 168, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 17.509933 ms

xsmm-custom Time (libxsmm): 17.509933 ms

xsmm-custom No. of CPU cycles: 17509933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 17.509933333333333

xsmm-custom avg execution time: 17.509933333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 168, 'a_nonzero': 8976, 'a_rows': 56, 'a_size': 9408, 'a_unique': 784, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9540816326530612, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0020331316700235, 'speedup_best_over_ref': 1.0020331316700235, 'xsmm_custom_avg': 17.509933333333333, 'xsmm_custom_best': 17.509933333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 17.54553333333333, 'xsmm_reference_best': 17.54553333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m460.txt...

Read matrix has 168 rows and 56 columns.

Input arrays: A (168, 56), B (56, 33600).

Output array: C (168, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 17.662833 ms

xsmm-reference Time (libxsmm): 17.662833 ms

xsmm-reference No. of CPU cycles: 17662833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 17.662833333333332

xsmm-reference avg execution time: 17.662833333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1060526075 cleaned_data/example_mats/tet/p5/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m460.txt...

Read matrix has 168 rows and 56 columns.

Input arrays: A (168, 56), B (56, 33600).

Output array: C (168, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 168, k= 56

lda= 33600, ldb= 56, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 168

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 17.599600 ms

xsmm-custom Time (libxsmm): 17.599500 ms

xsmm-custom No. of CPU cycles: 17599500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 17.599600000000002

xsmm-custom avg execution time: 17.599600000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 56, 'a_nonzero': 8976, 'a_rows': 168, 'a_size': 9408, 'a_unique': 784, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9540816326530612, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.003592884686773, 'speedup_best_over_ref': 1.003592884686773, 'xsmm_custom_avg': 17.599600000000002, 'xsmm_custom_best': 17.599600000000002, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 17.66283333333333, 'xsmm_reference_best': 17.66283333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m0.txt...

Read matrix has 112 rows and 84 columns.

Input arrays: A (112, 84), B (84, 33600).

Output array: C (112, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 17.240533 ms

xsmm-reference Time (libxsmm): 17.240533 ms

xsmm-reference No. of CPU cycles: 17240533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 17.240533333333335

xsmm-reference avg execution time: 17.240533333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1797433025 cleaned_data/example_mats/tet/p6/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m0.txt...

Read matrix has 112 rows and 84 columns.

Input arrays: A (112, 84), B (84, 33600).

Output array: C (112, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 112, k= 84

lda= 33600, ldb= 84, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 112

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 17.291900 ms

xsmm-custom Time (libxsmm): 17.291867 ms

xsmm-custom No. of CPU cycles: 17291866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 17.291900000000002

xsmm-custom avg execution time: 17.291900000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 9408, 'a_rows': 112, 'a_size': 9408, 'a_unique': 425, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9970294376750579, 'speedup_best_over_ref': 0.9970294376750579, 'xsmm_custom_avg': 17.291900000000002, 'xsmm_custom_best': 17.291900000000002, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 17.240533333333335, 'xsmm_reference_best': 17.240533333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m3.txt...

Read matrix has 84 rows and 112 columns.

Input arrays: A (84, 112), B (112, 33600).

Output array: C (84, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 17.390433 ms

xsmm-reference Time (libxsmm): 17.390400 ms

xsmm-reference No. of CPU cycles: 17390400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 17.390433333333331

xsmm-reference avg execution time: 17.390433333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 472632300 cleaned_data/example_mats/tet/p6/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m3.txt...

Read matrix has 84 rows and 112 columns.

Input arrays: A (84, 112), B (112, 33600).

Output array: C (84, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 84, k= 112

lda= 33600, ldb= 112, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 17.385733 ms

xsmm-custom Time (libxsmm): 17.385700 ms

xsmm-custom No. of CPU cycles: 17385700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 17.385733333333334

xsmm-custom avg execution time: 17.385733333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 112, 'a_nonzero': 9408, 'a_rows': 84, 'a_size': 9408, 'a_unique': 850, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0002703365978234, 'speedup_best_over_ref': 1.0002703365978234, 'xsmm_custom_avg': 17.385733333333334, 'xsmm_custom_best': 17.385733333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 17.39043333333333, 'xsmm_reference_best': 17.39043333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m6.txt...

Read matrix has 252 rows and 112 columns.

Input arrays: A (252, 112), B (112, 33600).

Output array: C (252, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 45.500100 ms

xsmm-reference Time (libxsmm): 45.500067 ms

xsmm-reference No. of CPU cycles: 45500066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 45.500099999999996

xsmm-reference avg execution time: 45.500099999999996

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1413343703 cleaned_data/example_mats/tet/p6/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m6.txt...

Read matrix has 252 rows and 112 columns.

Input arrays: A (252, 112), B (112, 33600).

Output array: C (252, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 252, k= 112

lda= 33600, ldb= 112, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 45.511900 ms

xsmm-custom Time (libxsmm): 45.511900 ms

xsmm-custom No. of CPU cycles: 45511900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 45.511899999999997

xsmm-custom avg execution time: 45.511899999999997

Freeing A

Freeing B

Freeing C

{'a_cols': 112, 'a_nonzero': 14112, 'a_rows': 252, 'a_size': 28224, 'a_unique': 425, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9997407271504815, 'speedup_best_over_ref': 0.9997407271504815, 'xsmm_custom_avg': 45.5119, 'xsmm_custom_best': 45.5119, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 45.500099999999996, 'xsmm_reference_best': 45.500099999999996, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m132.txt...

Read matrix has 84 rows and 252 columns.

Input arrays: A (84, 252), B (252, 33600).

Output array: C (84, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 38.567800 ms

xsmm-reference Time (libxsmm): 38.567800 ms

xsmm-reference No. of CPU cycles: 38567800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 38.567800000000005

xsmm-reference avg execution time: 38.567800000000005

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1122853078 cleaned_data/example_mats/tet/p6/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m132.txt...

Read matrix has 84 rows and 252 columns.

Input arrays: A (84, 252), B (252, 33600).

Output array: C (84, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 84, k= 252

lda= 33600, ldb= 252, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 38.513467 ms

xsmm-custom Time (libxsmm): 38.513433 ms

xsmm-custom No. of CPU cycles: 38513433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 38.513466666666666

xsmm-custom avg execution time: 38.513466666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 252, 'a_nonzero': 20400, 'a_rows': 84, 'a_size': 21168, 'a_unique': 1760, 'alpha': 1.0, 'beta': 0.0, 'density': 0.963718820861678, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0014107619499328, 'speedup_best_over_ref': 1.0014107619499328, 'xsmm_custom_avg': 38.513466666666666, 'xsmm_custom_best': 38.513466666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 38.567800000000005, 'xsmm_reference_best': 38.567800000000005, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m460.txt...

Read matrix has 252 rows and 84 columns.

Input arrays: A (252, 84), B (84, 33600).

Output array: C (252, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 35.593233 ms

xsmm-reference Time (libxsmm): 35.593200 ms

xsmm-reference No. of CPU cycles: 35593200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 35.593233333333337

xsmm-reference avg execution time: 35.593233333333337

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 150071673 cleaned_data/example_mats/tet/p6/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m460.txt...

Read matrix has 252 rows and 84 columns.

Input arrays: A (252, 84), B (84, 33600).

Output array: C (252, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 252, k= 84

lda= 33600, ldb= 84, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 35.577767 ms

xsmm-custom Time (libxsmm): 35.577733 ms

xsmm-custom No. of CPU cycles: 35577733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 35.577766666666669

xsmm-custom avg execution time: 35.577766666666669

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 20400, 'a_rows': 252, 'a_size': 21168, 'a_unique': 1760, 'alpha': 1.0, 'beta': 0.0, 'density': 0.963718820861678, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0004347284305837, 'speedup_best_over_ref': 1.0004347284305837, 'xsmm_custom_avg': 35.57776666666667, 'xsmm_custom_best': 35.57776666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 35.59323333333334, 'xsmm_reference_best': 35.59323333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m0.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 33600).

Output array: C (6, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.065900 ms

xsmm-reference Time (libxsmm): 0.065900 ms

xsmm-reference No. of CPU cycles: 65900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.0659

xsmm-reference avg execution time: 0.0659

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1015738787 cleaned_data/example_mats/tri/p1/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m0.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 33600).

Output array: C (6, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 3

lda= 33600, ldb= 3, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.083467 ms

xsmm-custom Time (libxsmm): 0.083467 ms

xsmm-custom No. of CPU cycles: 83466

CPU clock speed (GHz): 0.999992

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.083466666666666661

xsmm-custom avg execution time: 0.083466666666666661

Freeing A

Freeing B

Freeing C

{'a_cols': 3, 'a_nonzero': 18, 'a_rows': 6, 'a_size': 18, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.7895367412140576, 'speedup_best_over_ref': 0.7895367412140576, 'xsmm_custom_avg': 0.08346666666666666, 'xsmm_custom_best': 0.08346666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.0659, 'xsmm_reference_best': 0.0659, 'xsmm_reference_cpu_freq': 0.999992, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m3.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 33600).

Output array: C (3, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.058333 ms

xsmm-reference Time (libxsmm): 0.058333 ms

xsmm-reference No. of CPU cycles: 58333

CPU clock speed (GHz): 0.999994

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.058333333333333334

xsmm-reference avg execution time: 0.058333333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 308151551 cleaned_data/example_mats/tri/p1/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m3.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 33600).

Output array: C (3, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 3, k= 6

lda= 33600, ldb= 6, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.076167 ms

xsmm-custom Time (libxsmm): 0.076167 ms

xsmm-custom No. of CPU cycles: 76166

CPU clock speed (GHz): 0.999991

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.076166666666666674

xsmm-custom avg execution time: 0.076166666666666674

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 18, 'a_rows': 3, 'a_size': 18, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.7658643326039387, 'speedup_best_over_ref': 0.7658643326039387, 'xsmm_custom_avg': 0.07616666666666667, 'xsmm_custom_best': 0.07616666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.058333333333333334, 'xsmm_reference_best': 0.058333333333333334, 'xsmm_reference_cpu_freq': 0.999991, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m6.txt...

Read matrix has 6 rows and 6 columns.

Input arrays: A (6, 6), B (6, 33600).

Output array: C (6, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.103600 ms

xsmm-reference Time (libxsmm): 0.103567 ms

xsmm-reference No. of CPU cycles: 103566

CPU clock speed (GHz): 0.999994

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.1036

xsmm-reference avg execution time: 0.1036

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1251203143 cleaned_data/example_mats/tri/p1/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m6.txt...

Read matrix has 6 rows and 6 columns.

Input arrays: A (6, 6), B (6, 33600).

Output array: C (6, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 6

lda= 33600, ldb= 6, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.122733 ms

xsmm-custom Time (libxsmm): 0.122733 ms

xsmm-custom No. of CPU cycles: 122733

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.12273333333333333

xsmm-custom avg execution time: 0.12273333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 24, 'a_rows': 6, 'a_size': 36, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.844106463878327, 'speedup_best_over_ref': 0.844106463878327, 'xsmm_custom_avg': 0.12273333333333333, 'xsmm_custom_best': 0.12273333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.1036, 'xsmm_reference_best': 0.1036, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m132.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 33600).

Output array: C (3, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.058400 ms

xsmm-reference Time (libxsmm): 0.058400 ms

xsmm-reference No. of CPU cycles: 58400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.058400000000000001

xsmm-reference avg execution time: 0.058400000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1902682104 cleaned_data/example_mats/tri/p1/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m132.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 33600).

Output array: C (3, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 3, k= 6

lda= 33600, ldb= 6, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.076100 ms

xsmm-custom Time (libxsmm): 0.076100 ms

xsmm-custom No. of CPU cycles: 76100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.076100000000000001

xsmm-custom avg execution time: 0.076100000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 12, 'a_rows': 3, 'a_size': 18, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.7674113009198423, 'speedup_best_over_ref': 0.7674113009198423, 'xsmm_custom_avg': 0.0761, 'xsmm_custom_best': 0.0761, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.0584, 'xsmm_reference_best': 0.0584, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m460.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 33600).

Output array: C (6, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.068900 ms

xsmm-reference Time (libxsmm): 0.068900 ms

xsmm-reference No. of CPU cycles: 68900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.068900000000000003

xsmm-reference avg execution time: 0.068900000000000003

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1129623426 cleaned_data/example_mats/tri/p1/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m460.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 33600).

Output array: C (6, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 3

lda= 33600, ldb= 3, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.089667 ms

xsmm-custom Time (libxsmm): 0.089667 ms

xsmm-custom No. of CPU cycles: 89666

CPU clock speed (GHz): 0.999993

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.089666666666666658

xsmm-custom avg execution time: 0.089666666666666658

Freeing A

Freeing B

Freeing C

{'a_cols': 3, 'a_nonzero': 12, 'a_rows': 6, 'a_size': 18, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.7684014869888477, 'speedup_best_over_ref': 0.7684014869888477, 'xsmm_custom_avg': 0.08966666666666666, 'xsmm_custom_best': 0.08966666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.0689, 'xsmm_reference_best': 0.0689, 'xsmm_reference_cpu_freq': 0.999993, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m0.txt...

Read matrix has 9 rows and 6 columns.

Input arrays: A (9, 6), B (6, 33600).

Output array: C (9, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.147733 ms

xsmm-reference Time (libxsmm): 0.147733 ms

xsmm-reference No. of CPU cycles: 147733

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.14773333333333336

xsmm-reference avg execution time: 0.14773333333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1337408695 cleaned_data/example_mats/tri/p2/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m0.txt...

Read matrix has 9 rows and 6 columns.

Input arrays: A (9, 6), B (6, 33600).

Output array: C (9, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 6

lda= 33600, ldb= 6, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.176167 ms

xsmm-custom Time (libxsmm): 0.176167 ms

xsmm-custom No. of CPU cycles: 176166

CPU clock speed (GHz): 0.999996

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.17616666666666667

xsmm-custom avg execution time: 0.17616666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 54, 'a_rows': 9, 'a_size': 54, 'a_unique': 10, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.8385998107852414, 'speedup_best_over_ref': 0.8385998107852414, 'xsmm_custom_avg': 0.17616666666666667, 'xsmm_custom_best': 0.17616666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.14773333333333336, 'xsmm_reference_best': 0.14773333333333336, 'xsmm_reference_cpu_freq': 0.999996, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m3.txt...

Read matrix has 6 rows and 9 columns.

Input arrays: A (6, 9), B (9, 33600).

Output array: C (6, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.123500 ms

xsmm-reference Time (libxsmm): 0.123500 ms

xsmm-reference No. of CPU cycles: 123500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.1235

xsmm-reference avg execution time: 0.1235

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1243450401 cleaned_data/example_mats/tri/p2/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m3.txt...

Read matrix has 6 rows and 9 columns.

Input arrays: A (6, 9), B (9, 33600).

Output array: C (6, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 9

lda= 33600, ldb= 9, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.143100 ms

xsmm-custom Time (libxsmm): 0.143100 ms

xsmm-custom No. of CPU cycles: 143100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.1431

xsmm-custom avg execution time: 0.1431

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 54, 'a_rows': 6, 'a_size': 54, 'a_unique': 20, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.8630328441649195, 'speedup_best_over_ref': 0.8630328441649195, 'xsmm_custom_avg': 0.1431, 'xsmm_custom_best': 0.1431, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.1235, 'xsmm_reference_best': 0.1235, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m6.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 33600).

Output array: C (12, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.212167 ms

xsmm-reference Time (libxsmm): 0.212133 ms

xsmm-reference No. of CPU cycles: 212133

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.21216666666666667

xsmm-reference avg execution time: 0.21216666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1589455227 cleaned_data/example_mats/tri/p2/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m6.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 33600).

Output array: C (12, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 9

lda= 33600, ldb= 9, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.236667 ms

xsmm-custom Time (libxsmm): 0.236667 ms

xsmm-custom No. of CPU cycles: 236666

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.23666666666666666

xsmm-custom avg execution time: 0.23666666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 72, 'a_rows': 12, 'a_size': 108, 'a_unique': 10, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.8964788732394366, 'speedup_best_over_ref': 0.8964788732394366, 'xsmm_custom_avg': 0.23666666666666666, 'xsmm_custom_best': 0.23666666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.21216666666666667, 'xsmm_reference_best': 0.21216666666666667, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m132.txt...

Read matrix has 6 rows and 12 columns.

Input arrays: A (6, 12), B (12, 33600).

Output array: C (6, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.152467 ms

xsmm-reference Time (libxsmm): 0.152467 ms

xsmm-reference No. of CPU cycles: 152466

CPU clock speed (GHz): 0.999996

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.15246666666666667

xsmm-reference avg execution time: 0.15246666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1473483912 cleaned_data/example_mats/tri/p2/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m132.txt...

Read matrix has 6 rows and 12 columns.

Input arrays: A (6, 12), B (12, 33600).

Output array: C (6, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 12

lda= 33600, ldb= 12, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.173100 ms

xsmm-custom Time (libxsmm): 0.173100 ms

xsmm-custom No. of CPU cycles: 173100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.17309999999999998

xsmm-custom avg execution time: 0.17309999999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 64, 'a_rows': 6, 'a_size': 72, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 0.8888888888888888, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.8808010783747353, 'speedup_best_over_ref': 0.8808010783747353, 'xsmm_custom_avg': 0.17309999999999998, 'xsmm_custom_best': 0.17309999999999998, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.15246666666666667, 'xsmm_reference_best': 0.15246666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m460.txt...

Read matrix has 12 rows and 6 columns.

Input arrays: A (12, 6), B (6, 33600).

Output array: C (12, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.176867 ms

xsmm-reference Time (libxsmm): 0.176867 ms

xsmm-reference No. of CPU cycles: 176866

CPU clock speed (GHz): 0.999996

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.17686666666666667

xsmm-reference avg execution time: 0.17686666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1915502985 cleaned_data/example_mats/tri/p2/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m460.txt...

Read matrix has 12 rows and 6 columns.

Input arrays: A (12, 6), B (6, 33600).

Output array: C (12, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 6

lda= 33600, ldb= 6, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.196633 ms

xsmm-custom Time (libxsmm): 0.196633 ms

xsmm-custom No. of CPU cycles: 196633

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.19663333333333333

xsmm-custom avg execution time: 0.19663333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 64, 'a_rows': 12, 'a_size': 72, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 0.8888888888888888, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.8994744872012206, 'speedup_best_over_ref': 0.8994744872012206, 'xsmm_custom_avg': 0.19663333333333333, 'xsmm_custom_best': 0.19663333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.17686666666666667, 'xsmm_reference_best': 0.17686666666666667, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m0.txt...

Read matrix has 12 rows and 10 columns.

Input arrays: A (12, 10), B (10, 33600).

Output array: C (12, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.239867 ms

xsmm-reference Time (libxsmm): 0.239867 ms

xsmm-reference No. of CPU cycles: 239866

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.23986666666666664

xsmm-reference avg execution time: 0.23986666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1172032783 cleaned_data/example_mats/tri/p3/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m0.txt...

Read matrix has 12 rows and 10 columns.

Input arrays: A (12, 10), B (10, 33600).

Output array: C (12, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 10

lda= 33600, ldb= 10, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.241000 ms

xsmm-custom Time (libxsmm): 0.241000 ms

xsmm-custom No. of CPU cycles: 241000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.24100000000000002

xsmm-custom avg execution time: 0.24100000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 120, 'a_rows': 12, 'a_size': 120, 'a_unique': 20, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9952973720608573, 'speedup_best_over_ref': 0.9952973720608573, 'xsmm_custom_avg': 0.24100000000000002, 'xsmm_custom_best': 0.24100000000000002, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.23986666666666664, 'xsmm_reference_best': 0.23986666666666664, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m3.txt...

Read matrix has 10 rows and 12 columns.

Input arrays: A (10, 12), B (12, 33600).

Output array: C (10, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.226000 ms

xsmm-reference Time (libxsmm): 0.226000 ms

xsmm-reference No. of CPU cycles: 226000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.22600000000000001

xsmm-reference avg execution time: 0.22600000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1011420771 cleaned_data/example_mats/tri/p3/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m3.txt...

Read matrix has 10 rows and 12 columns.

Input arrays: A (10, 12), B (12, 33600).

Output array: C (10, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 12

lda= 33600, ldb= 12, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.246100 ms

xsmm-custom Time (libxsmm): 0.246100 ms

xsmm-custom No. of CPU cycles: 246100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.24610000000000001

xsmm-custom avg execution time: 0.24610000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 120, 'a_rows': 10, 'a_size': 120, 'a_unique': 40, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9183258837870784, 'speedup_best_over_ref': 0.9183258837870784, 'xsmm_custom_avg': 0.2461, 'xsmm_custom_best': 0.2461, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.226, 'xsmm_reference_best': 0.226, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m6.txt...

Read matrix has 20 rows and 12 columns.

Input arrays: A (20, 12), B (12, 33600).

Output array: C (20, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.616600 ms

xsmm-reference Time (libxsmm): 1.616633 ms

xsmm-reference No. of CPU cycles: 1616633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.6165999999999998

xsmm-reference avg execution time: 1.6165999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 730062929 cleaned_data/example_mats/tri/p3/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m6.txt...

Read matrix has 20 rows and 12 columns.

Input arrays: A (20, 12), B (12, 33600).

Output array: C (20, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 12

lda= 33600, ldb= 12, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.751933 ms

xsmm-custom Time (libxsmm): 0.751933 ms

xsmm-custom No. of CPU cycles: 751933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.75193333333333334

xsmm-custom avg execution time: 0.75193333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 160, 'a_rows': 20, 'a_size': 240, 'a_unique': 20, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 2.149924638709105, 'speedup_best_over_ref': 2.149924638709105, 'xsmm_custom_avg': 0.7519333333333333, 'xsmm_custom_best': 0.7519333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.6165999999999998, 'xsmm_reference_best': 1.6165999999999998, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m132.txt...

Read matrix has 10 rows and 20 columns.

Input arrays: A (10, 20), B (20, 33600).

Output array: C (10, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.340567 ms

xsmm-reference Time (libxsmm): 0.340533 ms

xsmm-reference No. of CPU cycles: 340533

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.34056666666666668

xsmm-reference avg execution time: 0.34056666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 970566058 cleaned_data/example_mats/tri/p3/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m132.txt...

Read matrix has 10 rows and 20 columns.

Input arrays: A (10, 20), B (20, 33600).

Output array: C (10, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 20

lda= 33600, ldb= 20, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.354867 ms

xsmm-custom Time (libxsmm): 0.354867 ms

xsmm-custom No. of CPU cycles: 354866

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.35486666666666672

xsmm-custom avg execution time: 0.35486666666666672

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 192, 'a_rows': 10, 'a_size': 200, 'a_unique': 48, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9597031749013714, 'speedup_best_over_ref': 0.9597031749013714, 'xsmm_custom_avg': 0.3548666666666667, 'xsmm_custom_best': 0.3548666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.3405666666666667, 'xsmm_reference_best': 0.3405666666666667, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m460.txt...

Read matrix has 20 rows and 10 columns.

Input arrays: A (20, 10), B (10, 33600).

Output array: C (20, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.393667 ms

xsmm-reference Time (libxsmm): 0.393700 ms

xsmm-reference No. of CPU cycles: 393700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.39366666666666666

xsmm-reference avg execution time: 0.39366666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 18135051 cleaned_data/example_mats/tri/p3/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m460.txt...

Read matrix has 20 rows and 10 columns.

Input arrays: A (20, 10), B (10, 33600).

Output array: C (20, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 10

lda= 33600, ldb= 10, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.387533 ms

xsmm-custom Time (libxsmm): 0.387533 ms

xsmm-custom No. of CPU cycles: 387533

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.38753333333333334

xsmm-custom avg execution time: 0.38753333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 192, 'a_rows': 20, 'a_size': 200, 'a_unique': 48, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.015826595561672, 'speedup_best_over_ref': 1.015826595561672, 'xsmm_custom_avg': 0.38753333333333334, 'xsmm_custom_best': 0.38753333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.39366666666666666, 'xsmm_reference_best': 0.39366666666666666, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m0.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 33600).

Output array: C (15, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.418867 ms

xsmm-reference Time (libxsmm): 0.418867 ms

xsmm-reference No. of CPU cycles: 418866

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.41886666666666666

xsmm-reference avg execution time: 0.41886666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1931506721 cleaned_data/example_mats/tri/p4/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m0.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 33600).

Output array: C (15, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 15, k= 15

lda= 33600, ldb= 15, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.400200 ms

xsmm-custom Time (libxsmm): 0.400200 ms

xsmm-custom No. of CPU cycles: 400200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.4002

xsmm-custom avg execution time: 0.4002

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 225, 'a_rows': 15, 'a_size': 225, 'a_unique': 39, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0466433449941697, 'speedup_best_over_ref': 1.0466433449941697, 'xsmm_custom_avg': 0.4002, 'xsmm_custom_best': 0.4002, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.41886666666666666, 'xsmm_reference_best': 0.41886666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m3.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 33600).

Output array: C (15, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.355100 ms

xsmm-reference Time (libxsmm): 0.355100 ms

xsmm-reference No. of CPU cycles: 355100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.35510000000000003

xsmm-reference avg execution time: 0.35510000000000003

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 520660763 cleaned_data/example_mats/tri/p4/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m3.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 33600).

Output array: C (15, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 15, k= 15

lda= 33600, ldb= 15, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.377933 ms

xsmm-custom Time (libxsmm): 0.377933 ms

xsmm-custom No. of CPU cycles: 377933

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.37793333333333329

xsmm-custom avg execution time: 0.37793333333333329

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 225, 'a_rows': 15, 'a_size': 225, 'a_unique': 78, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9395837008290706, 'speedup_best_over_ref': 0.9395837008290706, 'xsmm_custom_avg': 0.3779333333333333, 'xsmm_custom_best': 0.3779333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.3551, 'xsmm_reference_best': 0.3551, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m6.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 33600).

Output array: C (30, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.726233 ms

xsmm-reference Time (libxsmm): 0.726233 ms

xsmm-reference No. of CPU cycles: 726233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.72623333333333329

xsmm-reference avg execution time: 0.72623333333333329

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1899131224 cleaned_data/example_mats/tri/p4/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m6.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 33600).

Output array: C (30, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 15

lda= 33600, ldb= 15, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.719100 ms

xsmm-custom Time (libxsmm): 0.719100 ms

xsmm-custom No. of CPU cycles: 719100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.71909999999999996

xsmm-custom avg execution time: 0.71909999999999996

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 300, 'a_rows': 30, 'a_size': 450, 'a_unique': 39, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0099198071663653, 'speedup_best_over_ref': 1.0099198071663653, 'xsmm_custom_avg': 0.7191, 'xsmm_custom_best': 0.7191, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.7262333333333333, 'xsmm_reference_best': 0.7262333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m132.txt...

Read matrix has 15 rows and 30 columns.

Input arrays: A (15, 30), B (30, 33600).

Output array: C (15, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.699567 ms

xsmm-reference Time (libxsmm): 0.699567 ms

xsmm-reference No. of CPU cycles: 699566

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.69956666666666656

xsmm-reference avg execution time: 0.69956666666666656

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1439504752 cleaned_data/example_mats/tri/p4/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m132.txt...

Read matrix has 15 rows and 30 columns.

Input arrays: A (15, 30), B (30, 33600).

Output array: C (15, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 15, k= 30

lda= 33600, ldb= 30, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.742700 ms

xsmm-custom Time (libxsmm): 0.742700 ms

xsmm-custom No. of CPU cycles: 742700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.74269999999999992

xsmm-custom avg execution time: 0.74269999999999992

Freeing A

Freeing B

Freeing C

{'a_cols': 30, 'a_nonzero': 432, 'a_rows': 15, 'a_size': 450, 'a_unique': 108, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.941923612046138, 'speedup_best_over_ref': 0.941923612046138, 'xsmm_custom_avg': 0.7426999999999999, 'xsmm_custom_best': 0.7426999999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6995666666666666, 'xsmm_reference_best': 0.6995666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m460.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 33600).

Output array: C (30, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.737367 ms

xsmm-reference Time (libxsmm): 0.737367 ms

xsmm-reference No. of CPU cycles: 737366

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.73736666666666661

xsmm-reference avg execution time: 0.73736666666666661

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 294688282 cleaned_data/example_mats/tri/p4/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m460.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 33600).

Output array: C (30, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 15

lda= 33600, ldb= 15, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.720300 ms

xsmm-custom Time (libxsmm): 0.720300 ms

xsmm-custom No. of CPU cycles: 720300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.72030000000000005

xsmm-custom avg execution time: 0.72030000000000005

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 432, 'a_rows': 30, 'a_size': 450, 'a_unique': 108, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.023693831274006, 'speedup_best_over_ref': 1.023693831274006, 'xsmm_custom_avg': 0.7203, 'xsmm_custom_best': 0.7203, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.7373666666666666, 'xsmm_reference_best': 0.7373666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m0.txt...

Read matrix has 18 rows and 21 columns.

Input arrays: A (18, 21), B (21, 33600).

Output array: C (18, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.585467 ms

xsmm-reference Time (libxsmm): 0.585433 ms

xsmm-reference No. of CPU cycles: 585433

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.58546666666666669

xsmm-reference avg execution time: 0.58546666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1669379005 cleaned_data/example_mats/tri/p5/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m0.txt...

Read matrix has 18 rows and 21 columns.

Input arrays: A (18, 21), B (21, 33600).

Output array: C (18, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 21

lda= 33600, ldb= 21, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.610133 ms

xsmm-custom Time (libxsmm): 0.610133 ms

xsmm-custom No. of CPU cycles: 610133

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.61013333333333331

xsmm-custom avg execution time: 0.61013333333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 378, 'a_rows': 18, 'a_size': 378, 'a_unique': 63, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9595716783216784, 'speedup_best_over_ref': 0.9595716783216784, 'xsmm_custom_avg': 0.6101333333333333, 'xsmm_custom_best': 0.6101333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5854666666666667, 'xsmm_reference_best': 0.5854666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m3.txt...

Read matrix has 21 rows and 18 columns.

Input arrays: A (21, 18), B (18, 33600).

Output array: C (21, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.626400 ms

xsmm-reference Time (libxsmm): 0.626400 ms

xsmm-reference No. of CPU cycles: 626400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.62640000000000007

xsmm-reference avg execution time: 0.62640000000000007

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 960492183 cleaned_data/example_mats/tri/p5/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m3.txt...

Read matrix has 21 rows and 18 columns.

Input arrays: A (21, 18), B (18, 33600).

Output array: C (21, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 21, k= 18

lda= 33600, ldb= 18, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.602533 ms

xsmm-custom Time (libxsmm): 0.602533 ms

xsmm-custom No. of CPU cycles: 602533

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.60253333333333337

xsmm-custom avg execution time: 0.60253333333333337

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 378, 'a_rows': 21, 'a_size': 378, 'a_unique': 126, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0396105333038284, 'speedup_best_over_ref': 1.0396105333038284, 'xsmm_custom_avg': 0.6025333333333334, 'xsmm_custom_best': 0.6025333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6264000000000001, 'xsmm_reference_best': 0.6264000000000001, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m6.txt...

Read matrix has 42 rows and 18 columns.

Input arrays: A (42, 18), B (18, 33600).

Output array: C (42, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.200200 ms

xsmm-reference Time (libxsmm): 1.200200 ms

xsmm-reference No. of CPU cycles: 1200200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.2001999999999999

xsmm-reference avg execution time: 1.2001999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 43351686 cleaned_data/example_mats/tri/p5/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m6.txt...

Read matrix has 42 rows and 18 columns.

Input arrays: A (42, 18), B (18, 33600).

Output array: C (42, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 42, k= 18

lda= 33600, ldb= 18, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.181700 ms

xsmm-custom Time (libxsmm): 1.181700 ms

xsmm-custom No. of CPU cycles: 1181700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.1817

xsmm-custom avg execution time: 1.1817

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 504, 'a_rows': 42, 'a_size': 756, 'a_unique': 63, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0156554116950156, 'speedup_best_over_ref': 1.0156554116950156, 'xsmm_custom_avg': 1.1817, 'xsmm_custom_best': 1.1817, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.2002, 'xsmm_reference_best': 1.2002, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m132.txt...

Read matrix has 21 rows and 42 columns.

Input arrays: A (21, 42), B (42, 33600).

Output array: C (21, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.385700 ms

xsmm-reference Time (libxsmm): 1.385700 ms

xsmm-reference No. of CPU cycles: 1385700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.3856999999999999

xsmm-reference avg execution time: 1.3856999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1303324940 cleaned_data/example_mats/tri/p5/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m132.txt...

Read matrix has 21 rows and 42 columns.

Input arrays: A (21, 42), B (42, 33600).

Output array: C (21, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 21, k= 42

lda= 33600, ldb= 42, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.384867 ms

xsmm-custom Time (libxsmm): 1.384867 ms

xsmm-custom No. of CPU cycles: 1384866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.3848666666666667

xsmm-custom avg execution time: 1.3848666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 42, 'a_nonzero': 864, 'a_rows': 21, 'a_size': 882, 'a_unique': 216, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0006017426467049, 'speedup_best_over_ref': 1.0006017426467049, 'xsmm_custom_avg': 1.3848666666666667, 'xsmm_custom_best': 1.3848666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.3857, 'xsmm_reference_best': 1.3857, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m460.txt...

Read matrix has 42 rows and 21 columns.

Input arrays: A (42, 21), B (21, 33600).

Output array: C (42, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.336467 ms

xsmm-reference Time (libxsmm): 1.336467 ms

xsmm-reference No. of CPU cycles: 1336466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.3364666666666667

xsmm-reference avg execution time: 1.3364666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 810290088 cleaned_data/example_mats/tri/p5/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m460.txt...

Read matrix has 42 rows and 21 columns.

Input arrays: A (42, 21), B (21, 33600).

Output array: C (42, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 42, k= 21

lda= 33600, ldb= 21, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.361933 ms

xsmm-custom Time (libxsmm): 1.361933 ms

xsmm-custom No. of CPU cycles: 1361933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.3619333333333332

xsmm-custom avg execution time: 1.3619333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 864, 'a_rows': 42, 'a_size': 882, 'a_unique': 216, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9813010915854913, 'speedup_best_over_ref': 0.9813010915854913, 'xsmm_custom_avg': 1.3619333333333332, 'xsmm_custom_best': 1.3619333333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.3364666666666667, 'xsmm_reference_best': 1.3364666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m0.txt...

Read matrix has 21 rows and 28 columns.

Input arrays: A (21, 28), B (28, 33600).

Output array: C (21, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.891367 ms

xsmm-reference Time (libxsmm): 0.891367 ms

xsmm-reference No. of CPU cycles: 891366

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.89136666666666664

xsmm-reference avg execution time: 0.89136666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 769652580 cleaned_data/example_mats/tri/p6/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m0.txt...

Read matrix has 21 rows and 28 columns.

Input arrays: A (21, 28), B (28, 33600).

Output array: C (21, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 21, k= 28

lda= 33600, ldb= 28, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.916700 ms

xsmm-custom Time (libxsmm): 0.916667 ms

xsmm-custom No. of CPU cycles: 916666

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.91670000000000007

xsmm-custom avg execution time: 0.91670000000000007

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 588, 'a_rows': 21, 'a_size': 588, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m0.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9723646412857713, 'speedup_best_over_ref': 0.9723646412857713, 'xsmm_custom_avg': 0.9167000000000001, 'xsmm_custom_best': 0.9167000000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.8913666666666666, 'xsmm_reference_best': 0.8913666666666666, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m3.txt...

Read matrix has 28 rows and 21 columns.

Input arrays: A (28, 21), B (21, 33600).

Output array: C (28, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.953133 ms

xsmm-reference Time (libxsmm): 0.953133 ms

xsmm-reference No. of CPU cycles: 953133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.95313333333333339

xsmm-reference avg execution time: 0.95313333333333339

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1648923236 cleaned_data/example_mats/tri/p6/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m3.txt...

Read matrix has 28 rows and 21 columns.

Input arrays: A (28, 21), B (21, 33600).

Output array: C (28, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 21

lda= 33600, ldb= 21, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.929133 ms

xsmm-custom Time (libxsmm): 0.929133 ms

xsmm-custom No. of CPU cycles: 929133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.92913333333333326

xsmm-custom avg execution time: 0.92913333333333326

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 588, 'a_rows': 28, 'a_size': 588, 'a_unique': 200, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m3.txt', 'size_n': 33600, 'speedup_avg_over_ref': 1.0258305230680922, 'speedup_best_over_ref': 1.0258305230680922, 'xsmm_custom_avg': 0.9291333333333333, 'xsmm_custom_best': 0.9291333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.9531333333333334, 'xsmm_reference_best': 0.9531333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m6.txt...

Read matrix has 56 rows and 21 columns.

Input arrays: A (56, 21), B (21, 33600).

Output array: C (56, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.936100 ms

xsmm-reference Time (libxsmm): 1.936100 ms

xsmm-reference No. of CPU cycles: 1936100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.9360999999999999

xsmm-reference avg execution time: 1.9360999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 1151922245 cleaned_data/example_mats/tri/p6/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m6.txt...

Read matrix has 56 rows and 21 columns.

Input arrays: A (56, 21), B (21, 33600).

Output array: C (56, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 21

lda= 33600, ldb= 21, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.950533 ms

xsmm-custom Time (libxsmm): 1.950533 ms

xsmm-custom No. of CPU cycles: 1950533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.9505333333333332

xsmm-custom avg execution time: 1.9505333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 784, 'a_rows': 56, 'a_size': 1176, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m6.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9926003144439128, 'speedup_best_over_ref': 0.9926003144439128, 'xsmm_custom_avg': 1.9505333333333332, 'xsmm_custom_best': 1.9505333333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.9361, 'xsmm_reference_best': 1.9361, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m132.txt...

Read matrix has 28 rows and 56 columns.

Input arrays: A (28, 56), B (56, 33600).

Output array: C (28, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.753200 ms

xsmm-reference Time (libxsmm): 2.753200 ms

xsmm-reference No. of CPU cycles: 2753200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.7532000000000001

xsmm-reference avg execution time: 2.7532000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 908125549 cleaned_data/example_mats/tri/p6/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m132.txt...

Read matrix has 28 rows and 56 columns.

Input arrays: A (28, 56), B (56, 33600).

Output array: C (28, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 56

lda= 33600, ldb= 56, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.754200 ms

xsmm-custom Time (libxsmm): 2.754167 ms

xsmm-custom No. of CPU cycles: 2754166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.7542

xsmm-custom avg execution time: 2.7542

Freeing A

Freeing B

Freeing C

{'a_cols': 56, 'a_nonzero': 1536, 'a_rows': 28, 'a_size': 1568, 'a_unique': 384, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m132.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.9996369181613536, 'speedup_best_over_ref': 0.9996369181613536, 'xsmm_custom_avg': 2.7542, 'xsmm_custom_best': 2.7542, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.7532, 'xsmm_reference_best': 2.7532, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m460.txt...

Read matrix has 56 rows and 28 columns.

Input arrays: A (56, 28), B (28, 33600).

Output array: C (56, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.732800 ms

xsmm-reference Time (libxsmm): 2.732833 ms

xsmm-reference No. of CPU cycles: 2732833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.7327999999999997

xsmm-reference avg execution time: 2.7327999999999997

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 33600 841695804 cleaned_data/example_mats/tri/p6/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m460.txt...

Read matrix has 56 rows and 28 columns.

Input arrays: A (56, 28), B (28, 33600).

Output array: C (56, 33600).

Array B width (N): 33600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 28

lda= 33600, ldb= 28, ldc= 33600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.759467 ms

xsmm-custom Time (libxsmm): 2.759467 ms

xsmm-custom No. of CPU cycles: 2759466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.759466666666667

xsmm-custom avg execution time: 2.759466666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 1536, 'a_rows': 56, 'a_size': 1568, 'a_unique': 384, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m460.txt', 'size_n': 33600, 'speedup_avg_over_ref': 0.99033629686896, 'speedup_best_over_ref': 0.99033629686896, 'xsmm_custom_avg': 2.759466666666667, 'xsmm_custom_best': 2.759466666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.7327999999999997, 'xsmm_reference_best': 2.7327999999999997, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
Average speedup (best) of custom over reference 0.9873756825044676
Average speedup (iqr avg) of custom over reference 0.9873756825044676
