run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m0.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 57600).

Output array: C (24, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.599167 ms

xsmm-reference Time (libxsmm): 0.599167 ms

xsmm-reference No. of CPU cycles: 599166

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.59916666666666674

xsmm-reference avg execution time: 0.59916666666666674

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 745901328 cleaned_data/example_mats/hex/p1/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m0.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 57600).

Output array: C (24, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 8

lda= 57600, ldb= 8, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.616133 ms

xsmm-custom Time (libxsmm): 0.616133 ms

xsmm-custom No. of CPU cycles: 616133

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.61613333333333342

xsmm-custom avg execution time: 0.61613333333333342

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 48, 'a_rows': 24, 'a_size': 192, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9724626704176584, 'speedup_best_over_ref': 0.9724626704176584, 'xsmm_custom_avg': 0.6161333333333334, 'xsmm_custom_best': 0.6161333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5991666666666667, 'xsmm_reference_best': 0.5991666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m3.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 57600).

Output array: C (8, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.595367 ms

xsmm-reference Time (libxsmm): 0.595367 ms

xsmm-reference No. of CPU cycles: 595366

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.59536666666666671

xsmm-reference avg execution time: 0.59536666666666671

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1534637762 cleaned_data/example_mats/hex/p1/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m3.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 57600).

Output array: C (8, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 24

lda= 57600, ldb= 24, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.625467 ms

xsmm-custom Time (libxsmm): 0.625467 ms

xsmm-custom No. of CPU cycles: 625466

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.62546666666666662

xsmm-custom avg execution time: 0.62546666666666662

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 48, 'a_rows': 8, 'a_size': 192, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9518759326369646, 'speedup_best_over_ref': 0.9518759326369646, 'xsmm_custom_avg': 0.6254666666666666, 'xsmm_custom_best': 0.6254666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5953666666666667, 'xsmm_reference_best': 0.5953666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m6.txt...

Read matrix has 24 rows and 24 columns.

Input arrays: A (24, 24), B (24, 57600).

Output array: C (24, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.844267 ms

xsmm-reference Time (libxsmm): 1.844267 ms

xsmm-reference No. of CPU cycles: 1844266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.8442666666666658

xsmm-reference avg execution time: 1.8442666666666658

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 767423522 cleaned_data/example_mats/hex/p1/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m6.txt...

Read matrix has 24 rows and 24 columns.

Input arrays: A (24, 24), B (24, 57600).

Output array: C (24, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 24

lda= 57600, ldb= 24, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.006167 ms

xsmm-custom Time (libxsmm): 2.006167 ms

xsmm-custom No. of CPU cycles: 2006166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.0061666666666667

xsmm-custom avg execution time: 2.0061666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 48, 'a_rows': 24, 'a_size': 576, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.08333333333333333, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9192988286117799, 'speedup_best_over_ref': 0.9192988286117799, 'xsmm_custom_avg': 2.0061666666666667, 'xsmm_custom_best': 2.0061666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.8442666666666658, 'xsmm_reference_best': 1.8442666666666658, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m132.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 57600).

Output array: C (8, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.603467 ms

xsmm-reference Time (libxsmm): 0.603467 ms

xsmm-reference No. of CPU cycles: 603466

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.6034666666666666

xsmm-reference avg execution time: 0.6034666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1111080363 cleaned_data/example_mats/hex/p1/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m132.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 57600).

Output array: C (8, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 24

lda= 57600, ldb= 24, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.627067 ms

xsmm-custom Time (libxsmm): 0.627067 ms

xsmm-custom No. of CPU cycles: 627066

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.62706666666666666

xsmm-custom avg execution time: 0.62706666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 48, 'a_rows': 8, 'a_size': 192, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9623644482245374, 'speedup_best_over_ref': 0.9623644482245374, 'xsmm_custom_avg': 0.6270666666666667, 'xsmm_custom_best': 0.6270666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6034666666666666, 'xsmm_reference_best': 0.6034666666666666, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m460.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 57600).

Output array: C (24, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.620800 ms

xsmm-reference Time (libxsmm): 0.620800 ms

xsmm-reference No. of CPU cycles: 620800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.62079999999999991

xsmm-reference avg execution time: 0.62079999999999991

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 325820264 cleaned_data/example_mats/hex/p1/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m460.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 57600).

Output array: C (24, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 8

lda= 57600, ldb= 8, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.621067 ms

xsmm-custom Time (libxsmm): 0.621067 ms

xsmm-custom No. of CPU cycles: 621066

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.62106666666666677

xsmm-custom avg execution time: 0.62106666666666677

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 48, 'a_rows': 24, 'a_size': 192, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9995706311721766, 'speedup_best_over_ref': 0.9995706311721766, 'xsmm_custom_avg': 0.6210666666666668, 'xsmm_custom_best': 0.6210666666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6207999999999999, 'xsmm_reference_best': 0.6207999999999999, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 57600).

Output array: C (54, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.705433 ms

xsmm-reference Time (libxsmm): 4.705433 ms

xsmm-reference No. of CPU cycles: 4705433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.7054333333333336

xsmm-reference avg execution time: 4.7054333333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 2035214576 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 57600).

Output array: C (54, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 54, k= 27

lda= 57600, ldb= 27, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.763967 ms

xsmm-custom Time (libxsmm): 4.763967 ms

xsmm-custom No. of CPU cycles: 4763966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.7639666666666667

xsmm-custom avg execution time: 4.7639666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 54, 'a_rows': 54, 'a_size': 1458, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.037037037037037035, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9877133201323828, 'speedup_best_over_ref': 0.9877133201323828, 'xsmm_custom_avg': 4.763966666666667, 'xsmm_custom_best': 4.763966666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.705433333333334, 'xsmm_reference_best': 4.705433333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 57600).

Output array: C (27, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.693133 ms

xsmm-reference Time (libxsmm): 4.693100 ms

xsmm-reference No. of CPU cycles: 4693100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.6931333333333338

xsmm-reference avg execution time: 4.6931333333333338

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1383952204 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 57600).

Output array: C (27, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 54

lda= 57600, ldb= 54, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.727800 ms

xsmm-custom Time (libxsmm): 4.727800 ms

xsmm-custom No. of CPU cycles: 4727800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.7278000000000002

xsmm-custom avg execution time: 4.7278000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 27, 'a_size': 1458, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9926674845241621, 'speedup_best_over_ref': 0.9926674845241621, 'xsmm_custom_avg': 4.7278, 'xsmm_custom_best': 4.7278, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.693133333333334, 'xsmm_reference_best': 4.693133333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 57600).

Output array: C (81, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 13.175333 ms

xsmm-reference Time (libxsmm): 13.175333 ms

xsmm-reference No. of CPU cycles: 13175333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 13.175333333333333

xsmm-reference avg execution time: 13.175333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1396002836 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 57600).

Output array: C (81, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 54

lda= 57600, ldb= 54, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 13.093033 ms

xsmm-custom Time (libxsmm): 13.093033 ms

xsmm-custom No. of CPU cycles: 13093033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 13.093033333333333

xsmm-custom avg execution time: 13.093033333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 81, 'a_size': 4374, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.037037037037037035, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0062857855704432, 'speedup_best_over_ref': 1.0062857855704432, 'xsmm_custom_avg': 13.093033333333333, 'xsmm_custom_best': 13.093033333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 13.175333333333333, 'xsmm_reference_best': 13.175333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 57600).

Output array: C (27, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.364667 ms

xsmm-reference Time (libxsmm): 6.364633 ms

xsmm-reference No. of CPU cycles: 6364633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.3646666666666665

xsmm-reference avg execution time: 6.3646666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1457513829 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 57600).

Output array: C (27, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 81

lda= 57600, ldb= 81, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.623767 ms

xsmm-custom Time (libxsmm): 6.623733 ms

xsmm-custom No. of CPU cycles: 6623733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.6237666666666666

xsmm-custom avg execution time: 6.6237666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 81, 'a_nonzero': 216, 'a_rows': 27, 'a_size': 2187, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9608832839321031, 'speedup_best_over_ref': 0.9608832839321031, 'xsmm_custom_avg': 6.623766666666667, 'xsmm_custom_best': 6.623766666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.3646666666666665, 'xsmm_reference_best': 6.3646666666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 57600).

Output array: C (81, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.989967 ms

xsmm-reference Time (libxsmm): 6.989967 ms

xsmm-reference No. of CPU cycles: 6989966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.9899666666666667

xsmm-reference avg execution time: 6.9899666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 2117651066 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 57600).

Output array: C (81, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 27

lda= 57600, ldb= 27, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.968500 ms

xsmm-custom Time (libxsmm): 6.968367 ms

xsmm-custom No. of CPU cycles: 6968366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.9685000000000006

xsmm-custom avg execution time: 6.9685000000000006

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 216, 'a_rows': 81, 'a_size': 2187, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0030805290473799, 'speedup_best_over_ref': 1.0030805290473799, 'xsmm_custom_avg': 6.968500000000001, 'xsmm_custom_best': 6.968500000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.989966666666667, 'xsmm_reference_best': 6.989966666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 57600).

Output array: C (54, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.691633 ms

xsmm-reference Time (libxsmm): 4.691633 ms

xsmm-reference No. of CPU cycles: 4691633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.6916333333333338

xsmm-reference avg execution time: 4.6916333333333338

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1222152593 cleaned_data/example_mats/hex/p2/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 57600).

Output array: C (54, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 54, k= 27

lda= 57600, ldb= 27, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.763033 ms

xsmm-custom Time (libxsmm): 4.763033 ms

xsmm-custom No. of CPU cycles: 4763033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.7630333333333335

xsmm-custom avg execution time: 4.7630333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 162, 'a_rows': 54, 'a_size': 1458, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9850095527360017, 'speedup_best_over_ref': 0.9850095527360017, 'xsmm_custom_avg': 4.7630333333333335, 'xsmm_custom_best': 4.7630333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.691633333333334, 'xsmm_reference_best': 4.691633333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 57600).

Output array: C (27, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.734600 ms

xsmm-reference Time (libxsmm): 4.734533 ms

xsmm-reference No. of CPU cycles: 4734533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.7346000000000004

xsmm-reference avg execution time: 4.7346000000000004

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 195715265 cleaned_data/example_mats/hex/p2/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 57600).

Output array: C (27, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 54

lda= 57600, ldb= 54, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.748533 ms

xsmm-custom Time (libxsmm): 4.748533 ms

xsmm-custom No. of CPU cycles: 4748533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.7485333333333335

xsmm-custom avg execution time: 4.7485333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 27, 'a_size': 1458, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9970657606559219, 'speedup_best_over_ref': 0.9970657606559219, 'xsmm_custom_avg': 4.7485333333333335, 'xsmm_custom_best': 4.7485333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.7346, 'xsmm_reference_best': 4.7346, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 57600).

Output array: C (81, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 13.040667 ms

xsmm-reference Time (libxsmm): 13.040667 ms

xsmm-reference No. of CPU cycles: 13040666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 13.040666666666668

xsmm-reference avg execution time: 13.040666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1915418288 cleaned_data/example_mats/hex/p2/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 57600).

Output array: C (81, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 54

lda= 57600, ldb= 54, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 13.245833 ms

xsmm-custom Time (libxsmm): 13.245833 ms

xsmm-custom No. of CPU cycles: 13245833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 13.245833333333334

xsmm-custom avg execution time: 13.245833333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 81, 'a_size': 4374, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.037037037037037035, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9845108524693301, 'speedup_best_over_ref': 0.9845108524693301, 'xsmm_custom_avg': 13.245833333333334, 'xsmm_custom_best': 13.245833333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 13.040666666666668, 'xsmm_reference_best': 13.040666666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 57600).

Output array: C (27, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.536767 ms

xsmm-reference Time (libxsmm): 6.536767 ms

xsmm-reference No. of CPU cycles: 6536766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.5367666666666668

xsmm-reference avg execution time: 6.5367666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 2131452694 cleaned_data/example_mats/hex/p2/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 57600).

Output array: C (27, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 81

lda= 57600, ldb= 81, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.361200 ms

xsmm-custom Time (libxsmm): 6.361167 ms

xsmm-custom No. of CPU cycles: 6361166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.3612000000000002

xsmm-custom avg execution time: 6.3612000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 81, 'a_nonzero': 216, 'a_rows': 27, 'a_size': 2187, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0275996143285333, 'speedup_best_over_ref': 1.0275996143285333, 'xsmm_custom_avg': 6.3612, 'xsmm_custom_best': 6.3612, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.536766666666667, 'xsmm_reference_best': 6.536766666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 57600).

Output array: C (81, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 7.315067 ms

xsmm-reference Time (libxsmm): 7.315067 ms

xsmm-reference No. of CPU cycles: 7315066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 7.3150666666666666

xsmm-reference avg execution time: 7.3150666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 833530257 cleaned_data/example_mats/hex/p2/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 57600).

Output array: C (81, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 27

lda= 57600, ldb= 27, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.998000 ms

xsmm-custom Time (libxsmm): 6.997867 ms

xsmm-custom No. of CPU cycles: 6997866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.9980000000000002

xsmm-custom avg execution time: 6.9980000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 216, 'a_rows': 81, 'a_size': 2187, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0453081832904638, 'speedup_best_over_ref': 1.0453081832904638, 'xsmm_custom_avg': 6.998, 'xsmm_custom_best': 6.998, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 7.315066666666667, 'xsmm_reference_best': 7.315066666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 57600).

Output array: C (96, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 18.510833 ms

xsmm-reference Time (libxsmm): 18.510800 ms

xsmm-reference No. of CPU cycles: 18510800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 18.510833333333334

xsmm-reference avg execution time: 18.510833333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1885099270 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 57600).

Output array: C (96, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 96, k= 64

lda= 57600, ldb= 64, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 96

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 18.529300 ms

xsmm-custom Time (libxsmm): 18.529267 ms

xsmm-custom No. of CPU cycles: 18529266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 18.529299999999999

xsmm-custom avg execution time: 18.529299999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 96, 'a_rows': 96, 'a_size': 6144, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.015625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.999003380232029, 'speedup_best_over_ref': 0.999003380232029, 'xsmm_custom_avg': 18.5293, 'xsmm_custom_best': 18.5293, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 18.510833333333334, 'xsmm_reference_best': 18.510833333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 57600).

Output array: C (64, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 17.571067 ms

xsmm-reference Time (libxsmm): 17.571067 ms

xsmm-reference No. of CPU cycles: 17571066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 17.57106666666667

xsmm-reference avg execution time: 17.57106666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1223185315 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 57600).

Output array: C (64, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 96

lda= 57600, ldb= 96, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 17.321300 ms

xsmm-custom Time (libxsmm): 17.321300 ms

xsmm-custom No. of CPU cycles: 17321300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 17.321300000000001

xsmm-custom avg execution time: 17.321300000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 64, 'a_size': 6144, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0144196259326188, 'speedup_best_over_ref': 1.0144196259326188, 'xsmm_custom_avg': 17.3213, 'xsmm_custom_best': 17.3213, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 17.57106666666667, 'xsmm_reference_best': 17.57106666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 57600).

Output array: C (192, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 52.023333 ms

xsmm-reference Time (libxsmm): 52.023300 ms

xsmm-reference No. of CPU cycles: 52023300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 52.023333333333333

xsmm-reference avg execution time: 52.023333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 744036349 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 57600).

Output array: C (192, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 96

lda= 57600, ldb= 96, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 52.771867 ms

xsmm-custom Time (libxsmm): 52.771867 ms

xsmm-custom No. of CPU cycles: 52771866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 52.771866666666668

xsmm-custom avg execution time: 52.771866666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 192, 'a_size': 18432, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.020833333333333332, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9858156745134402, 'speedup_best_over_ref': 0.9858156745134402, 'xsmm_custom_avg': 52.77186666666667, 'xsmm_custom_best': 52.77186666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 52.02333333333333, 'xsmm_reference_best': 52.02333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 57600).

Output array: C (64, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 39.241567 ms

xsmm-reference Time (libxsmm): 39.241600 ms

xsmm-reference No. of CPU cycles: 39241600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 39.241566666666664

xsmm-reference avg execution time: 39.241566666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 700218974 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 57600).

Output array: C (64, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 192

lda= 57600, ldb= 192, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 38.993500 ms

xsmm-custom Time (libxsmm): 38.993500 ms

xsmm-custom No. of CPU cycles: 38993500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 38.993500000000004

xsmm-custom avg execution time: 38.993500000000004

Freeing A

Freeing B

Freeing C

{'a_cols': 192, 'a_nonzero': 672, 'a_rows': 64, 'a_size': 12288, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0546875, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0063617440513588, 'speedup_best_over_ref': 1.0063617440513588, 'xsmm_custom_avg': 38.993500000000004, 'xsmm_custom_best': 38.993500000000004, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 39.241566666666664, 'xsmm_reference_best': 39.241566666666664, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 57600).

Output array: C (192, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 37.028500 ms

xsmm-reference Time (libxsmm): 37.028500 ms

xsmm-reference No. of CPU cycles: 37028500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 37.028500000000001

xsmm-reference avg execution time: 37.028500000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1721091140 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 57600).

Output array: C (192, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 64

lda= 57600, ldb= 64, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 36.045500 ms

xsmm-custom Time (libxsmm): 36.045467 ms

xsmm-custom No. of CPU cycles: 36045466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 36.045499999999997

xsmm-custom avg execution time: 36.045499999999997

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 672, 'a_rows': 192, 'a_size': 12288, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0546875, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0272710879305325, 'speedup_best_over_ref': 1.0272710879305325, 'xsmm_custom_avg': 36.0455, 'xsmm_custom_best': 36.0455, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 37.0285, 'xsmm_reference_best': 37.0285, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 57600).

Output array: C (96, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 18.170067 ms

xsmm-reference Time (libxsmm): 18.170033 ms

xsmm-reference No. of CPU cycles: 18170033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 18.170066666666667

xsmm-reference avg execution time: 18.170066666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1208341368 cleaned_data/example_mats/hex/p3/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 57600).

Output array: C (96, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 96, k= 64

lda= 57600, ldb= 64, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 96

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 18.207367 ms

xsmm-custom Time (libxsmm): 18.207367 ms

xsmm-custom No. of CPU cycles: 18207366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 18.207366666666665

xsmm-custom avg execution time: 18.207366666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 384, 'a_rows': 96, 'a_size': 6144, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9979513786544275, 'speedup_best_over_ref': 0.9979513786544275, 'xsmm_custom_avg': 18.207366666666665, 'xsmm_custom_best': 18.207366666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 18.170066666666667, 'xsmm_reference_best': 18.170066666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 57600).

Output array: C (64, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 17.214667 ms

xsmm-reference Time (libxsmm): 17.214667 ms

xsmm-reference No. of CPU cycles: 17214666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 17.21466666666667

xsmm-reference avg execution time: 17.21466666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1035383603 cleaned_data/example_mats/hex/p3/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 57600).

Output array: C (64, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 96

lda= 57600, ldb= 96, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 17.466133 ms

xsmm-custom Time (libxsmm): 17.466133 ms

xsmm-custom No. of CPU cycles: 17466133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 17.466133333333332

xsmm-custom avg execution time: 17.466133333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 64, 'a_size': 6144, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9856026138202696, 'speedup_best_over_ref': 0.9856026138202696, 'xsmm_custom_avg': 17.46613333333333, 'xsmm_custom_best': 17.46613333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 17.21466666666667, 'xsmm_reference_best': 17.21466666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 57600).

Output array: C (192, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 51.961000 ms

xsmm-reference Time (libxsmm): 51.961000 ms

xsmm-reference No. of CPU cycles: 51961000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 51.960999999999999

xsmm-reference avg execution time: 51.960999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 2116473736 cleaned_data/example_mats/hex/p3/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 57600).

Output array: C (192, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 96

lda= 57600, ldb= 96, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 53.620467 ms

xsmm-custom Time (libxsmm): 53.620433 ms

xsmm-custom No. of CPU cycles: 53620433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 53.620466666666665

xsmm-custom avg execution time: 53.620466666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 192, 'a_size': 18432, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.020833333333333332, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9690516183497098, 'speedup_best_over_ref': 0.9690516183497098, 'xsmm_custom_avg': 53.620466666666665, 'xsmm_custom_best': 53.620466666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 51.961, 'xsmm_reference_best': 51.961, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 57600).

Output array: C (64, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 38.981967 ms

xsmm-reference Time (libxsmm): 38.981933 ms

xsmm-reference No. of CPU cycles: 38981933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 38.981966666666672

xsmm-reference avg execution time: 38.981966666666672

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1746335872 cleaned_data/example_mats/hex/p3/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 57600).

Output array: C (64, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 192

lda= 57600, ldb= 192, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 38.880067 ms

xsmm-custom Time (libxsmm): 38.880033 ms

xsmm-custom No. of CPU cycles: 38880033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 38.880066666666671

xsmm-custom avg execution time: 38.880066666666671

Freeing A

Freeing B

Freeing C

{'a_cols': 192, 'a_nonzero': 768, 'a_rows': 64, 'a_size': 12288, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0026208802796976, 'speedup_best_over_ref': 1.0026208802796976, 'xsmm_custom_avg': 38.88006666666667, 'xsmm_custom_best': 38.88006666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 38.98196666666667, 'xsmm_reference_best': 38.98196666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 57600).

Output array: C (192, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 35.712233 ms

xsmm-reference Time (libxsmm): 35.712233 ms

xsmm-reference No. of CPU cycles: 35712233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 35.71223333333333

xsmm-reference avg execution time: 35.71223333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 374974166 cleaned_data/example_mats/hex/p3/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 57600).

Output array: C (192, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 64

lda= 57600, ldb= 64, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 35.703367 ms

xsmm-custom Time (libxsmm): 35.703333 ms

xsmm-custom No. of CPU cycles: 35703333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 35.703366666666668

xsmm-custom avg execution time: 35.703366666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 768, 'a_rows': 192, 'a_size': 12288, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0002483425932753, 'speedup_best_over_ref': 1.0002483425932753, 'xsmm_custom_avg': 35.70336666666667, 'xsmm_custom_best': 35.70336666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 35.71223333333333, 'xsmm_reference_best': 35.71223333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 57600).

Output array: C (150, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4812.551767 ms

xsmm-reference Time (libxsmm): 4812.551767 ms

xsmm-reference No. of CPU cycles: 4812551766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4812.5517666666674

xsmm-reference avg execution time: 4812.5517666666674

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1603055594 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 57600).

Output array: C (150, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 150, k= 125

lda= 57600, ldb= 125, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 55.086033 ms

xsmm-custom Time (libxsmm): 55.086033 ms

xsmm-custom No. of CPU cycles: 55086033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 55.08603333333334

xsmm-custom avg execution time: 55.08603333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 150, 'a_rows': 150, 'a_size': 18750, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.008, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 87.36428229539128, 'speedup_best_over_ref': 87.36428229539128, 'xsmm_custom_avg': 55.08603333333334, 'xsmm_custom_best': 55.08603333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4812.551766666667, 'xsmm_reference_best': 4812.551766666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 57600).

Output array: C (125, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 52.380300 ms

xsmm-reference Time (libxsmm): 52.380267 ms

xsmm-reference No. of CPU cycles: 52380266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 52.380300000000005

xsmm-reference avg execution time: 52.380300000000005

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 2100042921 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 57600).

Output array: C (125, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 150

lda= 57600, ldb= 150, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 52.993467 ms

xsmm-custom Time (libxsmm): 52.993467 ms

xsmm-custom No. of CPU cycles: 52993466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 52.99346666666667

xsmm-custom avg execution time: 52.99346666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 125, 'a_size': 18750, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.988429391296034, 'speedup_best_over_ref': 0.988429391296034, 'xsmm_custom_avg': 52.99346666666667, 'xsmm_custom_best': 52.99346666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 52.380300000000005, 'xsmm_reference_best': 52.380300000000005, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 57600).

Output array: C (375, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 153.522500 ms

xsmm-reference Time (libxsmm): 153.522500 ms

xsmm-reference No. of CPU cycles: 153522500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 153.52250000000001

xsmm-reference avg execution time: 153.52250000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1024639350 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 57600).

Output array: C (375, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 150

lda= 57600, ldb= 150, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 153.480133 ms

xsmm-custom Time (libxsmm): 153.480133 ms

xsmm-custom No. of CPU cycles: 153480133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 153.48013333333336

xsmm-custom avg execution time: 153.48013333333336

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 375, 'a_size': 56250, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.013333333333333334, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.000276040069464, 'speedup_best_over_ref': 1.000276040069464, 'xsmm_custom_avg': 153.48013333333336, 'xsmm_custom_best': 153.48013333333336, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 153.5225, 'xsmm_reference_best': 153.5225, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 57600).

Output array: C (125, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 148.838200 ms

xsmm-reference Time (libxsmm): 148.838200 ms

xsmm-reference No. of CPU cycles: 148838200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 148.8382

xsmm-reference avg execution time: 148.8382

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 568395872 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 57600).

Output array: C (125, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 375

lda= 57600, ldb= 375, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 148.568467 ms

xsmm-custom Time (libxsmm): 148.568433 ms

xsmm-custom No. of CPU cycles: 148568433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 148.56846666666667

xsmm-custom avg execution time: 148.56846666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 375, 'a_nonzero': 1650, 'a_rows': 125, 'a_size': 46875, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0352, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0018155490151117, 'speedup_best_over_ref': 1.0018155490151117, 'xsmm_custom_avg': 148.56846666666667, 'xsmm_custom_best': 148.56846666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 148.8382, 'xsmm_reference_best': 148.8382, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 57600).

Output array: C (375, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 126.945567 ms

xsmm-reference Time (libxsmm): 126.945567 ms

xsmm-reference No. of CPU cycles: 126945566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 126.94556666666668

xsmm-reference avg execution time: 126.94556666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1570000026 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 57600).

Output array: C (375, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 125

lda= 57600, ldb= 125, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 127.859933 ms

xsmm-custom Time (libxsmm): 127.859933 ms

xsmm-custom No. of CPU cycles: 127859933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 127.85993333333333

xsmm-custom avg execution time: 127.85993333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 1650, 'a_rows': 375, 'a_size': 46875, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0352, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.992848684941178, 'speedup_best_over_ref': 0.992848684941178, 'xsmm_custom_avg': 127.85993333333333, 'xsmm_custom_best': 127.85993333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 126.94556666666668, 'xsmm_reference_best': 126.94556666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 57600).

Output array: C (150, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 51.138233 ms

xsmm-reference Time (libxsmm): 51.138233 ms

xsmm-reference No. of CPU cycles: 51138233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 51.138233333333332

xsmm-reference avg execution time: 51.138233333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 975999012 cleaned_data/example_mats/hex/p4/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 57600).

Output array: C (150, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 150, k= 125

lda= 57600, ldb= 125, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 51.094833 ms

xsmm-custom Time (libxsmm): 51.094867 ms

xsmm-custom No. of CPU cycles: 51094866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 51.094833333333334

xsmm-custom avg execution time: 51.094833333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 750, 'a_rows': 150, 'a_size': 18750, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.00084940095052, 'speedup_best_over_ref': 1.00084940095052, 'xsmm_custom_avg': 51.094833333333334, 'xsmm_custom_best': 51.094833333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 51.13823333333333, 'xsmm_reference_best': 51.13823333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 57600).

Output array: C (125, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 51.739167 ms

xsmm-reference Time (libxsmm): 51.739167 ms

xsmm-reference No. of CPU cycles: 51739166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 51.739166666666662

xsmm-reference avg execution time: 51.739166666666662

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1395703797 cleaned_data/example_mats/hex/p4/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 57600).

Output array: C (125, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 150

lda= 57600, ldb= 150, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 52.889433 ms

xsmm-custom Time (libxsmm): 52.889467 ms

xsmm-custom No. of CPU cycles: 52889466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 52.889433333333336

xsmm-custom avg execution time: 52.889433333333336

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 125, 'a_size': 18750, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.97825148438598, 'speedup_best_over_ref': 0.97825148438598, 'xsmm_custom_avg': 52.889433333333336, 'xsmm_custom_best': 52.889433333333336, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 51.73916666666666, 'xsmm_reference_best': 51.73916666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 57600).

Output array: C (375, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 152.027200 ms

xsmm-reference Time (libxsmm): 152.027200 ms

xsmm-reference No. of CPU cycles: 152027200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 152.02719999999999

xsmm-reference avg execution time: 152.02719999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 354794451 cleaned_data/example_mats/hex/p4/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 57600).

Output array: C (375, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 150

lda= 57600, ldb= 150, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 152.734567 ms

xsmm-custom Time (libxsmm): 152.734567 ms

xsmm-custom No. of CPU cycles: 152734566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 152.73456666666667

xsmm-custom avg execution time: 152.73456666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 375, 'a_size': 56250, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.013333333333333334, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9953686537232239, 'speedup_best_over_ref': 0.9953686537232239, 'xsmm_custom_avg': 152.73456666666667, 'xsmm_custom_best': 152.73456666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 152.0272, 'xsmm_reference_best': 152.0272, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 57600).

Output array: C (125, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 147.854867 ms

xsmm-reference Time (libxsmm): 147.854833 ms

xsmm-reference No. of CPU cycles: 147854833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 147.85486666666665

xsmm-reference avg execution time: 147.85486666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 2024778863 cleaned_data/example_mats/hex/p4/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 57600).

Output array: C (125, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 375

lda= 57600, ldb= 375, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 147.699767 ms

xsmm-custom Time (libxsmm): 147.699733 ms

xsmm-custom No. of CPU cycles: 147699733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 147.69976666666668

xsmm-custom avg execution time: 147.69976666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 375, 'a_nonzero': 1800, 'a_rows': 125, 'a_size': 46875, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0384, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0010501032161412, 'speedup_best_over_ref': 1.0010501032161412, 'xsmm_custom_avg': 147.69976666666668, 'xsmm_custom_best': 147.69976666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 147.85486666666665, 'xsmm_reference_best': 147.85486666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 57600).

Output array: C (375, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 126.604467 ms

xsmm-reference Time (libxsmm): 126.604433 ms

xsmm-reference No. of CPU cycles: 126604433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 126.60446666666667

xsmm-reference avg execution time: 126.60446666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 15991560 cleaned_data/example_mats/hex/p4/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 57600).

Output array: C (375, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 125

lda= 57600, ldb= 125, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 128.045167 ms

xsmm-custom Time (libxsmm): 128.045133 ms

xsmm-custom No. of CPU cycles: 128045133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 128.04516666666666

xsmm-custom avg execution time: 128.04516666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 1800, 'a_rows': 375, 'a_size': 46875, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0384, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9887485015053282, 'speedup_best_over_ref': 0.9887485015053282, 'xsmm_custom_avg': 128.04516666666666, 'xsmm_custom_best': 128.04516666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 126.60446666666667, 'xsmm_reference_best': 126.60446666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 57600).

Output array: C (216, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 138.695700 ms

xsmm-reference Time (libxsmm): 138.695667 ms

xsmm-reference No. of CPU cycles: 138695666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 138.69570000000002

xsmm-reference avg execution time: 138.69570000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1762735648 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 57600).

Output array: C (216, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 57600, ldb= 216, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 138.944167 ms

xsmm-custom Time (libxsmm): 138.944167 ms

xsmm-custom No. of CPU cycles: 138944166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 138.94416666666666

xsmm-custom avg execution time: 138.94416666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 216, 'a_rows': 216, 'a_size': 46656, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.004629629629629629, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9982117517228145, 'speedup_best_over_ref': 0.9982117517228145, 'xsmm_custom_avg': 138.94416666666666, 'xsmm_custom_best': 138.94416666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 138.69570000000002, 'xsmm_reference_best': 138.69570000000002, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 57600).

Output array: C (216, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 138.647900 ms

xsmm-reference Time (libxsmm): 138.647900 ms

xsmm-reference No. of CPU cycles: 138647900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 138.64789999999999

xsmm-reference avg execution time: 138.64789999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 61134681 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 57600).

Output array: C (216, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 57600, ldb= 216, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 138.680300 ms

xsmm-custom Time (libxsmm): 138.680267 ms

xsmm-custom No. of CPU cycles: 138680266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 138.68029999999999

xsmm-custom avg execution time: 138.68029999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 216, 'a_size': 46656, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9997663691238049, 'speedup_best_over_ref': 0.9997663691238049, 'xsmm_custom_avg': 138.6803, 'xsmm_custom_best': 138.6803, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 138.6479, 'xsmm_reference_best': 138.6479, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 57600).

Output array: C (648, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 405.360467 ms

xsmm-reference Time (libxsmm): 405.360500 ms

xsmm-reference No. of CPU cycles: 405360500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 405.3604666666667

xsmm-reference avg execution time: 405.3604666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1836585689 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 57600).

Output array: C (648, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 57600, ldb= 216, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 404.303333 ms

xsmm-custom Time (libxsmm): 404.303367 ms

xsmm-custom No. of CPU cycles: 404303366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 404.30333333333334

xsmm-custom avg execution time: 404.30333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 648, 'a_size': 139968, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.009259259259259259, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0026147034817092, 'speedup_best_over_ref': 1.0026147034817092, 'xsmm_custom_avg': 404.30333333333334, 'xsmm_custom_best': 404.30333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 405.3604666666667, 'xsmm_reference_best': 405.3604666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 57600).

Output array: C (216, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 426.407200 ms

xsmm-reference Time (libxsmm): 426.407200 ms

xsmm-reference No. of CPU cycles: 426407200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 426.40719999999999

xsmm-reference avg execution time: 426.40719999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1400424646 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 57600).

Output array: C (216, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 648

lda= 57600, ldb= 648, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 427.598133 ms

xsmm-custom Time (libxsmm): 427.598167 ms

xsmm-custom No. of CPU cycles: 427598166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 427.59813333333329

xsmm-custom avg execution time: 427.59813333333329

Freeing A

Freeing B

Freeing C

{'a_cols': 648, 'a_nonzero': 3456, 'a_rows': 216, 'a_size': 139968, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.024691358024691357, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.997214830373441, 'speedup_best_over_ref': 0.997214830373441, 'xsmm_custom_avg': 427.5981333333333, 'xsmm_custom_best': 427.5981333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 426.4072, 'xsmm_reference_best': 426.4072, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 57600).

Output array: C (648, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 404.299800 ms

xsmm-reference Time (libxsmm): 404.299767 ms

xsmm-reference No. of CPU cycles: 404299766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 404.2998

xsmm-reference avg execution time: 404.2998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 381487461 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 57600).

Output array: C (648, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 57600, ldb= 216, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 404.878767 ms

xsmm-custom Time (libxsmm): 404.878767 ms

xsmm-custom No. of CPU cycles: 404878766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 404.87876666666665

xsmm-custom avg execution time: 404.87876666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 3456, 'a_rows': 648, 'a_size': 139968, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.024691358024691357, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9985700246238319, 'speedup_best_over_ref': 0.9985700246238319, 'xsmm_custom_avg': 404.87876666666665, 'xsmm_custom_best': 404.87876666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 404.2998, 'xsmm_reference_best': 404.2998, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 57600).

Output array: C (216, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 138.736167 ms

xsmm-reference Time (libxsmm): 138.736167 ms

xsmm-reference No. of CPU cycles: 138736166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 138.73616666666666

xsmm-reference avg execution time: 138.73616666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 194224546 cleaned_data/example_mats/hex/p5/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 57600).

Output array: C (216, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 57600, ldb= 216, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 138.857867 ms

xsmm-custom Time (libxsmm): 138.857833 ms

xsmm-custom No. of CPU cycles: 138857833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 138.85786666666667

xsmm-custom avg execution time: 138.85786666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 216, 'a_size': 46656, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9991235642393085, 'speedup_best_over_ref': 0.9991235642393085, 'xsmm_custom_avg': 138.85786666666667, 'xsmm_custom_best': 138.85786666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 138.73616666666666, 'xsmm_reference_best': 138.73616666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 57600).

Output array: C (216, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 138.622300 ms

xsmm-reference Time (libxsmm): 138.622267 ms

xsmm-reference No. of CPU cycles: 138622266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 138.6223

xsmm-reference avg execution time: 138.6223

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1609048167 cleaned_data/example_mats/hex/p5/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 57600).

Output array: C (216, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 57600, ldb= 216, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 138.181133 ms

xsmm-custom Time (libxsmm): 138.181100 ms

xsmm-custom No. of CPU cycles: 138181100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 138.18113333333335

xsmm-custom avg execution time: 138.18113333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 216, 'a_size': 46656, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0031926693320892, 'speedup_best_over_ref': 1.0031926693320892, 'xsmm_custom_avg': 138.18113333333335, 'xsmm_custom_best': 138.18113333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 138.6223, 'xsmm_reference_best': 138.6223, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 57600).

Output array: C (648, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 403.915700 ms

xsmm-reference Time (libxsmm): 403.915667 ms

xsmm-reference No. of CPU cycles: 403915666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 403.91569999999996

xsmm-reference avg execution time: 403.91569999999996

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1289321313 cleaned_data/example_mats/hex/p5/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 57600).

Output array: C (648, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 57600, ldb= 216, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 403.949733 ms

xsmm-custom Time (libxsmm): 403.949733 ms

xsmm-custom No. of CPU cycles: 403949733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 403.94973333333331

xsmm-custom avg execution time: 403.94973333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 648, 'a_size': 139968, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.009259259259259259, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9999157485931417, 'speedup_best_over_ref': 0.9999157485931417, 'xsmm_custom_avg': 403.9497333333333, 'xsmm_custom_best': 403.9497333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 403.91569999999996, 'xsmm_reference_best': 403.91569999999996, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 57600).

Output array: C (216, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 426.631367 ms

xsmm-reference Time (libxsmm): 426.631333 ms

xsmm-reference No. of CPU cycles: 426631333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 426.63136666666668

xsmm-reference avg execution time: 426.63136666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1281718055 cleaned_data/example_mats/hex/p5/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 57600).

Output array: C (216, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 648

lda= 57600, ldb= 648, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 427.062067 ms

xsmm-custom Time (libxsmm): 427.062067 ms

xsmm-custom No. of CPU cycles: 427062066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 427.06206666666662

xsmm-custom avg execution time: 427.06206666666662

Freeing A

Freeing B

Freeing C

{'a_cols': 648, 'a_nonzero': 3888, 'a_rows': 216, 'a_size': 139968, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9989914814880149, 'speedup_best_over_ref': 0.9989914814880149, 'xsmm_custom_avg': 427.0620666666666, 'xsmm_custom_best': 427.0620666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 426.6313666666667, 'xsmm_reference_best': 426.6313666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 57600).

Output array: C (648, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 404.580067 ms

xsmm-reference Time (libxsmm): 404.580067 ms

xsmm-reference No. of CPU cycles: 404580066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 404.58006666666665

xsmm-reference avg execution time: 404.58006666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1812063810 cleaned_data/example_mats/hex/p5/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 57600).

Output array: C (648, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 57600, ldb= 216, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 404.305667 ms

xsmm-custom Time (libxsmm): 404.305667 ms

xsmm-custom No. of CPU cycles: 404305666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 404.3056666666667

xsmm-custom avg execution time: 404.3056666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 3888, 'a_rows': 648, 'a_size': 139968, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0006786944201458, 'speedup_best_over_ref': 1.0006786944201458, 'xsmm_custom_avg': 404.3056666666667, 'xsmm_custom_best': 404.3056666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 404.58006666666665, 'xsmm_reference_best': 404.58006666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 57600).

Output array: C (294, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 300.386900 ms

xsmm-reference Time (libxsmm): 300.386900 ms

xsmm-reference No. of CPU cycles: 300386900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 300.38690000000003

xsmm-reference avg execution time: 300.38690000000003

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1273067665 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 57600).

Output array: C (294, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 294, k= 343

lda= 57600, ldb= 343, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 302.809433 ms

xsmm-custom Time (libxsmm): 302.809400 ms

xsmm-custom No. of CPU cycles: 302809400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 302.80943333333329

xsmm-custom avg execution time: 302.80943333333329

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 294, 'a_rows': 294, 'a_size': 100842, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0029154518950437317, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9919998089007137, 'speedup_best_over_ref': 0.9919998089007137, 'xsmm_custom_avg': 302.8094333333333, 'xsmm_custom_best': 302.8094333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 300.3869, 'xsmm_reference_best': 300.3869, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 57600).

Output array: C (343, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 305.044300 ms

xsmm-reference Time (libxsmm): 305.044333 ms

xsmm-reference No. of CPU cycles: 305044333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 305.04429999999996

xsmm-reference avg execution time: 305.04429999999996

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1243802981 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 57600).

Output array: C (343, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 294

lda= 57600, ldb= 294, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 302.700967 ms

xsmm-custom Time (libxsmm): 302.700967 ms

xsmm-custom No. of CPU cycles: 302700966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 302.70096666666666

xsmm-custom avg execution time: 302.70096666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 343, 'a_size': 100842, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0077414134455467, 'speedup_best_over_ref': 1.0077414134455467, 'xsmm_custom_avg': 302.70096666666666, 'xsmm_custom_best': 302.70096666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 305.04429999999996, 'xsmm_reference_best': 305.04429999999996, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 57600).

Output array: C (1029, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 889.593900 ms

xsmm-reference Time (libxsmm): 889.593867 ms

xsmm-reference No. of CPU cycles: 889593866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 889.59389999999996

xsmm-reference avg execution time: 889.59389999999996

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 688507998 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 57600).

Output array: C (1029, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 294

lda= 57600, ldb= 294, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 876.816533 ms

xsmm-custom Time (libxsmm): 876.816500 ms

xsmm-custom No. of CPU cycles: 876816500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 876.81653333333327

xsmm-custom avg execution time: 876.81653333333327

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 1029, 'a_size': 302526, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.006802721088435374, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0145724517968335, 'speedup_best_over_ref': 1.0145724517968335, 'xsmm_custom_avg': 876.8165333333333, 'xsmm_custom_best': 876.8165333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 889.5939, 'xsmm_reference_best': 889.5939, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 57600).

Output array: C (343, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1054.477333 ms

xsmm-reference Time (libxsmm): 1054.477300 ms

xsmm-reference No. of CPU cycles: 1054477300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1054.4773333333333

xsmm-reference avg execution time: 1054.4773333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1244530553 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 57600).

Output array: C (343, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 1029

lda= 57600, ldb= 1029, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1053.022400 ms

xsmm-custom Time (libxsmm): 1053.022400 ms

xsmm-custom No. of CPU cycles: 1053022400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1053.0224000000001

xsmm-custom avg execution time: 1053.0224000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 1029, 'a_nonzero': 6468, 'a_rows': 343, 'a_size': 352947, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.018325697625989172, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.001381673678863, 'speedup_best_over_ref': 1.001381673678863, 'xsmm_custom_avg': 1053.0224, 'xsmm_custom_best': 1053.0224, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1054.4773333333333, 'xsmm_reference_best': 1054.4773333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 57600).

Output array: C (1029, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1009.845533 ms

xsmm-reference Time (libxsmm): 1009.845533 ms

xsmm-reference No. of CPU cycles: 1009845533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1009.8455333333334

xsmm-reference avg execution time: 1009.8455333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1623601047 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 57600).

Output array: C (1029, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 343

lda= 57600, ldb= 343, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1011.400067 ms

xsmm-custom Time (libxsmm): 1011.400033 ms

xsmm-custom No. of CPU cycles: 1011400033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1011.4000666666667

xsmm-custom avg execution time: 1011.4000666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 6468, 'a_rows': 1029, 'a_size': 352947, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.018325697625989172, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9984629886979771, 'speedup_best_over_ref': 0.9984629886979771, 'xsmm_custom_avg': 1011.4000666666667, 'xsmm_custom_best': 1011.4000666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1009.8455333333334, 'xsmm_reference_best': 1009.8455333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 57600).

Output array: C (294, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 300.234600 ms

xsmm-reference Time (libxsmm): 300.234633 ms

xsmm-reference No. of CPU cycles: 300234633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 300.2346

xsmm-reference avg execution time: 300.2346

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1453741485 cleaned_data/example_mats/hex/p6/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 57600).

Output array: C (294, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 294, k= 343

lda= 57600, ldb= 343, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 301.379400 ms

xsmm-custom Time (libxsmm): 301.379367 ms

xsmm-custom No. of CPU cycles: 301379366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 301.37939999999998

xsmm-custom avg execution time: 301.37939999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 2058, 'a_rows': 294, 'a_size': 100842, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9962014656608913, 'speedup_best_over_ref': 0.9962014656608913, 'xsmm_custom_avg': 301.3794, 'xsmm_custom_best': 301.3794, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 300.2346, 'xsmm_reference_best': 300.2346, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 57600).

Output array: C (343, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 299.772167 ms

xsmm-reference Time (libxsmm): 299.772200 ms

xsmm-reference No. of CPU cycles: 299772200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 299.77216666666669

xsmm-reference avg execution time: 299.77216666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 2006661610 cleaned_data/example_mats/hex/p6/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 57600).

Output array: C (343, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 294

lda= 57600, ldb= 294, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 299.125967 ms

xsmm-custom Time (libxsmm): 299.125967 ms

xsmm-custom No. of CPU cycles: 299125966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 299.12596666666667

xsmm-custom avg execution time: 299.12596666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 343, 'a_size': 100842, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0021602938962504, 'speedup_best_over_ref': 1.0021602938962504, 'xsmm_custom_avg': 299.12596666666667, 'xsmm_custom_best': 299.12596666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 299.7721666666667, 'xsmm_reference_best': 299.7721666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 57600).

Output array: C (1029, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 878.252300 ms

xsmm-reference Time (libxsmm): 878.252267 ms

xsmm-reference No. of CPU cycles: 878252266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 878.25229999999999

xsmm-reference avg execution time: 878.25229999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1944947923 cleaned_data/example_mats/hex/p6/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 57600).

Output array: C (1029, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 294

lda= 57600, ldb= 294, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 879.012633 ms

xsmm-custom Time (libxsmm): 879.012667 ms

xsmm-custom No. of CPU cycles: 879012666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 879.01263333333338

xsmm-custom avg execution time: 879.01263333333338

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 1029, 'a_size': 302526, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.006802721088435374, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9991350143280079, 'speedup_best_over_ref': 0.9991350143280079, 'xsmm_custom_avg': 879.0126333333334, 'xsmm_custom_best': 879.0126333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 878.2523, 'xsmm_reference_best': 878.2523, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 57600).

Output array: C (343, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1038.213700 ms

xsmm-reference Time (libxsmm): 1038.213700 ms

xsmm-reference No. of CPU cycles: 1038213700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1038.2137

xsmm-reference avg execution time: 1038.2137

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1785514875 cleaned_data/example_mats/hex/p6/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 57600).

Output array: C (343, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 1029

lda= 57600, ldb= 1029, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1037.662867 ms

xsmm-custom Time (libxsmm): 1037.662833 ms

xsmm-custom No. of CPU cycles: 1037662833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1037.6628666666666

xsmm-custom avg execution time: 1037.6628666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 1029, 'a_nonzero': 7056, 'a_rows': 343, 'a_size': 352947, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.019991670137442734, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0005308403635016, 'speedup_best_over_ref': 1.0005308403635016, 'xsmm_custom_avg': 1037.6628666666666, 'xsmm_custom_best': 1037.6628666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1038.2137, 'xsmm_reference_best': 1038.2137, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 57600).

Output array: C (1029, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1008.165667 ms

xsmm-reference Time (libxsmm): 1008.165667 ms

xsmm-reference No. of CPU cycles: 1008165666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1008.1656666666667

xsmm-reference avg execution time: 1008.1656666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 492184425 cleaned_data/example_mats/hex/p6/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 57600).

Output array: C (1029, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 343

lda= 57600, ldb= 343, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1008.530433 ms

xsmm-custom Time (libxsmm): 1008.530400 ms

xsmm-custom No. of CPU cycles: 1008530400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1008.5304333333333

xsmm-custom avg execution time: 1008.5304333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 7056, 'a_rows': 1029, 'a_size': 352947, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.019991670137442734, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9996383186321298, 'speedup_best_over_ref': 0.9996383186321298, 'xsmm_custom_avg': 1008.5304333333333, 'xsmm_custom_best': 1008.5304333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1008.1656666666667, 'xsmm_reference_best': 1008.1656666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m0.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 57600).

Output array: C (8, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.175000 ms

xsmm-reference Time (libxsmm): 0.175000 ms

xsmm-reference No. of CPU cycles: 175000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.17499999999999999

xsmm-reference avg execution time: 0.17499999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1222719833 cleaned_data/example_mats/quad/p1/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m0.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 57600).

Output array: C (8, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 4

lda= 57600, ldb= 4, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.203200 ms

xsmm-custom Time (libxsmm): 0.203200 ms

xsmm-custom No. of CPU cycles: 203200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.20319999999999999

xsmm-custom avg execution time: 0.20319999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 16, 'a_rows': 8, 'a_size': 32, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.8612204724409449, 'speedup_best_over_ref': 0.8612204724409449, 'xsmm_custom_avg': 0.2032, 'xsmm_custom_best': 0.2032, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.175, 'xsmm_reference_best': 0.175, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m3.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 57600).

Output array: C (4, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.144533 ms

xsmm-reference Time (libxsmm): 0.144500 ms

xsmm-reference No. of CPU cycles: 144500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.14453333333333335

xsmm-reference avg execution time: 0.14453333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 133611393 cleaned_data/example_mats/quad/p1/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m3.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 57600).

Output array: C (4, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 8

lda= 57600, ldb= 8, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.163533 ms

xsmm-custom Time (libxsmm): 0.163533 ms

xsmm-custom No. of CPU cycles: 163533

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.16353333333333334

xsmm-custom avg execution time: 0.16353333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 16, 'a_rows': 4, 'a_size': 32, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.8838157358336731, 'speedup_best_over_ref': 0.8838157358336731, 'xsmm_custom_avg': 0.16353333333333334, 'xsmm_custom_best': 0.16353333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.14453333333333335, 'xsmm_reference_best': 0.14453333333333335, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m6.txt...

Read matrix has 8 rows and 8 columns.

Input arrays: A (8, 8), B (8, 57600).

Output array: C (8, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.251767 ms

xsmm-reference Time (libxsmm): 0.251733 ms

xsmm-reference No. of CPU cycles: 251733

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.25176666666666658

xsmm-reference avg execution time: 0.25176666666666658

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 429137958 cleaned_data/example_mats/quad/p1/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m6.txt...

Read matrix has 8 rows and 8 columns.

Input arrays: A (8, 8), B (8, 57600).

Output array: C (8, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 8

lda= 57600, ldb= 8, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.284800 ms

xsmm-custom Time (libxsmm): 0.284900 ms

xsmm-custom No. of CPU cycles: 284900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.2848

xsmm-custom avg execution time: 0.2848

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 16, 'a_rows': 8, 'a_size': 64, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.8840121722846439, 'speedup_best_over_ref': 0.8840121722846439, 'xsmm_custom_avg': 0.2848, 'xsmm_custom_best': 0.2848, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.2517666666666666, 'xsmm_reference_best': 0.2517666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m132.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 57600).

Output array: C (4, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.144000 ms

xsmm-reference Time (libxsmm): 0.144000 ms

xsmm-reference No. of CPU cycles: 144000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.14400000000000002

xsmm-reference avg execution time: 0.14400000000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 724262814 cleaned_data/example_mats/quad/p1/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m132.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 57600).

Output array: C (4, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 8

lda= 57600, ldb= 8, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.175100 ms

xsmm-custom Time (libxsmm): 0.175100 ms

xsmm-custom No. of CPU cycles: 175100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.17510000000000001

xsmm-custom avg execution time: 0.17510000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 16, 'a_rows': 4, 'a_size': 32, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.8223872073101086, 'speedup_best_over_ref': 0.8223872073101086, 'xsmm_custom_avg': 0.1751, 'xsmm_custom_best': 0.1751, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.14400000000000002, 'xsmm_reference_best': 0.14400000000000002, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m460.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 57600).

Output array: C (8, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.179200 ms

xsmm-reference Time (libxsmm): 0.179200 ms

xsmm-reference No. of CPU cycles: 179200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.1792

xsmm-reference avg execution time: 0.1792

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1396035493 cleaned_data/example_mats/quad/p1/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m460.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 57600).

Output array: C (8, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 4

lda= 57600, ldb= 4, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.223067 ms

xsmm-custom Time (libxsmm): 0.223033 ms

xsmm-custom No. of CPU cycles: 223033

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.22306666666666666

xsmm-custom avg execution time: 0.22306666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 16, 'a_rows': 8, 'a_size': 32, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.803347280334728, 'speedup_best_over_ref': 0.803347280334728, 'xsmm_custom_avg': 0.22306666666666666, 'xsmm_custom_best': 0.22306666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.1792, 'xsmm_reference_best': 0.1792, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 57600).

Output array: C (12, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.355567 ms

xsmm-reference Time (libxsmm): 0.355567 ms

xsmm-reference No. of CPU cycles: 355566

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.35556666666666664

xsmm-reference avg execution time: 0.35556666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1109867140 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 57600).

Output array: C (12, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 9

lda= 57600, ldb= 9, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.366467 ms

xsmm-custom Time (libxsmm): 0.366433 ms

xsmm-custom No. of CPU cycles: 366433

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.36646666666666666

xsmm-custom avg execution time: 0.36646666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 12, 'a_rows': 12, 'a_size': 108, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9702565035473895, 'speedup_best_over_ref': 0.9702565035473895, 'xsmm_custom_avg': 0.36646666666666666, 'xsmm_custom_best': 0.36646666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.35556666666666664, 'xsmm_reference_best': 0.35556666666666664, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 57600).

Output array: C (9, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.352133 ms

xsmm-reference Time (libxsmm): 0.352133 ms

xsmm-reference No. of CPU cycles: 352133

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.35213333333333335

xsmm-reference avg execution time: 0.35213333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1134357972 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 57600).

Output array: C (9, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 12

lda= 57600, ldb= 12, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.362800 ms

xsmm-custom Time (libxsmm): 0.362800 ms

xsmm-custom No. of CPU cycles: 362800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.36280000000000001

xsmm-custom avg execution time: 0.36280000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 9, 'a_size': 108, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.3333333333333333, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9705990444689453, 'speedup_best_over_ref': 0.9705990444689453, 'xsmm_custom_avg': 0.3628, 'xsmm_custom_best': 0.3628, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.35213333333333335, 'xsmm_reference_best': 0.35213333333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 57600).

Output array: C (18, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.641533 ms

xsmm-reference Time (libxsmm): 0.641533 ms

xsmm-reference No. of CPU cycles: 641533

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.64153333333333329

xsmm-reference avg execution time: 0.64153333333333329

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 746836575 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 57600).

Output array: C (18, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 12

lda= 57600, ldb= 12, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.639767 ms

xsmm-custom Time (libxsmm): 0.639767 ms

xsmm-custom No. of CPU cycles: 639766

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.63976666666666671

xsmm-custom avg execution time: 0.63976666666666671

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 18, 'a_size': 216, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0027614234356275, 'speedup_best_over_ref': 1.0027614234356275, 'xsmm_custom_avg': 0.6397666666666667, 'xsmm_custom_best': 0.6397666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6415333333333333, 'xsmm_reference_best': 0.6415333333333333, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 57600).

Output array: C (9, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.484433 ms

xsmm-reference Time (libxsmm): 0.484433 ms

xsmm-reference No. of CPU cycles: 484433

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.48443333333333333

xsmm-reference avg execution time: 0.48443333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1278055211 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 57600).

Output array: C (9, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 18

lda= 57600, ldb= 18, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.485000 ms

xsmm-custom Time (libxsmm): 0.485000 ms

xsmm-custom No. of CPU cycles: 485000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.48500000000000004

xsmm-custom avg execution time: 0.48500000000000004

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 48, 'a_rows': 9, 'a_size': 162, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9988316151202749, 'speedup_best_over_ref': 0.9988316151202749, 'xsmm_custom_avg': 0.48500000000000004, 'xsmm_custom_best': 0.48500000000000004, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4844333333333333, 'xsmm_reference_best': 0.4844333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 57600).

Output array: C (18, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.519700 ms

xsmm-reference Time (libxsmm): 0.519700 ms

xsmm-reference No. of CPU cycles: 519700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.51969999999999994

xsmm-reference avg execution time: 0.51969999999999994

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 610608963 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 57600).

Output array: C (18, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 9

lda= 57600, ldb= 9, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.507700 ms

xsmm-custom Time (libxsmm): 0.507700 ms

xsmm-custom No. of CPU cycles: 507700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.50770000000000004

xsmm-custom avg execution time: 0.50770000000000004

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 48, 'a_rows': 18, 'a_size': 162, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0236360055150677, 'speedup_best_over_ref': 1.0236360055150677, 'xsmm_custom_avg': 0.5077, 'xsmm_custom_best': 0.5077, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5196999999999999, 'xsmm_reference_best': 0.5196999999999999, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 57600).

Output array: C (12, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.366033 ms

xsmm-reference Time (libxsmm): 0.366033 ms

xsmm-reference No. of CPU cycles: 366033

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.36603333333333332

xsmm-reference avg execution time: 0.36603333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1905994387 cleaned_data/example_mats/quad/p2/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 57600).

Output array: C (12, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 9

lda= 57600, ldb= 9, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.361400 ms

xsmm-custom Time (libxsmm): 0.361367 ms

xsmm-custom No. of CPU cycles: 361366

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.3614

xsmm-custom avg execution time: 0.3614

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 36, 'a_rows': 12, 'a_size': 108, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.3333333333333333, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0128205128205128, 'speedup_best_over_ref': 1.0128205128205128, 'xsmm_custom_avg': 0.3614, 'xsmm_custom_best': 0.3614, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.3660333333333333, 'xsmm_reference_best': 0.3660333333333333, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 57600).

Output array: C (9, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.331700 ms

xsmm-reference Time (libxsmm): 0.331800 ms

xsmm-reference No. of CPU cycles: 331800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.33169999999999999

xsmm-reference avg execution time: 0.33169999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 315312332 cleaned_data/example_mats/quad/p2/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 57600).

Output array: C (9, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 12

lda= 57600, ldb= 12, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.342500 ms

xsmm-custom Time (libxsmm): 0.342500 ms

xsmm-custom No. of CPU cycles: 342500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.34250000000000003

xsmm-custom avg execution time: 0.34250000000000003

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 9, 'a_size': 108, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.3333333333333333, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9684671532846715, 'speedup_best_over_ref': 0.9684671532846715, 'xsmm_custom_avg': 0.3425, 'xsmm_custom_best': 0.3425, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.3317, 'xsmm_reference_best': 0.3317, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 57600).

Output array: C (18, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.634900 ms

xsmm-reference Time (libxsmm): 0.634900 ms

xsmm-reference No. of CPU cycles: 634900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.63490000000000002

xsmm-reference avg execution time: 0.63490000000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 2020578119 cleaned_data/example_mats/quad/p2/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 57600).

Output array: C (18, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 12

lda= 57600, ldb= 12, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.631467 ms

xsmm-custom Time (libxsmm): 0.631467 ms

xsmm-custom No. of CPU cycles: 631466

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.63146666666666662

xsmm-custom avg execution time: 0.63146666666666662

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 18, 'a_size': 216, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0054370777027029, 'speedup_best_over_ref': 1.0054370777027029, 'xsmm_custom_avg': 0.6314666666666666, 'xsmm_custom_best': 0.6314666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6349, 'xsmm_reference_best': 0.6349, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 57600).

Output array: C (9, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.472033 ms

xsmm-reference Time (libxsmm): 0.472033 ms

xsmm-reference No. of CPU cycles: 472033

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.4720333333333333

xsmm-reference avg execution time: 0.4720333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 51209843 cleaned_data/example_mats/quad/p2/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 57600).

Output array: C (9, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 18

lda= 57600, ldb= 18, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.489133 ms

xsmm-custom Time (libxsmm): 0.489133 ms

xsmm-custom No. of CPU cycles: 489133

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.48913333333333331

xsmm-custom avg execution time: 0.48913333333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 48, 'a_rows': 9, 'a_size': 162, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9650402071691427, 'speedup_best_over_ref': 0.9650402071691427, 'xsmm_custom_avg': 0.4891333333333333, 'xsmm_custom_best': 0.4891333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4720333333333333, 'xsmm_reference_best': 0.4720333333333333, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 57600).

Output array: C (18, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.511767 ms

xsmm-reference Time (libxsmm): 0.511733 ms

xsmm-reference No. of CPU cycles: 511733

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.5117666666666667

xsmm-reference avg execution time: 0.5117666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1239125112 cleaned_data/example_mats/quad/p2/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 57600).

Output array: C (18, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 9

lda= 57600, ldb= 9, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.503367 ms

xsmm-custom Time (libxsmm): 0.503367 ms

xsmm-custom No. of CPU cycles: 503366

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.50336666666666674

xsmm-custom avg execution time: 0.50336666666666674

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 48, 'a_rows': 18, 'a_size': 162, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0166876365803588, 'speedup_best_over_ref': 1.0166876365803588, 'xsmm_custom_avg': 0.5033666666666667, 'xsmm_custom_best': 0.5033666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5117666666666667, 'xsmm_reference_best': 0.5117666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 57600).

Output array: C (16, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.735167 ms

xsmm-reference Time (libxsmm): 0.735167 ms

xsmm-reference No. of CPU cycles: 735166

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.73516666666666663

xsmm-reference avg execution time: 0.73516666666666663

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 695634449 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 57600).

Output array: C (16, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 57600, ldb= 16, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.742800 ms

xsmm-custom Time (libxsmm): 0.742800 ms

xsmm-custom No. of CPU cycles: 742800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.74280000000000002

xsmm-custom avg execution time: 0.74280000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 16, 'a_rows': 16, 'a_size': 256, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9897235684796266, 'speedup_best_over_ref': 0.9897235684796266, 'xsmm_custom_avg': 0.7428, 'xsmm_custom_best': 0.7428, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.7351666666666666, 'xsmm_reference_best': 0.7351666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 57600).

Output array: C (16, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.731067 ms

xsmm-reference Time (libxsmm): 0.731067 ms

xsmm-reference No. of CPU cycles: 731066

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.73106666666666664

xsmm-reference avg execution time: 0.73106666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 509469604 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 57600).

Output array: C (16, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 57600, ldb= 16, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.741000 ms

xsmm-custom Time (libxsmm): 0.741000 ms

xsmm-custom No. of CPU cycles: 741000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.74099999999999999

xsmm-custom avg execution time: 0.74099999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 16, 'a_size': 256, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9865946918578498, 'speedup_best_over_ref': 0.9865946918578498, 'xsmm_custom_avg': 0.741, 'xsmm_custom_best': 0.741, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.7310666666666666, 'xsmm_reference_best': 0.7310666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 57600).

Output array: C (32, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.699900 ms

xsmm-reference Time (libxsmm): 1.699900 ms

xsmm-reference No. of CPU cycles: 1699900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.6999

xsmm-reference avg execution time: 1.6999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1727538113 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 57600).

Output array: C (32, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 57600, ldb= 16, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.736233 ms

xsmm-custom Time (libxsmm): 1.736233 ms

xsmm-custom No. of CPU cycles: 1736233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.7362333333333335

xsmm-custom avg execution time: 1.7362333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 32, 'a_size': 512, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.125, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9790734732274846, 'speedup_best_over_ref': 0.9790734732274846, 'xsmm_custom_avg': 1.7362333333333335, 'xsmm_custom_best': 1.7362333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.6999, 'xsmm_reference_best': 1.6999, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 57600).

Output array: C (16, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.684333 ms

xsmm-reference Time (libxsmm): 1.684333 ms

xsmm-reference No. of CPU cycles: 1684333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.6843333333333335

xsmm-reference avg execution time: 1.6843333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1086927832 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 57600).

Output array: C (16, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 32

lda= 57600, ldb= 32, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.761433 ms

xsmm-custom Time (libxsmm): 1.761433 ms

xsmm-custom No. of CPU cycles: 1761433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.7614333333333334

xsmm-custom avg execution time: 1.7614333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 32, 'a_nonzero': 112, 'a_rows': 16, 'a_size': 512, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.21875, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9562288287947316, 'speedup_best_over_ref': 0.9562288287947316, 'xsmm_custom_avg': 1.7614333333333334, 'xsmm_custom_best': 1.7614333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.6843333333333335, 'xsmm_reference_best': 1.6843333333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 57600).

Output array: C (32, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.706733 ms

xsmm-reference Time (libxsmm): 1.706733 ms

xsmm-reference No. of CPU cycles: 1706733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.7067333333333332

xsmm-reference avg execution time: 1.7067333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1593995964 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 57600).

Output array: C (32, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 57600, ldb= 16, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.715433 ms

xsmm-custom Time (libxsmm): 1.715433 ms

xsmm-custom No. of CPU cycles: 1715433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.7154333333333334

xsmm-custom avg execution time: 1.7154333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 112, 'a_rows': 32, 'a_size': 512, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.21875, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.994928395157686, 'speedup_best_over_ref': 0.994928395157686, 'xsmm_custom_avg': 1.7154333333333334, 'xsmm_custom_best': 1.7154333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.7067333333333332, 'xsmm_reference_best': 1.7067333333333332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 57600).

Output array: C (16, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.710400 ms

xsmm-reference Time (libxsmm): 0.710400 ms

xsmm-reference No. of CPU cycles: 710400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.71040000000000003

xsmm-reference avg execution time: 0.71040000000000003

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1632143657 cleaned_data/example_mats/quad/p3/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 57600).

Output array: C (16, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 57600, ldb= 16, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.750967 ms

xsmm-custom Time (libxsmm): 0.750967 ms

xsmm-custom No. of CPU cycles: 750966

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.75096666666666667

xsmm-custom avg execution time: 0.75096666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 16, 'a_size': 256, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9459807359403436, 'speedup_best_over_ref': 0.9459807359403436, 'xsmm_custom_avg': 0.7509666666666667, 'xsmm_custom_best': 0.7509666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.7104, 'xsmm_reference_best': 0.7104, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 57600).

Output array: C (16, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.720400 ms

xsmm-reference Time (libxsmm): 0.720400 ms

xsmm-reference No. of CPU cycles: 720400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.72039999999999993

xsmm-reference avg execution time: 0.72039999999999993

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 114165150 cleaned_data/example_mats/quad/p3/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 57600).

Output array: C (16, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 57600, ldb= 16, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.749267 ms

xsmm-custom Time (libxsmm): 0.749267 ms

xsmm-custom No. of CPU cycles: 749266

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.74926666666666675

xsmm-custom avg execution time: 0.74926666666666675

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 16, 'a_size': 256, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9614734406975708, 'speedup_best_over_ref': 0.9614734406975708, 'xsmm_custom_avg': 0.7492666666666667, 'xsmm_custom_best': 0.7492666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.7203999999999999, 'xsmm_reference_best': 0.7203999999999999, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 57600).

Output array: C (32, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.821367 ms

xsmm-reference Time (libxsmm): 1.821400 ms

xsmm-reference No. of CPU cycles: 1821400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.8213666666666666

xsmm-reference avg execution time: 1.8213666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1764601267 cleaned_data/example_mats/quad/p3/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 57600).

Output array: C (32, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 57600, ldb= 16, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.717900 ms

xsmm-custom Time (libxsmm): 1.717900 ms

xsmm-custom No. of CPU cycles: 1717900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.7179

xsmm-custom avg execution time: 1.7179

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 32, 'a_size': 512, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.125, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0602285736461183, 'speedup_best_over_ref': 1.0602285736461183, 'xsmm_custom_avg': 1.7179, 'xsmm_custom_best': 1.7179, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.8213666666666666, 'xsmm_reference_best': 1.8213666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 57600).

Output array: C (16, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.751267 ms

xsmm-reference Time (libxsmm): 1.751267 ms

xsmm-reference No. of CPU cycles: 1751266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.7512666666666665

xsmm-reference avg execution time: 1.7512666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1484904027 cleaned_data/example_mats/quad/p3/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 57600).

Output array: C (16, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 32

lda= 57600, ldb= 32, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.890633 ms

xsmm-custom Time (libxsmm): 1.890633 ms

xsmm-custom No. of CPU cycles: 1890633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.8906333333333334

xsmm-custom avg execution time: 1.8906333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 32, 'a_nonzero': 128, 'a_rows': 16, 'a_size': 512, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9262857243604435, 'speedup_best_over_ref': 0.9262857243604435, 'xsmm_custom_avg': 1.8906333333333334, 'xsmm_custom_best': 1.8906333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.7512666666666665, 'xsmm_reference_best': 1.7512666666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 57600).

Output array: C (32, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.708333 ms

xsmm-reference Time (libxsmm): 1.708333 ms

xsmm-reference No. of CPU cycles: 1708333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.7083333333333333

xsmm-reference avg execution time: 1.7083333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1480736387 cleaned_data/example_mats/quad/p3/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 57600).

Output array: C (32, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 57600, ldb= 16, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.719700 ms

xsmm-custom Time (libxsmm): 1.719700 ms

xsmm-custom No. of CPU cycles: 1719700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.7197

xsmm-custom avg execution time: 1.7197

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 128, 'a_rows': 32, 'a_size': 512, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9933903200170572, 'speedup_best_over_ref': 0.9933903200170572, 'xsmm_custom_avg': 1.7197, 'xsmm_custom_best': 1.7197, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.7083333333333333, 'xsmm_reference_best': 1.7083333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 57600).

Output array: C (20, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.639467 ms

xsmm-reference Time (libxsmm): 1.639467 ms

xsmm-reference No. of CPU cycles: 1639466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.6394666666666666

xsmm-reference avg execution time: 1.6394666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 980284278 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 57600).

Output array: C (20, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 25

lda= 57600, ldb= 25, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.625367 ms

xsmm-custom Time (libxsmm): 1.625367 ms

xsmm-custom No. of CPU cycles: 1625366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.6253666666666655

xsmm-custom avg execution time: 1.6253666666666655

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 20, 'a_rows': 20, 'a_size': 500, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0086749656487775, 'speedup_best_over_ref': 1.0086749656487775, 'xsmm_custom_avg': 1.6253666666666655, 'xsmm_custom_best': 1.6253666666666655, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.6394666666666666, 'xsmm_reference_best': 1.6394666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 57600).

Output array: C (25, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.516000 ms

xsmm-reference Time (libxsmm): 1.515967 ms

xsmm-reference No. of CPU cycles: 1515966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.5159999999999998

xsmm-reference avg execution time: 1.5159999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1554261591 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 57600).

Output array: C (25, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 20

lda= 57600, ldb= 20, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.586933 ms

xsmm-custom Time (libxsmm): 1.586933 ms

xsmm-custom No. of CPU cycles: 1586933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.5869333333333333

xsmm-custom avg execution time: 1.5869333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 25, 'a_size': 500, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9553016299781548, 'speedup_best_over_ref': 0.9553016299781548, 'xsmm_custom_avg': 1.5869333333333333, 'xsmm_custom_best': 1.5869333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.5159999999999998, 'xsmm_reference_best': 1.5159999999999998, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 57600).

Output array: C (50, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.448367 ms

xsmm-reference Time (libxsmm): 3.448367 ms

xsmm-reference No. of CPU cycles: 3448366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.4483666666666664

xsmm-reference avg execution time: 3.4483666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 141250957 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 57600).

Output array: C (50, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 20

lda= 57600, ldb= 20, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.493233 ms

xsmm-custom Time (libxsmm): 3.493233 ms

xsmm-custom No. of CPU cycles: 3493233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.4932333333333343

xsmm-custom avg execution time: 3.4932333333333343

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 50, 'a_size': 1000, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9871561208813225, 'speedup_best_over_ref': 0.9871561208813225, 'xsmm_custom_avg': 3.4932333333333343, 'xsmm_custom_best': 3.4932333333333343, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.4483666666666664, 'xsmm_reference_best': 3.4483666666666664, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 57600).

Output array: C (25, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.419033 ms

xsmm-reference Time (libxsmm): 4.419033 ms

xsmm-reference No. of CPU cycles: 4419033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.4190333333333331

xsmm-reference avg execution time: 4.4190333333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 2130014126 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 57600).

Output array: C (25, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 50

lda= 57600, ldb= 50, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.403100 ms

xsmm-custom Time (libxsmm): 4.403100 ms

xsmm-custom No. of CPU cycles: 4403100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.4030999999999993

xsmm-custom avg execution time: 4.4030999999999993

Freeing A

Freeing B

Freeing C

{'a_cols': 50, 'a_nonzero': 220, 'a_rows': 25, 'a_size': 1250, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.176, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0036186626089196, 'speedup_best_over_ref': 1.0036186626089196, 'xsmm_custom_avg': 4.403099999999999, 'xsmm_custom_best': 4.403099999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.419033333333333, 'xsmm_reference_best': 4.419033333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 57600).

Output array: C (50, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.261700 ms

xsmm-reference Time (libxsmm): 4.261667 ms

xsmm-reference No. of CPU cycles: 4261666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.2617000000000003

xsmm-reference avg execution time: 4.2617000000000003

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1047842610 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 57600).

Output array: C (50, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 25

lda= 57600, ldb= 25, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.271067 ms

xsmm-custom Time (libxsmm): 4.271033 ms

xsmm-custom No. of CPU cycles: 4271033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.271066666666667

xsmm-custom avg execution time: 4.271066666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 220, 'a_rows': 50, 'a_size': 1250, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.176, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9978069490837573, 'speedup_best_over_ref': 0.9978069490837573, 'xsmm_custom_avg': 4.271066666666667, 'xsmm_custom_best': 4.271066666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.2617, 'xsmm_reference_best': 4.2617, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 57600).

Output array: C (20, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.571167 ms

xsmm-reference Time (libxsmm): 1.571167 ms

xsmm-reference No. of CPU cycles: 1571166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.5711666666666666

xsmm-reference avg execution time: 1.5711666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 43165666 cleaned_data/example_mats/quad/p4/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 57600).

Output array: C (20, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 25

lda= 57600, ldb= 25, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.612967 ms

xsmm-custom Time (libxsmm): 1.612933 ms

xsmm-custom No. of CPU cycles: 1612933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.6129666666666667

xsmm-custom avg execution time: 1.6129666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 100, 'a_rows': 20, 'a_size': 500, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9740850193225733, 'speedup_best_over_ref': 0.9740850193225733, 'xsmm_custom_avg': 1.6129666666666667, 'xsmm_custom_best': 1.6129666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.5711666666666666, 'xsmm_reference_best': 1.5711666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 57600).

Output array: C (25, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.513867 ms

xsmm-reference Time (libxsmm): 1.513833 ms

xsmm-reference No. of CPU cycles: 1513833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.5138666666666665

xsmm-reference avg execution time: 1.5138666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1858423753 cleaned_data/example_mats/quad/p4/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 57600).

Output array: C (25, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 20

lda= 57600, ldb= 20, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.564467 ms

xsmm-custom Time (libxsmm): 1.564467 ms

xsmm-custom No. of CPU cycles: 1564466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.5644666666666667

xsmm-custom avg execution time: 1.5644666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 25, 'a_size': 500, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9676567094217411, 'speedup_best_over_ref': 0.9676567094217411, 'xsmm_custom_avg': 1.5644666666666667, 'xsmm_custom_best': 1.5644666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.5138666666666665, 'xsmm_reference_best': 1.5138666666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 57600).

Output array: C (50, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.461367 ms

xsmm-reference Time (libxsmm): 3.461367 ms

xsmm-reference No. of CPU cycles: 3461366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.4613666666666663

xsmm-reference avg execution time: 3.4613666666666663

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 411871223 cleaned_data/example_mats/quad/p4/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 57600).

Output array: C (50, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 20

lda= 57600, ldb= 20, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.485867 ms

xsmm-custom Time (libxsmm): 3.485867 ms

xsmm-custom No. of CPU cycles: 3485866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.4858666666666673

xsmm-custom avg execution time: 3.4858666666666673

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 50, 'a_size': 1000, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9929716187270499, 'speedup_best_over_ref': 0.9929716187270499, 'xsmm_custom_avg': 3.4858666666666673, 'xsmm_custom_best': 3.4858666666666673, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.4613666666666663, 'xsmm_reference_best': 3.4613666666666663, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 57600).

Output array: C (25, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.358700 ms

xsmm-reference Time (libxsmm): 4.358567 ms

xsmm-reference No. of CPU cycles: 4358566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.3586999999999998

xsmm-reference avg execution time: 4.3586999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 2015008774 cleaned_data/example_mats/quad/p4/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 57600).

Output array: C (25, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 50

lda= 57600, ldb= 50, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.414100 ms

xsmm-custom Time (libxsmm): 4.414067 ms

xsmm-custom No. of CPU cycles: 4414066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.4141000000000004

xsmm-custom avg execution time: 4.4141000000000004

Freeing A

Freeing B

Freeing C

{'a_cols': 50, 'a_nonzero': 240, 'a_rows': 25, 'a_size': 1250, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.192, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9874493101651525, 'speedup_best_over_ref': 0.9874493101651525, 'xsmm_custom_avg': 4.4141, 'xsmm_custom_best': 4.4141, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.3587, 'xsmm_reference_best': 4.3587, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 57600).

Output array: C (50, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.254533 ms

xsmm-reference Time (libxsmm): 4.254500 ms

xsmm-reference No. of CPU cycles: 4254500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.2545333333333319

xsmm-reference avg execution time: 4.2545333333333319

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1988983669 cleaned_data/example_mats/quad/p4/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 57600).

Output array: C (50, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 25

lda= 57600, ldb= 25, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.289600 ms

xsmm-custom Time (libxsmm): 4.289600 ms

xsmm-custom No. of CPU cycles: 4289600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.2895999999999992

xsmm-custom avg execution time: 4.2895999999999992

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 240, 'a_rows': 50, 'a_size': 1250, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.192, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9918251896058683, 'speedup_best_over_ref': 0.9918251896058683, 'xsmm_custom_avg': 4.289599999999999, 'xsmm_custom_best': 4.289599999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.254533333333332, 'xsmm_reference_best': 4.254533333333332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 57600).

Output array: C (24, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.851000 ms

xsmm-reference Time (libxsmm): 2.851000 ms

xsmm-reference No. of CPU cycles: 2851000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.851

xsmm-reference avg execution time: 2.851

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 511188357 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 57600).

Output array: C (24, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 36

lda= 57600, ldb= 36, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.874700 ms

xsmm-custom Time (libxsmm): 2.874700 ms

xsmm-custom No. of CPU cycles: 2874700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.8746999999999998

xsmm-custom avg execution time: 2.8746999999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 24, 'a_rows': 24, 'a_size': 864, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9917556614603263, 'speedup_best_over_ref': 0.9917556614603263, 'xsmm_custom_avg': 2.8747, 'xsmm_custom_best': 2.8747, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.851, 'xsmm_reference_best': 2.851, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 57600).

Output array: C (36, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.966433 ms

xsmm-reference Time (libxsmm): 2.966433 ms

xsmm-reference No. of CPU cycles: 2966433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.9664333333333333

xsmm-reference avg execution time: 2.9664333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 846493455 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 57600).

Output array: C (36, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 24

lda= 57600, ldb= 24, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.033133 ms

xsmm-custom Time (libxsmm): 3.033133 ms

xsmm-custom No. of CPU cycles: 3033133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.0331333333333332

xsmm-custom avg execution time: 3.0331333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 36, 'a_size': 864, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9780095390904895, 'speedup_best_over_ref': 0.9780095390904895, 'xsmm_custom_avg': 3.0331333333333332, 'xsmm_custom_best': 3.0331333333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.9664333333333333, 'xsmm_reference_best': 2.9664333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 57600).

Output array: C (72, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.710200 ms

xsmm-reference Time (libxsmm): 5.710200 ms

xsmm-reference No. of CPU cycles: 5710200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.7102000000000004

xsmm-reference avg execution time: 5.7102000000000004

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1211693233 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 57600).

Output array: C (72, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 24

lda= 57600, ldb= 24, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.795467 ms

xsmm-custom Time (libxsmm): 5.795433 ms

xsmm-custom No. of CPU cycles: 5795433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.795466666666667

xsmm-custom avg execution time: 5.795466666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 72, 'a_size': 1728, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.08333333333333333, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9852873510329914, 'speedup_best_over_ref': 0.9852873510329914, 'xsmm_custom_avg': 5.795466666666667, 'xsmm_custom_best': 5.795466666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.7102, 'xsmm_reference_best': 5.7102, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 57600).

Output array: C (36, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 7.438067 ms

xsmm-reference Time (libxsmm): 7.438067 ms

xsmm-reference No. of CPU cycles: 7438066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 7.4380666666666668

xsmm-reference avg execution time: 7.4380666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 943668958 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 57600).

Output array: C (36, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 72

lda= 57600, ldb= 72, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 7.460367 ms

xsmm-custom Time (libxsmm): 7.460333 ms

xsmm-custom No. of CPU cycles: 7460333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 7.4603666666666681

xsmm-custom avg execution time: 7.4603666666666681

Freeing A

Freeing B

Freeing C

{'a_cols': 72, 'a_nonzero': 384, 'a_rows': 36, 'a_size': 2592, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14814814814814814, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9970108707793628, 'speedup_best_over_ref': 0.9970108707793628, 'xsmm_custom_avg': 7.460366666666668, 'xsmm_custom_best': 7.460366666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 7.438066666666667, 'xsmm_reference_best': 7.438066666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 57600).

Output array: C (72, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 7.727833 ms

xsmm-reference Time (libxsmm): 7.727833 ms

xsmm-reference No. of CPU cycles: 7727833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 7.7278333333333338

xsmm-reference avg execution time: 7.7278333333333338

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 691797248 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 57600).

Output array: C (72, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 36

lda= 57600, ldb= 36, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 7.796667 ms

xsmm-custom Time (libxsmm): 7.796667 ms

xsmm-custom No. of CPU cycles: 7796666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 7.7966666666666669

xsmm-custom avg execution time: 7.7966666666666669

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 384, 'a_rows': 72, 'a_size': 2592, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14814814814814814, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.991171440786661, 'speedup_best_over_ref': 0.991171440786661, 'xsmm_custom_avg': 7.796666666666667, 'xsmm_custom_best': 7.796666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 7.727833333333334, 'xsmm_reference_best': 7.727833333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 57600).

Output array: C (24, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.872867 ms

xsmm-reference Time (libxsmm): 2.872833 ms

xsmm-reference No. of CPU cycles: 2872833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.8728666666666669

xsmm-reference avg execution time: 2.8728666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 813871873 cleaned_data/example_mats/quad/p5/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 57600).

Output array: C (24, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 36

lda= 57600, ldb= 36, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.879867 ms

xsmm-custom Time (libxsmm): 2.879833 ms

xsmm-custom No. of CPU cycles: 2879833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.8798666666666666

xsmm-custom avg execution time: 2.8798666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 144, 'a_rows': 24, 'a_size': 864, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9975693319135146, 'speedup_best_over_ref': 0.9975693319135146, 'xsmm_custom_avg': 2.8798666666666666, 'xsmm_custom_best': 2.8798666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.872866666666667, 'xsmm_reference_best': 2.872866666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 57600).

Output array: C (36, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.967733 ms

xsmm-reference Time (libxsmm): 2.967767 ms

xsmm-reference No. of CPU cycles: 2967766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.9677333333333333

xsmm-reference avg execution time: 2.9677333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 446083639 cleaned_data/example_mats/quad/p5/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 57600).

Output array: C (36, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 24

lda= 57600, ldb= 24, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.047033 ms

xsmm-custom Time (libxsmm): 3.047067 ms

xsmm-custom No. of CPU cycles: 3047066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.0470333333333315

xsmm-custom avg execution time: 3.0470333333333315

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 36, 'a_size': 864, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9739746857599201, 'speedup_best_over_ref': 0.9739746857599201, 'xsmm_custom_avg': 3.0470333333333315, 'xsmm_custom_best': 3.0470333333333315, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.9677333333333333, 'xsmm_reference_best': 2.9677333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 57600).

Output array: C (72, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.713967 ms

xsmm-reference Time (libxsmm): 5.713933 ms

xsmm-reference No. of CPU cycles: 5713933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.7139666666666669

xsmm-reference avg execution time: 5.7139666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1804281360 cleaned_data/example_mats/quad/p5/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 57600).

Output array: C (72, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 24

lda= 57600, ldb= 24, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.738667 ms

xsmm-custom Time (libxsmm): 5.738667 ms

xsmm-custom No. of CPU cycles: 5738666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.7386666666666661

xsmm-custom avg execution time: 5.7386666666666661

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 72, 'a_size': 1728, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.08333333333333333, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9956958643122678, 'speedup_best_over_ref': 0.9956958643122678, 'xsmm_custom_avg': 5.738666666666666, 'xsmm_custom_best': 5.738666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.713966666666667, 'xsmm_reference_best': 5.713966666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 57600).

Output array: C (36, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 7.435967 ms

xsmm-reference Time (libxsmm): 7.435933 ms

xsmm-reference No. of CPU cycles: 7435933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 7.4359666666666673

xsmm-reference avg execution time: 7.4359666666666673

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1602989322 cleaned_data/example_mats/quad/p5/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 57600).

Output array: C (36, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 72

lda= 57600, ldb= 72, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 7.539500 ms

xsmm-custom Time (libxsmm): 7.539467 ms

xsmm-custom No. of CPU cycles: 7539466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 7.5395000000000003

xsmm-custom avg execution time: 7.5395000000000003

Freeing A

Freeing B

Freeing C

{'a_cols': 72, 'a_nonzero': 432, 'a_rows': 36, 'a_size': 2592, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9862678780644163, 'speedup_best_over_ref': 0.9862678780644163, 'xsmm_custom_avg': 7.5395, 'xsmm_custom_best': 7.5395, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 7.435966666666667, 'xsmm_reference_best': 7.435966666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 57600).

Output array: C (72, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 7.729033 ms

xsmm-reference Time (libxsmm): 7.729033 ms

xsmm-reference No. of CPU cycles: 7729033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 7.7290333333333336

xsmm-reference avg execution time: 7.7290333333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 2113266630 cleaned_data/example_mats/quad/p5/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 57600).

Output array: C (72, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 36

lda= 57600, ldb= 36, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 7.783333 ms

xsmm-custom Time (libxsmm): 7.783333 ms

xsmm-custom No. of CPU cycles: 7783333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 7.7833333333333332

xsmm-custom avg execution time: 7.7833333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 432, 'a_rows': 72, 'a_size': 2592, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9930235546038545, 'speedup_best_over_ref': 0.9930235546038545, 'xsmm_custom_avg': 7.783333333333333, 'xsmm_custom_best': 7.783333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 7.729033333333334, 'xsmm_reference_best': 7.729033333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 57600).

Output array: C (28, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.578300 ms

xsmm-reference Time (libxsmm): 4.578267 ms

xsmm-reference No. of CPU cycles: 4578266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.5782999999999996

xsmm-reference avg execution time: 4.5782999999999996

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 666493267 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 57600).

Output array: C (28, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 49

lda= 57600, ldb= 49, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.532333 ms

xsmm-custom Time (libxsmm): 4.532300 ms

xsmm-custom No. of CPU cycles: 4532300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.5323333333333329

xsmm-custom avg execution time: 4.5323333333333329

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 28, 'a_rows': 28, 'a_size': 1372, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0101419430756784, 'speedup_best_over_ref': 1.0101419430756784, 'xsmm_custom_avg': 4.532333333333333, 'xsmm_custom_best': 4.532333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.5783, 'xsmm_reference_best': 4.5783, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 57600).

Output array: C (49, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.482200 ms

xsmm-reference Time (libxsmm): 4.482200 ms

xsmm-reference No. of CPU cycles: 4482200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.4822000000000006

xsmm-reference avg execution time: 4.4822000000000006

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 202748301 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 57600).

Output array: C (49, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 28

lda= 57600, ldb= 28, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.515633 ms

xsmm-custom Time (libxsmm): 4.515633 ms

xsmm-custom No. of CPU cycles: 4515633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.5156333333333354

xsmm-custom avg execution time: 4.5156333333333354

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 49, 'a_size': 1372, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14285714285714285, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9925960920948701, 'speedup_best_over_ref': 0.9925960920948701, 'xsmm_custom_avg': 4.515633333333335, 'xsmm_custom_best': 4.515633333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.482200000000001, 'xsmm_reference_best': 4.482200000000001, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 57600).

Output array: C (98, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.781733 ms

xsmm-reference Time (libxsmm): 8.781733 ms

xsmm-reference No. of CPU cycles: 8781733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.7817333333333334

xsmm-reference avg execution time: 8.7817333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 814167287 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 57600).

Output array: C (98, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 28

lda= 57600, ldb= 28, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.743067 ms

xsmm-custom Time (libxsmm): 8.743067 ms

xsmm-custom No. of CPU cycles: 8743066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.7430666666666674

xsmm-custom avg execution time: 8.7430666666666674

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 98, 'a_size': 2744, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.07142857142857142, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0044225519649854, 'speedup_best_over_ref': 1.0044225519649854, 'xsmm_custom_avg': 8.743066666666667, 'xsmm_custom_best': 8.743066666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.781733333333333, 'xsmm_reference_best': 8.781733333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 57600).

Output array: C (49, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 13.397100 ms

xsmm-reference Time (libxsmm): 13.397100 ms

xsmm-reference No. of CPU cycles: 13397100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 13.3971

xsmm-reference avg execution time: 13.3971

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 603474395 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 57600).

Output array: C (49, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 98

lda= 57600, ldb= 98, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 13.403033 ms

xsmm-custom Time (libxsmm): 13.403000 ms

xsmm-custom No. of CPU cycles: 13403000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 13.403033333333333

xsmm-custom avg execution time: 13.403033333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 98, 'a_nonzero': 616, 'a_rows': 49, 'a_size': 4802, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1282798833819242, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9995573141403314, 'speedup_best_over_ref': 0.9995573141403314, 'xsmm_custom_avg': 13.403033333333333, 'xsmm_custom_best': 13.403033333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 13.3971, 'xsmm_reference_best': 13.3971, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 57600).

Output array: C (98, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 14.624967 ms

xsmm-reference Time (libxsmm): 14.624933 ms

xsmm-reference No. of CPU cycles: 14624933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 14.624966666666667

xsmm-reference avg execution time: 14.624966666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 554080589 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 57600).

Output array: C (98, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 49

lda= 57600, ldb= 49, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 14.611967 ms

xsmm-custom Time (libxsmm): 14.611933 ms

xsmm-custom No. of CPU cycles: 14611933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 14.611966666666666

xsmm-custom avg execution time: 14.611966666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 616, 'a_rows': 98, 'a_size': 4802, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1282798833819242, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0008896817448714, 'speedup_best_over_ref': 1.0008896817448714, 'xsmm_custom_avg': 14.611966666666666, 'xsmm_custom_best': 14.611966666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 14.624966666666667, 'xsmm_reference_best': 14.624966666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 57600).

Output array: C (28, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.517000 ms

xsmm-reference Time (libxsmm): 4.517000 ms

xsmm-reference No. of CPU cycles: 4517000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.5169999999999995

xsmm-reference avg execution time: 4.5169999999999995

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1030962700 cleaned_data/example_mats/quad/p6/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 57600).

Output array: C (28, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 49

lda= 57600, ldb= 49, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.565600 ms

xsmm-custom Time (libxsmm): 4.565567 ms

xsmm-custom No. of CPU cycles: 4565566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.5655999999999999

xsmm-custom avg execution time: 4.5655999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 196, 'a_rows': 28, 'a_size': 1372, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14285714285714285, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9893551778517609, 'speedup_best_over_ref': 0.9893551778517609, 'xsmm_custom_avg': 4.5656, 'xsmm_custom_best': 4.5656, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.5169999999999995, 'xsmm_reference_best': 4.5169999999999995, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 57600).

Output array: C (49, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.488367 ms

xsmm-reference Time (libxsmm): 4.488333 ms

xsmm-reference No. of CPU cycles: 4488333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.4883666666666668

xsmm-reference avg execution time: 4.4883666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 607248026 cleaned_data/example_mats/quad/p6/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 57600).

Output array: C (49, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 28

lda= 57600, ldb= 28, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.502000 ms

xsmm-custom Time (libxsmm): 4.502000 ms

xsmm-custom No. of CPU cycles: 4502000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.5019999999999998

xsmm-custom avg execution time: 4.5019999999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 49, 'a_size': 1372, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14285714285714285, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9969717162742485, 'speedup_best_over_ref': 0.9969717162742485, 'xsmm_custom_avg': 4.502, 'xsmm_custom_best': 4.502, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.488366666666667, 'xsmm_reference_best': 4.488366666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 57600).

Output array: C (98, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.701000 ms

xsmm-reference Time (libxsmm): 8.700967 ms

xsmm-reference No. of CPU cycles: 8700966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.7009999999999987

xsmm-reference avg execution time: 8.7009999999999987

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 936152712 cleaned_data/example_mats/quad/p6/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 57600).

Output array: C (98, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 28

lda= 57600, ldb= 28, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.874733 ms

xsmm-custom Time (libxsmm): 8.874600 ms

xsmm-custom No. of CPU cycles: 8874600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.8747333333333334

xsmm-custom avg execution time: 8.8747333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 98, 'a_size': 2744, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.07142857142857142, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9804238249412187, 'speedup_best_over_ref': 0.9804238249412187, 'xsmm_custom_avg': 8.874733333333333, 'xsmm_custom_best': 8.874733333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.700999999999999, 'xsmm_reference_best': 8.700999999999999, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 57600).

Output array: C (49, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 13.358567 ms

xsmm-reference Time (libxsmm): 13.358533 ms

xsmm-reference No. of CPU cycles: 13358533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 13.358566666666666

xsmm-reference avg execution time: 13.358566666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1777547493 cleaned_data/example_mats/quad/p6/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 57600).

Output array: C (49, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 98

lda= 57600, ldb= 98, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 13.374133 ms

xsmm-custom Time (libxsmm): 13.374133 ms

xsmm-custom No. of CPU cycles: 13374133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 13.374133333333333

xsmm-custom avg execution time: 13.374133333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 98, 'a_nonzero': 672, 'a_rows': 49, 'a_size': 4802, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.13994169096209913, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9988360616513469, 'speedup_best_over_ref': 0.9988360616513469, 'xsmm_custom_avg': 13.374133333333333, 'xsmm_custom_best': 13.374133333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 13.358566666666666, 'xsmm_reference_best': 13.358566666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 57600).

Output array: C (98, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 14.879133 ms

xsmm-reference Time (libxsmm): 14.878967 ms

xsmm-reference No. of CPU cycles: 14878966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 14.879133333333334

xsmm-reference avg execution time: 14.879133333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1889949000 cleaned_data/example_mats/quad/p6/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 57600).

Output array: C (98, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 49

lda= 57600, ldb= 49, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 14.719633 ms

xsmm-custom Time (libxsmm): 14.719600 ms

xsmm-custom No. of CPU cycles: 14719600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 14.719633333333336

xsmm-custom avg execution time: 14.719633333333336

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 672, 'a_rows': 98, 'a_size': 4802, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.13994169096209913, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0108358677412705, 'speedup_best_over_ref': 1.0108358677412705, 'xsmm_custom_avg': 14.719633333333336, 'xsmm_custom_best': 14.719633333333336, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 14.879133333333334, 'xsmm_reference_best': 14.879133333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m0.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 57600).

Output array: C (12, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.239267 ms

xsmm-reference Time (libxsmm): 0.239267 ms

xsmm-reference No. of CPU cycles: 239266

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.23926666666666666

xsmm-reference avg execution time: 0.23926666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 684701965 cleaned_data/example_mats/tet/p1/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m0.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 57600).

Output array: C (12, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 4

lda= 57600, ldb= 4, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.262967 ms

xsmm-custom Time (libxsmm): 0.262967 ms

xsmm-custom No. of CPU cycles: 262966

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.26296666666666668

xsmm-custom avg execution time: 0.26296666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 48, 'a_rows': 12, 'a_size': 48, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.909874508809735, 'speedup_best_over_ref': 0.909874508809735, 'xsmm_custom_avg': 0.2629666666666667, 'xsmm_custom_best': 0.2629666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.23926666666666666, 'xsmm_reference_best': 0.23926666666666666, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m3.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 57600).

Output array: C (4, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.192600 ms

xsmm-reference Time (libxsmm): 0.192600 ms

xsmm-reference No. of CPU cycles: 192600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.19259999999999999

xsmm-reference avg execution time: 0.19259999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 200121031 cleaned_data/example_mats/tet/p1/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m3.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 57600).

Output array: C (4, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 12

lda= 57600, ldb= 12, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.210633 ms

xsmm-custom Time (libxsmm): 0.210633 ms

xsmm-custom No. of CPU cycles: 210633

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.21063333333333334

xsmm-custom avg execution time: 0.21063333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 48, 'a_rows': 4, 'a_size': 48, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9143851875296723, 'speedup_best_over_ref': 0.9143851875296723, 'xsmm_custom_avg': 0.21063333333333334, 'xsmm_custom_best': 0.21063333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.1926, 'xsmm_reference_best': 0.1926, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m6.txt...

Read matrix has 12 rows and 12 columns.

Input arrays: A (12, 12), B (12, 57600).

Output array: C (12, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.432300 ms

xsmm-reference Time (libxsmm): 0.432300 ms

xsmm-reference No. of CPU cycles: 432300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.43229999999999996

xsmm-reference avg execution time: 0.43229999999999996

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 2041116396 cleaned_data/example_mats/tet/p1/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m6.txt...

Read matrix has 12 rows and 12 columns.

Input arrays: A (12, 12), B (12, 57600).

Output array: C (12, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 12

lda= 57600, ldb= 12, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.432167 ms

xsmm-custom Time (libxsmm): 0.432167 ms

xsmm-custom No. of CPU cycles: 432166

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.43216666666666664

xsmm-custom avg execution time: 0.43216666666666664

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 72, 'a_rows': 12, 'a_size': 144, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0003085229463942, 'speedup_best_over_ref': 1.0003085229463942, 'xsmm_custom_avg': 0.43216666666666664, 'xsmm_custom_best': 0.43216666666666664, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.43229999999999996, 'xsmm_reference_best': 0.43229999999999996, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m132.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 57600).

Output array: C (4, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.185867 ms

xsmm-reference Time (libxsmm): 0.185867 ms

xsmm-reference No. of CPU cycles: 185866

CPU clock speed (GHz): 0.999996

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.18586666666666665

xsmm-reference avg execution time: 0.18586666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 144828350 cleaned_data/example_mats/tet/p1/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m132.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 57600).

Output array: C (4, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 12

lda= 57600, ldb= 12, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.207900 ms

xsmm-custom Time (libxsmm): 0.207900 ms

xsmm-custom No. of CPU cycles: 207900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.2079

xsmm-custom avg execution time: 0.2079

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 24, 'a_rows': 4, 'a_size': 48, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.8940195606862272, 'speedup_best_over_ref': 0.8940195606862272, 'xsmm_custom_avg': 0.2079, 'xsmm_custom_best': 0.2079, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.18586666666666665, 'xsmm_reference_best': 0.18586666666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m460.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 57600).

Output array: C (12, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.237300 ms

xsmm-reference Time (libxsmm): 0.237300 ms

xsmm-reference No. of CPU cycles: 237300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.23729999999999998

xsmm-reference avg execution time: 0.23729999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 707421830 cleaned_data/example_mats/tet/p1/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m460.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 57600).

Output array: C (12, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 4

lda= 57600, ldb= 4, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.262967 ms

xsmm-custom Time (libxsmm): 0.262967 ms

xsmm-custom No. of CPU cycles: 262966

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.26296666666666668

xsmm-custom avg execution time: 0.26296666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 24, 'a_rows': 12, 'a_size': 48, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9023957409050576, 'speedup_best_over_ref': 0.9023957409050576, 'xsmm_custom_avg': 0.2629666666666667, 'xsmm_custom_best': 0.2629666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.23729999999999998, 'xsmm_reference_best': 0.23729999999999998, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m0.txt...

Read matrix has 24 rows and 10 columns.

Input arrays: A (24, 10), B (10, 57600).

Output array: C (24, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.761567 ms

xsmm-reference Time (libxsmm): 0.761567 ms

xsmm-reference No. of CPU cycles: 761566

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.76156666666666673

xsmm-reference avg execution time: 0.76156666666666673

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 99169065 cleaned_data/example_mats/tet/p2/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m0.txt...

Read matrix has 24 rows and 10 columns.

Input arrays: A (24, 10), B (10, 57600).

Output array: C (24, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 10

lda= 57600, ldb= 10, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.724633 ms

xsmm-custom Time (libxsmm): 0.724633 ms

xsmm-custom No. of CPU cycles: 724633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.72463333333333335

xsmm-custom avg execution time: 0.72463333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 240, 'a_rows': 24, 'a_size': 240, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.050968305809835, 'speedup_best_over_ref': 1.050968305809835, 'xsmm_custom_avg': 0.7246333333333334, 'xsmm_custom_best': 0.7246333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.7615666666666667, 'xsmm_reference_best': 0.7615666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m3.txt...

Read matrix has 10 rows and 24 columns.

Input arrays: A (10, 24), B (24, 57600).

Output array: C (10, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.743100 ms

xsmm-reference Time (libxsmm): 0.743100 ms

xsmm-reference No. of CPU cycles: 743100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.74309999999999998

xsmm-reference avg execution time: 0.74309999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 263716564 cleaned_data/example_mats/tet/p2/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m3.txt...

Read matrix has 10 rows and 24 columns.

Input arrays: A (10, 24), B (24, 57600).

Output array: C (10, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 24

lda= 57600, ldb= 24, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.754933 ms

xsmm-custom Time (libxsmm): 0.754933 ms

xsmm-custom No. of CPU cycles: 754933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.75493333333333335

xsmm-custom avg execution time: 0.75493333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 240, 'a_rows': 10, 'a_size': 240, 'a_unique': 28, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9843253267396679, 'speedup_best_over_ref': 0.9843253267396679, 'xsmm_custom_avg': 0.7549333333333333, 'xsmm_custom_best': 0.7549333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.7431, 'xsmm_reference_best': 0.7431, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m6.txt...

Read matrix has 30 rows and 24 columns.

Input arrays: A (30, 24), B (24, 57600).

Output array: C (30, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.446500 ms

xsmm-reference Time (libxsmm): 2.446500 ms

xsmm-reference No. of CPU cycles: 2446500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.4464999999999999

xsmm-reference avg execution time: 2.4464999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1218845663 cleaned_data/example_mats/tet/p2/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m6.txt...

Read matrix has 30 rows and 24 columns.

Input arrays: A (30, 24), B (24, 57600).

Output array: C (30, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 24

lda= 57600, ldb= 24, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.528933 ms

xsmm-custom Time (libxsmm): 2.528900 ms

xsmm-custom No. of CPU cycles: 2528900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.5289333333333333

xsmm-custom avg execution time: 2.5289333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 360, 'a_rows': 30, 'a_size': 720, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9674039120577845, 'speedup_best_over_ref': 0.9674039120577845, 'xsmm_custom_avg': 2.5289333333333333, 'xsmm_custom_best': 2.5289333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.4465, 'xsmm_reference_best': 2.4465, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m132.txt...

Read matrix has 10 rows and 30 columns.

Input arrays: A (10, 30), B (30, 57600).

Output array: C (10, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.964900 ms

xsmm-reference Time (libxsmm): 0.964900 ms

xsmm-reference No. of CPU cycles: 964900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.96489999999999998

xsmm-reference avg execution time: 0.96489999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 96130832 cleaned_data/example_mats/tet/p2/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m132.txt...

Read matrix has 10 rows and 30 columns.

Input arrays: A (10, 30), B (30, 57600).

Output array: C (10, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 30

lda= 57600, ldb= 30, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.969300 ms

xsmm-custom Time (libxsmm): 0.969300 ms

xsmm-custom No. of CPU cycles: 969300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.96930000000000005

xsmm-custom avg execution time: 0.96930000000000005

Freeing A

Freeing B

Freeing C

{'a_cols': 30, 'a_nonzero': 252, 'a_rows': 10, 'a_size': 300, 'a_unique': 23, 'alpha': 1.0, 'beta': 0.0, 'density': 0.84, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.995460641700196, 'speedup_best_over_ref': 0.995460641700196, 'xsmm_custom_avg': 0.9693, 'xsmm_custom_best': 0.9693, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.9649, 'xsmm_reference_best': 0.9649, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m460.txt...

Read matrix has 30 rows and 10 columns.

Input arrays: A (30, 10), B (10, 57600).

Output array: C (30, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.982300 ms

xsmm-reference Time (libxsmm): 0.982300 ms

xsmm-reference No. of CPU cycles: 982300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.98230000000000006

xsmm-reference avg execution time: 0.98230000000000006

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1417657252 cleaned_data/example_mats/tet/p2/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m460.txt...

Read matrix has 30 rows and 10 columns.

Input arrays: A (30, 10), B (10, 57600).

Output array: C (30, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 10

lda= 57600, ldb= 10, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.939267 ms

xsmm-custom Time (libxsmm): 0.939267 ms

xsmm-custom No. of CPU cycles: 939266

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.93926666666666669

xsmm-custom avg execution time: 0.93926666666666669

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 252, 'a_rows': 30, 'a_size': 300, 'a_unique': 23, 'alpha': 1.0, 'beta': 0.0, 'density': 0.84, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0458158847327703, 'speedup_best_over_ref': 1.0458158847327703, 'xsmm_custom_avg': 0.9392666666666667, 'xsmm_custom_best': 0.9392666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.9823000000000001, 'xsmm_reference_best': 0.9823000000000001, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m0.txt...

Read matrix has 40 rows and 20 columns.

Input arrays: A (40, 20), B (20, 57600).

Output array: C (40, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.738000 ms

xsmm-reference Time (libxsmm): 2.738000 ms

xsmm-reference No. of CPU cycles: 2738000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.738

xsmm-reference avg execution time: 2.738

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1394940553 cleaned_data/example_mats/tet/p3/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m0.txt...

Read matrix has 40 rows and 20 columns.

Input arrays: A (40, 20), B (20, 57600).

Output array: C (40, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 40, k= 20

lda= 57600, ldb= 20, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 40

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.878167 ms

xsmm-custom Time (libxsmm): 2.878133 ms

xsmm-custom No. of CPU cycles: 2878133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.8781666666666665

xsmm-custom avg execution time: 2.8781666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 800, 'a_rows': 40, 'a_size': 800, 'a_unique': 40, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9513000173721698, 'speedup_best_over_ref': 0.9513000173721698, 'xsmm_custom_avg': 2.8781666666666665, 'xsmm_custom_best': 2.8781666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.738, 'xsmm_reference_best': 2.738, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m3.txt...

Read matrix has 20 rows and 40 columns.

Input arrays: A (20, 40), B (40, 57600).

Output array: C (20, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.767833 ms

xsmm-reference Time (libxsmm): 2.767833 ms

xsmm-reference No. of CPU cycles: 2767833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.7678333333333334

xsmm-reference avg execution time: 2.7678333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1402724802 cleaned_data/example_mats/tet/p3/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m3.txt...

Read matrix has 20 rows and 40 columns.

Input arrays: A (20, 40), B (40, 57600).

Output array: C (20, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 40

lda= 57600, ldb= 40, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.822533 ms

xsmm-custom Time (libxsmm): 2.822533 ms

xsmm-custom No. of CPU cycles: 2822533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.8225333333333333

xsmm-custom avg execution time: 2.8225333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 40, 'a_nonzero': 800, 'a_rows': 20, 'a_size': 800, 'a_unique': 80, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9806202465869904, 'speedup_best_over_ref': 0.9806202465869904, 'xsmm_custom_avg': 2.8225333333333333, 'xsmm_custom_best': 2.8225333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.7678333333333334, 'xsmm_reference_best': 2.7678333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m6.txt...

Read matrix has 60 rows and 40 columns.

Input arrays: A (60, 40), B (40, 57600).

Output array: C (60, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 7.185933 ms

xsmm-reference Time (libxsmm): 7.185933 ms

xsmm-reference No. of CPU cycles: 7185933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 7.1859333333333337

xsmm-reference avg execution time: 7.1859333333333337

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1773180518 cleaned_data/example_mats/tet/p3/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m6.txt...

Read matrix has 60 rows and 40 columns.

Input arrays: A (60, 40), B (40, 57600).

Output array: C (60, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 60, k= 40

lda= 57600, ldb= 40, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 7.225900 ms

xsmm-custom Time (libxsmm): 7.225900 ms

xsmm-custom No. of CPU cycles: 7225900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 7.2258999999999993

xsmm-custom avg execution time: 7.2258999999999993

Freeing A

Freeing B

Freeing C

{'a_cols': 40, 'a_nonzero': 1200, 'a_rows': 60, 'a_size': 2400, 'a_unique': 40, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9944689704166034, 'speedup_best_over_ref': 0.9944689704166034, 'xsmm_custom_avg': 7.225899999999999, 'xsmm_custom_best': 7.225899999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 7.185933333333334, 'xsmm_reference_best': 7.185933333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m132.txt...

Read matrix has 20 rows and 60 columns.

Input arrays: A (20, 60), B (60, 57600).

Output array: C (20, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.114733 ms

xsmm-reference Time (libxsmm): 4.114700 ms

xsmm-reference No. of CPU cycles: 4114700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.1147333333333336

xsmm-reference avg execution time: 4.1147333333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 877728064 cleaned_data/example_mats/tet/p3/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m132.txt...

Read matrix has 20 rows and 60 columns.

Input arrays: A (20, 60), B (60, 57600).

Output array: C (20, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 60

lda= 57600, ldb= 60, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.123100 ms

xsmm-custom Time (libxsmm): 4.123067 ms

xsmm-custom No. of CPU cycles: 4123066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.1231

xsmm-custom avg execution time: 4.1231

Freeing A

Freeing B

Freeing C

{'a_cols': 60, 'a_nonzero': 1092, 'a_rows': 20, 'a_size': 1200, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 0.91, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9979707825018392, 'speedup_best_over_ref': 0.9979707825018392, 'xsmm_custom_avg': 4.1231, 'xsmm_custom_best': 4.1231, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.114733333333334, 'xsmm_reference_best': 4.114733333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m460.txt...

Read matrix has 60 rows and 20 columns.

Input arrays: A (60, 20), B (20, 57600).

Output array: C (60, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.089833 ms

xsmm-reference Time (libxsmm): 4.089833 ms

xsmm-reference No. of CPU cycles: 4089833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.089833333333333

xsmm-reference avg execution time: 4.089833333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1204961224 cleaned_data/example_mats/tet/p3/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m460.txt...

Read matrix has 60 rows and 20 columns.

Input arrays: A (60, 20), B (20, 57600).

Output array: C (60, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 60, k= 20

lda= 57600, ldb= 20, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.098467 ms

xsmm-custom Time (libxsmm): 4.098467 ms

xsmm-custom No. of CPU cycles: 4098466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.098466666666666

xsmm-custom avg execution time: 4.098466666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 1092, 'a_rows': 60, 'a_size': 1200, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 0.91, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9978935211542529, 'speedup_best_over_ref': 0.9978935211542529, 'xsmm_custom_avg': 4.098466666666666, 'xsmm_custom_best': 4.098466666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.089833333333333, 'xsmm_reference_best': 4.089833333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m0.txt...

Read matrix has 60 rows and 35 columns.

Input arrays: A (60, 35), B (35, 57600).

Output array: C (60, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.407433 ms

xsmm-reference Time (libxsmm): 6.407433 ms

xsmm-reference No. of CPU cycles: 6407433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.4074333333333335

xsmm-reference avg execution time: 6.4074333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 858461411 cleaned_data/example_mats/tet/p4/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m0.txt...

Read matrix has 60 rows and 35 columns.

Input arrays: A (60, 35), B (35, 57600).

Output array: C (60, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 60, k= 35

lda= 57600, ldb= 35, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.352700 ms

xsmm-custom Time (libxsmm): 6.352600 ms

xsmm-custom No. of CPU cycles: 6352600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.3526999999999996

xsmm-custom avg execution time: 6.3526999999999996

Freeing A

Freeing B

Freeing C

{'a_cols': 35, 'a_nonzero': 2100, 'a_rows': 60, 'a_size': 2100, 'a_unique': 101, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.008615759178512, 'speedup_best_over_ref': 1.008615759178512, 'xsmm_custom_avg': 6.3527, 'xsmm_custom_best': 6.3527, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.4074333333333335, 'xsmm_reference_best': 6.4074333333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m3.txt...

Read matrix has 35 rows and 60 columns.

Input arrays: A (35, 60), B (60, 57600).

Output array: C (35, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.337667 ms

xsmm-reference Time (libxsmm): 6.337633 ms

xsmm-reference No. of CPU cycles: 6337633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.3376666666666663

xsmm-reference avg execution time: 6.3376666666666663

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 484802598 cleaned_data/example_mats/tet/p4/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m3.txt...

Read matrix has 35 rows and 60 columns.

Input arrays: A (35, 60), B (60, 57600).

Output array: C (35, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 35, k= 60

lda= 57600, ldb= 60, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.356900 ms

xsmm-custom Time (libxsmm): 6.356867 ms

xsmm-custom No. of CPU cycles: 6356866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.3568999999999996

xsmm-custom avg execution time: 6.3568999999999996

Freeing A

Freeing B

Freeing C

{'a_cols': 60, 'a_nonzero': 2100, 'a_rows': 35, 'a_size': 2100, 'a_unique': 202, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9969744162511077, 'speedup_best_over_ref': 0.9969744162511077, 'xsmm_custom_avg': 6.3568999999999996, 'xsmm_custom_best': 6.3568999999999996, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.337666666666666, 'xsmm_reference_best': 6.337666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m6.txt...

Read matrix has 105 rows and 60 columns.

Input arrays: A (105, 60), B (60, 57600).

Output array: C (105, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 19.054367 ms

xsmm-reference Time (libxsmm): 19.054367 ms

xsmm-reference No. of CPU cycles: 19054366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 19.054366666666667

xsmm-reference avg execution time: 19.054366666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1351781462 cleaned_data/example_mats/tet/p4/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m6.txt...

Read matrix has 105 rows and 60 columns.

Input arrays: A (105, 60), B (60, 57600).

Output array: C (105, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 105, k= 60

lda= 57600, ldb= 60, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 19.474833 ms

xsmm-custom Time (libxsmm): 19.474800 ms

xsmm-custom No. of CPU cycles: 19474800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 19.474833333333333

xsmm-custom avg execution time: 19.474833333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 60, 'a_nonzero': 3150, 'a_rows': 105, 'a_size': 6300, 'a_unique': 101, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9784097424881685, 'speedup_best_over_ref': 0.9784097424881685, 'xsmm_custom_avg': 19.474833333333333, 'xsmm_custom_best': 19.474833333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 19.054366666666667, 'xsmm_reference_best': 19.054366666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m132.txt...

Read matrix has 35 rows and 105 columns.

Input arrays: A (35, 105), B (105, 57600).

Output array: C (35, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 10.160633 ms

xsmm-reference Time (libxsmm): 10.160600 ms

xsmm-reference No. of CPU cycles: 10160600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 10.160633333333333

xsmm-reference avg execution time: 10.160633333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 588485371 cleaned_data/example_mats/tet/p4/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m132.txt...

Read matrix has 35 rows and 105 columns.

Input arrays: A (35, 105), B (105, 57600).

Output array: C (35, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 35, k= 105

lda= 57600, ldb= 105, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 10.133000 ms

xsmm-custom Time (libxsmm): 10.132967 ms

xsmm-custom No. of CPU cycles: 10132966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 10.133000000000001

xsmm-custom avg execution time: 10.133000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 105, 'a_nonzero': 3432, 'a_rows': 35, 'a_size': 3675, 'a_unique': 304, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9338775510204081, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.002727063390243, 'speedup_best_over_ref': 1.002727063390243, 'xsmm_custom_avg': 10.133000000000001, 'xsmm_custom_best': 10.133000000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 10.160633333333333, 'xsmm_reference_best': 10.160633333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m460.txt...

Read matrix has 105 rows and 35 columns.

Input arrays: A (105, 35), B (35, 57600).

Output array: C (105, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 11.166833 ms

xsmm-reference Time (libxsmm): 11.166833 ms

xsmm-reference No. of CPU cycles: 11166833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 11.166833333333333

xsmm-reference avg execution time: 11.166833333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1788890820 cleaned_data/example_mats/tet/p4/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m460.txt...

Read matrix has 105 rows and 35 columns.

Input arrays: A (105, 35), B (35, 57600).

Output array: C (105, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 105, k= 35

lda= 57600, ldb= 35, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 11.128500 ms

xsmm-custom Time (libxsmm): 11.128500 ms

xsmm-custom No. of CPU cycles: 11128500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 11.128500000000001

xsmm-custom avg execution time: 11.128500000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 35, 'a_nonzero': 3432, 'a_rows': 105, 'a_size': 3675, 'a_unique': 304, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9338775510204081, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.003444609186623, 'speedup_best_over_ref': 1.003444609186623, 'xsmm_custom_avg': 11.1285, 'xsmm_custom_best': 11.1285, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 11.166833333333333, 'xsmm_reference_best': 11.166833333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m0.txt...

Read matrix has 84 rows and 56 columns.

Input arrays: A (84, 56), B (56, 57600).

Output array: C (84, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 14.110300 ms

xsmm-reference Time (libxsmm): 14.110267 ms

xsmm-reference No. of CPU cycles: 14110266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 14.110299999999999

xsmm-reference avg execution time: 14.110299999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1850081701 cleaned_data/example_mats/tet/p5/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m0.txt...

Read matrix has 84 rows and 56 columns.

Input arrays: A (84, 56), B (56, 57600).

Output array: C (84, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 84, k= 56

lda= 57600, ldb= 56, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 14.070067 ms

xsmm-custom Time (libxsmm): 14.070067 ms

xsmm-custom No. of CPU cycles: 14070066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 14.070066666666666

xsmm-custom avg execution time: 14.070066666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 56, 'a_nonzero': 4704, 'a_rows': 84, 'a_size': 4704, 'a_unique': 214, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.002859498415075, 'speedup_best_over_ref': 1.002859498415075, 'xsmm_custom_avg': 14.070066666666666, 'xsmm_custom_best': 14.070066666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 14.110299999999999, 'xsmm_reference_best': 14.110299999999999, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m3.txt...

Read matrix has 56 rows and 84 columns.

Input arrays: A (56, 84), B (84, 57600).

Output array: C (56, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 13.480067 ms

xsmm-reference Time (libxsmm): 13.480033 ms

xsmm-reference No. of CPU cycles: 13480033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 13.480066666666668

xsmm-reference avg execution time: 13.480066666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 349669343 cleaned_data/example_mats/tet/p5/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m3.txt...

Read matrix has 56 rows and 84 columns.

Input arrays: A (56, 84), B (84, 57600).

Output array: C (56, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 84

lda= 57600, ldb= 84, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 13.506800 ms

xsmm-custom Time (libxsmm): 13.506800 ms

xsmm-custom No. of CPU cycles: 13506800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 13.5068

xsmm-custom avg execution time: 13.5068

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 4704, 'a_rows': 56, 'a_size': 4704, 'a_unique': 428, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9980207500419542, 'speedup_best_over_ref': 0.9980207500419542, 'xsmm_custom_avg': 13.5068, 'xsmm_custom_best': 13.5068, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 13.480066666666668, 'xsmm_reference_best': 13.480066666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m6.txt...

Read matrix has 168 rows and 84 columns.

Input arrays: A (168, 84), B (84, 57600).

Output array: C (168, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 38.443800 ms

xsmm-reference Time (libxsmm): 38.443767 ms

xsmm-reference No. of CPU cycles: 38443766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 38.443800000000003

xsmm-reference avg execution time: 38.443800000000003

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 245033372 cleaned_data/example_mats/tet/p5/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m6.txt...

Read matrix has 168 rows and 84 columns.

Input arrays: A (168, 84), B (84, 57600).

Output array: C (168, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 168, k= 84

lda= 57600, ldb= 84, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 168

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 38.522400 ms

xsmm-custom Time (libxsmm): 38.522367 ms

xsmm-custom No. of CPU cycles: 38522366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 38.522399999999998

xsmm-custom avg execution time: 38.522399999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 7056, 'a_rows': 168, 'a_size': 14112, 'a_unique': 214, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9979596286835712, 'speedup_best_over_ref': 0.9979596286835712, 'xsmm_custom_avg': 38.5224, 'xsmm_custom_best': 38.5224, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 38.4438, 'xsmm_reference_best': 38.4438, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m132.txt...

Read matrix has 56 rows and 168 columns.

Input arrays: A (56, 168), B (168, 57600).

Output array: C (56, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 26.541067 ms

xsmm-reference Time (libxsmm): 26.541033 ms

xsmm-reference No. of CPU cycles: 26541033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 26.541066666666666

xsmm-reference avg execution time: 26.541066666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1689083878 cleaned_data/example_mats/tet/p5/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m132.txt...

Read matrix has 56 rows and 168 columns.

Input arrays: A (56, 168), B (168, 57600).

Output array: C (56, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 168

lda= 57600, ldb= 168, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 26.240633 ms

xsmm-custom Time (libxsmm): 26.240633 ms

xsmm-custom No. of CPU cycles: 26240633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 26.240633333333335

xsmm-custom avg execution time: 26.240633333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 168, 'a_nonzero': 8976, 'a_rows': 56, 'a_size': 9408, 'a_unique': 784, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9540816326530612, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.011449164717823, 'speedup_best_over_ref': 1.011449164717823, 'xsmm_custom_avg': 26.240633333333335, 'xsmm_custom_best': 26.240633333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 26.541066666666666, 'xsmm_reference_best': 26.541066666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m460.txt...

Read matrix has 168 rows and 56 columns.

Input arrays: A (168, 56), B (56, 57600).

Output array: C (168, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 28.332000 ms

xsmm-reference Time (libxsmm): 28.332000 ms

xsmm-reference No. of CPU cycles: 28332000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 28.332000000000001

xsmm-reference avg execution time: 28.332000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1121574 cleaned_data/example_mats/tet/p5/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m460.txt...

Read matrix has 168 rows and 56 columns.

Input arrays: A (168, 56), B (56, 57600).

Output array: C (168, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 168, k= 56

lda= 57600, ldb= 56, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 168

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 28.695000 ms

xsmm-custom Time (libxsmm): 28.695000 ms

xsmm-custom No. of CPU cycles: 28695000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 28.695

xsmm-custom avg execution time: 28.695

Freeing A

Freeing B

Freeing C

{'a_cols': 56, 'a_nonzero': 8976, 'a_rows': 168, 'a_size': 9408, 'a_unique': 784, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9540816326530612, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9873497124934658, 'speedup_best_over_ref': 0.9873497124934658, 'xsmm_custom_avg': 28.695, 'xsmm_custom_best': 28.695, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 28.332, 'xsmm_reference_best': 28.332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m0.txt...

Read matrix has 112 rows and 84 columns.

Input arrays: A (112, 84), B (84, 57600).

Output array: C (112, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 26.239733 ms

xsmm-reference Time (libxsmm): 26.239700 ms

xsmm-reference No. of CPU cycles: 26239700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 26.239733333333334

xsmm-reference avg execution time: 26.239733333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 309298736 cleaned_data/example_mats/tet/p6/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m0.txt...

Read matrix has 112 rows and 84 columns.

Input arrays: A (112, 84), B (84, 57600).

Output array: C (112, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 112, k= 84

lda= 57600, ldb= 84, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 112

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 26.044667 ms

xsmm-custom Time (libxsmm): 26.044667 ms

xsmm-custom No. of CPU cycles: 26044666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 26.044666666666668

xsmm-custom avg execution time: 26.044666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 9408, 'a_rows': 112, 'a_size': 9408, 'a_unique': 425, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.007489697186884, 'speedup_best_over_ref': 1.007489697186884, 'xsmm_custom_avg': 26.044666666666668, 'xsmm_custom_best': 26.044666666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 26.239733333333334, 'xsmm_reference_best': 26.239733333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m3.txt...

Read matrix has 84 rows and 112 columns.

Input arrays: A (84, 112), B (112, 57600).

Output array: C (84, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 25.592500 ms

xsmm-reference Time (libxsmm): 25.592467 ms

xsmm-reference No. of CPU cycles: 25592466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 25.592499999999998

xsmm-reference avg execution time: 25.592499999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1219326194 cleaned_data/example_mats/tet/p6/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m3.txt...

Read matrix has 84 rows and 112 columns.

Input arrays: A (84, 112), B (112, 57600).

Output array: C (84, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 84, k= 112

lda= 57600, ldb= 112, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 25.194933 ms

xsmm-custom Time (libxsmm): 25.194900 ms

xsmm-custom No. of CPU cycles: 25194900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 25.194933333333331

xsmm-custom avg execution time: 25.194933333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 112, 'a_nonzero': 9408, 'a_rows': 84, 'a_size': 9408, 'a_unique': 850, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0157796276500037, 'speedup_best_over_ref': 1.0157796276500037, 'xsmm_custom_avg': 25.19493333333333, 'xsmm_custom_best': 25.19493333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 25.592499999999998, 'xsmm_reference_best': 25.592499999999998, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m6.txt...

Read matrix has 252 rows and 112 columns.

Input arrays: A (252, 112), B (112, 57600).

Output array: C (252, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 77.582067 ms

xsmm-reference Time (libxsmm): 77.582100 ms

xsmm-reference No. of CPU cycles: 77582100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 77.582066666666663

xsmm-reference avg execution time: 77.582066666666663

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1178130582 cleaned_data/example_mats/tet/p6/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m6.txt...

Read matrix has 252 rows and 112 columns.

Input arrays: A (252, 112), B (112, 57600).

Output array: C (252, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 252, k= 112

lda= 57600, ldb= 112, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 77.743000 ms

xsmm-custom Time (libxsmm): 77.743000 ms

xsmm-custom No. of CPU cycles: 77743000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 77.742999999999995

xsmm-custom avg execution time: 77.742999999999995

Freeing A

Freeing B

Freeing C

{'a_cols': 112, 'a_nonzero': 14112, 'a_rows': 252, 'a_size': 28224, 'a_unique': 425, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9979299315265254, 'speedup_best_over_ref': 0.9979299315265254, 'xsmm_custom_avg': 77.743, 'xsmm_custom_best': 77.743, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 77.58206666666666, 'xsmm_reference_best': 77.58206666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m132.txt...

Read matrix has 84 rows and 252 columns.

Input arrays: A (84, 252), B (252, 57600).

Output array: C (84, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 68.658033 ms

xsmm-reference Time (libxsmm): 68.658033 ms

xsmm-reference No. of CPU cycles: 68658033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 68.658033333333336

xsmm-reference avg execution time: 68.658033333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1532802247 cleaned_data/example_mats/tet/p6/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m132.txt...

Read matrix has 84 rows and 252 columns.

Input arrays: A (84, 252), B (252, 57600).

Output array: C (84, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 84, k= 252

lda= 57600, ldb= 252, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 67.517233 ms

xsmm-custom Time (libxsmm): 67.517200 ms

xsmm-custom No. of CPU cycles: 67517200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 67.517233333333337

xsmm-custom avg execution time: 67.517233333333337

Freeing A

Freeing B

Freeing C

{'a_cols': 252, 'a_nonzero': 20400, 'a_rows': 84, 'a_size': 21168, 'a_unique': 1760, 'alpha': 1.0, 'beta': 0.0, 'density': 0.963718820861678, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0168964269369252, 'speedup_best_over_ref': 1.0168964269369252, 'xsmm_custom_avg': 67.51723333333334, 'xsmm_custom_best': 67.51723333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 68.65803333333334, 'xsmm_reference_best': 68.65803333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m460.txt...

Read matrix has 252 rows and 84 columns.

Input arrays: A (252, 84), B (84, 57600).

Output array: C (252, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 60.123200 ms

xsmm-reference Time (libxsmm): 60.123167 ms

xsmm-reference No. of CPU cycles: 60123166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 60.123199999999997

xsmm-reference avg execution time: 60.123199999999997

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1681864755 cleaned_data/example_mats/tet/p6/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m460.txt...

Read matrix has 252 rows and 84 columns.

Input arrays: A (252, 84), B (84, 57600).

Output array: C (252, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 252, k= 84

lda= 57600, ldb= 84, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 59.961233 ms

xsmm-custom Time (libxsmm): 59.961233 ms

xsmm-custom No. of CPU cycles: 59961233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 59.961233333333332

xsmm-custom avg execution time: 59.961233333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 20400, 'a_rows': 252, 'a_size': 21168, 'a_unique': 1760, 'alpha': 1.0, 'beta': 0.0, 'density': 0.963718820861678, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0027011897131313, 'speedup_best_over_ref': 1.0027011897131313, 'xsmm_custom_avg': 59.96123333333333, 'xsmm_custom_best': 59.96123333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 60.1232, 'xsmm_reference_best': 60.1232, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m0.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 57600).

Output array: C (6, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.117633 ms

xsmm-reference Time (libxsmm): 0.117633 ms

xsmm-reference No. of CPU cycles: 117633

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.11763333333333333

xsmm-reference avg execution time: 0.11763333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 57955104 cleaned_data/example_mats/tri/p1/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m0.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 57600).

Output array: C (6, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 3

lda= 57600, ldb= 3, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.137567 ms

xsmm-custom Time (libxsmm): 0.137567 ms

xsmm-custom No. of CPU cycles: 137566

CPU clock speed (GHz): 0.999995

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.13756666666666667

xsmm-custom avg execution time: 0.13756666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 3, 'a_nonzero': 18, 'a_rows': 6, 'a_size': 18, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.8551005573055488, 'speedup_best_over_ref': 0.8551005573055488, 'xsmm_custom_avg': 0.13756666666666667, 'xsmm_custom_best': 0.13756666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.11763333333333333, 'xsmm_reference_best': 0.11763333333333333, 'xsmm_reference_cpu_freq': 0.999995, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m3.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 57600).

Output array: C (3, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.104367 ms

xsmm-reference Time (libxsmm): 0.104367 ms

xsmm-reference No. of CPU cycles: 104366

CPU clock speed (GHz): 0.999994

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.10436666666666666

xsmm-reference avg execution time: 0.10436666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 687988423 cleaned_data/example_mats/tri/p1/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m3.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 57600).

Output array: C (3, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 3, k= 6

lda= 57600, ldb= 6, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.124767 ms

xsmm-custom Time (libxsmm): 0.124767 ms

xsmm-custom No. of CPU cycles: 124766

CPU clock speed (GHz): 0.999995

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.12476666666666666

xsmm-custom avg execution time: 0.12476666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 18, 'a_rows': 3, 'a_size': 18, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.8364947902751804, 'speedup_best_over_ref': 0.8364947902751804, 'xsmm_custom_avg': 0.12476666666666666, 'xsmm_custom_best': 0.12476666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.10436666666666666, 'xsmm_reference_best': 0.10436666666666666, 'xsmm_reference_cpu_freq': 0.999995, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m6.txt...

Read matrix has 6 rows and 6 columns.

Input arrays: A (6, 6), B (6, 57600).

Output array: C (6, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.163733 ms

xsmm-reference Time (libxsmm): 0.163733 ms

xsmm-reference No. of CPU cycles: 163733

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.16373333333333334

xsmm-reference avg execution time: 0.16373333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 427608073 cleaned_data/example_mats/tri/p1/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m6.txt...

Read matrix has 6 rows and 6 columns.

Input arrays: A (6, 6), B (6, 57600).

Output array: C (6, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 6

lda= 57600, ldb= 6, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.182933 ms

xsmm-custom Time (libxsmm): 0.182933 ms

xsmm-custom No. of CPU cycles: 182933

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.18293333333333334

xsmm-custom avg execution time: 0.18293333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 24, 'a_rows': 6, 'a_size': 36, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.8950437317784257, 'speedup_best_over_ref': 0.8950437317784257, 'xsmm_custom_avg': 0.18293333333333334, 'xsmm_custom_best': 0.18293333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.16373333333333334, 'xsmm_reference_best': 0.16373333333333334, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m132.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 57600).

Output array: C (3, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.111667 ms

xsmm-reference Time (libxsmm): 0.111667 ms

xsmm-reference No. of CPU cycles: 111666

CPU clock speed (GHz): 0.999994

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.11166666666666666

xsmm-reference avg execution time: 0.11166666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 939811033 cleaned_data/example_mats/tri/p1/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m132.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 57600).

Output array: C (3, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 3, k= 6

lda= 57600, ldb= 6, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.143767 ms

xsmm-custom Time (libxsmm): 0.143767 ms

xsmm-custom No. of CPU cycles: 143766

CPU clock speed (GHz): 0.999995

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.14376666666666665

xsmm-custom avg execution time: 0.14376666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 12, 'a_rows': 3, 'a_size': 18, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.7767215395316486, 'speedup_best_over_ref': 0.7767215395316486, 'xsmm_custom_avg': 0.14376666666666665, 'xsmm_custom_best': 0.14376666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.11166666666666666, 'xsmm_reference_best': 0.11166666666666666, 'xsmm_reference_cpu_freq': 0.999995, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m460.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 57600).

Output array: C (6, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.117600 ms

xsmm-reference Time (libxsmm): 0.117600 ms

xsmm-reference No. of CPU cycles: 117600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.1176

xsmm-reference avg execution time: 0.1176

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 2071079478 cleaned_data/example_mats/tri/p1/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m460.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 57600).

Output array: C (6, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 3

lda= 57600, ldb= 3, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.147633 ms

xsmm-custom Time (libxsmm): 0.147633 ms

xsmm-custom No. of CPU cycles: 147633

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.14763333333333334

xsmm-custom avg execution time: 0.14763333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 3, 'a_nonzero': 12, 'a_rows': 6, 'a_size': 18, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.7965680740573492, 'speedup_best_over_ref': 0.7965680740573492, 'xsmm_custom_avg': 0.14763333333333334, 'xsmm_custom_best': 0.14763333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.1176, 'xsmm_reference_best': 0.1176, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m0.txt...

Read matrix has 9 rows and 6 columns.

Input arrays: A (9, 6), B (6, 57600).

Output array: C (9, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.239000 ms

xsmm-reference Time (libxsmm): 0.238967 ms

xsmm-reference No. of CPU cycles: 238966

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.23899999999999999

xsmm-reference avg execution time: 0.23899999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 455311492 cleaned_data/example_mats/tri/p2/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m0.txt...

Read matrix has 9 rows and 6 columns.

Input arrays: A (9, 6), B (6, 57600).

Output array: C (9, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 6

lda= 57600, ldb= 6, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.260067 ms

xsmm-custom Time (libxsmm): 0.260067 ms

xsmm-custom No. of CPU cycles: 260066

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.26006666666666667

xsmm-custom avg execution time: 0.26006666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 54, 'a_rows': 9, 'a_size': 54, 'a_unique': 10, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9189951294539861, 'speedup_best_over_ref': 0.9189951294539861, 'xsmm_custom_avg': 0.26006666666666667, 'xsmm_custom_best': 0.26006666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.239, 'xsmm_reference_best': 0.239, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m3.txt...

Read matrix has 6 rows and 9 columns.

Input arrays: A (6, 9), B (9, 57600).

Output array: C (6, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.210333 ms

xsmm-reference Time (libxsmm): 0.210333 ms

xsmm-reference No. of CPU cycles: 210333

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.21033333333333332

xsmm-reference avg execution time: 0.21033333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1568272555 cleaned_data/example_mats/tri/p2/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m3.txt...

Read matrix has 6 rows and 9 columns.

Input arrays: A (6, 9), B (9, 57600).

Output array: C (6, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 9

lda= 57600, ldb= 9, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.238700 ms

xsmm-custom Time (libxsmm): 0.238700 ms

xsmm-custom No. of CPU cycles: 238700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.2387

xsmm-custom avg execution time: 0.2387

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 54, 'a_rows': 6, 'a_size': 54, 'a_unique': 20, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.8811618489037844, 'speedup_best_over_ref': 0.8811618489037844, 'xsmm_custom_avg': 0.2387, 'xsmm_custom_best': 0.2387, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.21033333333333332, 'xsmm_reference_best': 0.21033333333333332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m6.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 57600).

Output array: C (12, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.366800 ms

xsmm-reference Time (libxsmm): 0.366800 ms

xsmm-reference No. of CPU cycles: 366800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.36679999999999996

xsmm-reference avg execution time: 0.36679999999999996

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1171724374 cleaned_data/example_mats/tri/p2/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m6.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 57600).

Output array: C (12, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 9

lda= 57600, ldb= 9, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.371133 ms

xsmm-custom Time (libxsmm): 0.371133 ms

xsmm-custom No. of CPU cycles: 371133

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.37113333333333337

xsmm-custom avg execution time: 0.37113333333333337

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 72, 'a_rows': 12, 'a_size': 108, 'a_unique': 10, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9883240524519488, 'speedup_best_over_ref': 0.9883240524519488, 'xsmm_custom_avg': 0.37113333333333337, 'xsmm_custom_best': 0.37113333333333337, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.36679999999999996, 'xsmm_reference_best': 0.36679999999999996, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m132.txt...

Read matrix has 6 rows and 12 columns.

Input arrays: A (6, 12), B (12, 57600).

Output array: C (6, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.261033 ms

xsmm-reference Time (libxsmm): 0.261033 ms

xsmm-reference No. of CPU cycles: 261033

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.26103333333333334

xsmm-reference avg execution time: 0.26103333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 17874983 cleaned_data/example_mats/tri/p2/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m132.txt...

Read matrix has 6 rows and 12 columns.

Input arrays: A (6, 12), B (12, 57600).

Output array: C (6, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 12

lda= 57600, ldb= 12, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.280200 ms

xsmm-custom Time (libxsmm): 0.280167 ms

xsmm-custom No. of CPU cycles: 280166

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.2802

xsmm-custom avg execution time: 0.2802

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 64, 'a_rows': 6, 'a_size': 72, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 0.8888888888888888, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9315964787056864, 'speedup_best_over_ref': 0.9315964787056864, 'xsmm_custom_avg': 0.2802, 'xsmm_custom_best': 0.2802, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.26103333333333334, 'xsmm_reference_best': 0.26103333333333334, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m460.txt...

Read matrix has 12 rows and 6 columns.

Input arrays: A (12, 6), B (6, 57600).

Output array: C (12, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.294733 ms

xsmm-reference Time (libxsmm): 0.294767 ms

xsmm-reference No. of CPU cycles: 294766

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.29473333333333335

xsmm-reference avg execution time: 0.29473333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 434290044 cleaned_data/example_mats/tri/p2/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m460.txt...

Read matrix has 12 rows and 6 columns.

Input arrays: A (12, 6), B (6, 57600).

Output array: C (12, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 6

lda= 57600, ldb= 6, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.313133 ms

xsmm-custom Time (libxsmm): 0.313133 ms

xsmm-custom No. of CPU cycles: 313133

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.31313333333333332

xsmm-custom avg execution time: 0.31313333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 64, 'a_rows': 12, 'a_size': 72, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 0.8888888888888888, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9412390887800725, 'speedup_best_over_ref': 0.9412390887800725, 'xsmm_custom_avg': 0.3131333333333333, 'xsmm_custom_best': 0.3131333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.29473333333333335, 'xsmm_reference_best': 0.29473333333333335, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m0.txt...

Read matrix has 12 rows and 10 columns.

Input arrays: A (12, 10), B (10, 57600).

Output array: C (12, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.397067 ms

xsmm-reference Time (libxsmm): 0.397067 ms

xsmm-reference No. of CPU cycles: 397066

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.39706666666666668

xsmm-reference avg execution time: 0.39706666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1982643644 cleaned_data/example_mats/tri/p3/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m0.txt...

Read matrix has 12 rows and 10 columns.

Input arrays: A (12, 10), B (10, 57600).

Output array: C (12, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 10

lda= 57600, ldb= 10, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.397667 ms

xsmm-custom Time (libxsmm): 0.397667 ms

xsmm-custom No. of CPU cycles: 397666

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.39766666666666667

xsmm-custom avg execution time: 0.39766666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 120, 'a_rows': 12, 'a_size': 120, 'a_unique': 20, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9984911986588433, 'speedup_best_over_ref': 0.9984911986588433, 'xsmm_custom_avg': 0.39766666666666667, 'xsmm_custom_best': 0.39766666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.3970666666666667, 'xsmm_reference_best': 0.3970666666666667, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m3.txt...

Read matrix has 10 rows and 12 columns.

Input arrays: A (10, 12), B (12, 57600).

Output array: C (10, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.379200 ms

xsmm-reference Time (libxsmm): 0.379167 ms

xsmm-reference No. of CPU cycles: 379166

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.37919999999999998

xsmm-reference avg execution time: 0.37919999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 481988818 cleaned_data/example_mats/tri/p3/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m3.txt...

Read matrix has 10 rows and 12 columns.

Input arrays: A (10, 12), B (12, 57600).

Output array: C (10, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 12

lda= 57600, ldb= 12, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.380667 ms

xsmm-custom Time (libxsmm): 0.380667 ms

xsmm-custom No. of CPU cycles: 380666

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.38066666666666665

xsmm-custom avg execution time: 0.38066666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 120, 'a_rows': 10, 'a_size': 120, 'a_unique': 40, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9961471103327495, 'speedup_best_over_ref': 0.9961471103327495, 'xsmm_custom_avg': 0.38066666666666665, 'xsmm_custom_best': 0.38066666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.3792, 'xsmm_reference_best': 0.3792, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m6.txt...

Read matrix has 20 rows and 12 columns.

Input arrays: A (20, 12), B (12, 57600).

Output array: C (20, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.687900 ms

xsmm-reference Time (libxsmm): 0.687867 ms

xsmm-reference No. of CPU cycles: 687866

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.68790000000000007

xsmm-reference avg execution time: 0.68790000000000007

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 891036150 cleaned_data/example_mats/tri/p3/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m6.txt...

Read matrix has 20 rows and 12 columns.

Input arrays: A (20, 12), B (12, 57600).

Output array: C (20, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 12

lda= 57600, ldb= 12, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.700667 ms

xsmm-custom Time (libxsmm): 0.700667 ms

xsmm-custom No. of CPU cycles: 700666

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.70066666666666666

xsmm-custom avg execution time: 0.70066666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 160, 'a_rows': 20, 'a_size': 240, 'a_unique': 20, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9817792578496671, 'speedup_best_over_ref': 0.9817792578496671, 'xsmm_custom_avg': 0.7006666666666667, 'xsmm_custom_best': 0.7006666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6879000000000001, 'xsmm_reference_best': 0.6879000000000001, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m132.txt...

Read matrix has 10 rows and 20 columns.

Input arrays: A (10, 20), B (20, 57600).

Output array: C (10, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.587367 ms

xsmm-reference Time (libxsmm): 0.587367 ms

xsmm-reference No. of CPU cycles: 587366

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.58736666666666659

xsmm-reference avg execution time: 0.58736666666666659

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1430308528 cleaned_data/example_mats/tri/p3/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m132.txt...

Read matrix has 10 rows and 20 columns.

Input arrays: A (10, 20), B (20, 57600).

Output array: C (10, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 20

lda= 57600, ldb= 20, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.606433 ms

xsmm-custom Time (libxsmm): 0.606433 ms

xsmm-custom No. of CPU cycles: 606433

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.60643333333333338

xsmm-custom avg execution time: 0.60643333333333338

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 192, 'a_rows': 10, 'a_size': 200, 'a_unique': 48, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9685593360083546, 'speedup_best_over_ref': 0.9685593360083546, 'xsmm_custom_avg': 0.6064333333333334, 'xsmm_custom_best': 0.6064333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5873666666666666, 'xsmm_reference_best': 0.5873666666666666, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m460.txt...

Read matrix has 20 rows and 10 columns.

Input arrays: A (20, 10), B (10, 57600).

Output array: C (20, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.592967 ms

xsmm-reference Time (libxsmm): 0.592967 ms

xsmm-reference No. of CPU cycles: 592966

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.5929666666666662

xsmm-reference avg execution time: 0.5929666666666662

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1730726535 cleaned_data/example_mats/tri/p3/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m460.txt...

Read matrix has 20 rows and 10 columns.

Input arrays: A (20, 10), B (10, 57600).

Output array: C (20, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 10

lda= 57600, ldb= 10, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.601267 ms

xsmm-custom Time (libxsmm): 0.601233 ms

xsmm-custom No. of CPU cycles: 601233

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.60126666666666673

xsmm-custom avg execution time: 0.60126666666666673

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 192, 'a_rows': 20, 'a_size': 200, 'a_unique': 48, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9861958088479867, 'speedup_best_over_ref': 0.9861958088479867, 'xsmm_custom_avg': 0.6012666666666667, 'xsmm_custom_best': 0.6012666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5929666666666662, 'xsmm_reference_best': 0.5929666666666662, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m0.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 57600).

Output array: C (15, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.631500 ms

xsmm-reference Time (libxsmm): 0.631500 ms

xsmm-reference No. of CPU cycles: 631500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.63150000000000006

xsmm-reference avg execution time: 0.63150000000000006

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 240045149 cleaned_data/example_mats/tri/p4/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m0.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 57600).

Output array: C (15, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 15, k= 15

lda= 57600, ldb= 15, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.648600 ms

xsmm-custom Time (libxsmm): 0.648600 ms

xsmm-custom No. of CPU cycles: 648600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.64859999999999995

xsmm-custom avg execution time: 0.64859999999999995

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 225, 'a_rows': 15, 'a_size': 225, 'a_unique': 39, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9736355226642, 'speedup_best_over_ref': 0.9736355226642, 'xsmm_custom_avg': 0.6486, 'xsmm_custom_best': 0.6486, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6315000000000001, 'xsmm_reference_best': 0.6315000000000001, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m3.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 57600).

Output array: C (15, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.649300 ms

xsmm-reference Time (libxsmm): 0.649300 ms

xsmm-reference No. of CPU cycles: 649300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.64929999999999999

xsmm-reference avg execution time: 0.64929999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 961853893 cleaned_data/example_mats/tri/p4/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m3.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 57600).

Output array: C (15, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 15, k= 15

lda= 57600, ldb= 15, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.645800 ms

xsmm-custom Time (libxsmm): 0.645800 ms

xsmm-custom No. of CPU cycles: 645800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.64579999999999993

xsmm-custom avg execution time: 0.64579999999999993

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 225, 'a_rows': 15, 'a_size': 225, 'a_unique': 78, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0054196345617838, 'speedup_best_over_ref': 1.0054196345617838, 'xsmm_custom_avg': 0.6457999999999999, 'xsmm_custom_best': 0.6457999999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6493, 'xsmm_reference_best': 0.6493, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m6.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 57600).

Output array: C (30, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.458500 ms

xsmm-reference Time (libxsmm): 1.458500 ms

xsmm-reference No. of CPU cycles: 1458500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.4585000000000001

xsmm-reference avg execution time: 1.4585000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1433783175 cleaned_data/example_mats/tri/p4/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m6.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 57600).

Output array: C (30, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 15

lda= 57600, ldb= 15, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.470500 ms

xsmm-custom Time (libxsmm): 1.470500 ms

xsmm-custom No. of CPU cycles: 1470500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.4705000000000001

xsmm-custom avg execution time: 1.4705000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 300, 'a_rows': 30, 'a_size': 450, 'a_unique': 39, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9918395103706222, 'speedup_best_over_ref': 0.9918395103706222, 'xsmm_custom_avg': 1.4705000000000001, 'xsmm_custom_best': 1.4705000000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.4585000000000001, 'xsmm_reference_best': 1.4585000000000001, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m132.txt...

Read matrix has 15 rows and 30 columns.

Input arrays: A (15, 30), B (30, 57600).

Output array: C (15, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.517500 ms

xsmm-reference Time (libxsmm): 1.517500 ms

xsmm-reference No. of CPU cycles: 1517500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.5174999999999998

xsmm-reference avg execution time: 1.5174999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 199623743 cleaned_data/example_mats/tri/p4/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m132.txt...

Read matrix has 15 rows and 30 columns.

Input arrays: A (15, 30), B (30, 57600).

Output array: C (15, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 15, k= 30

lda= 57600, ldb= 30, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.529500 ms

xsmm-custom Time (libxsmm): 1.529467 ms

xsmm-custom No. of CPU cycles: 1529466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.5294999999999999

xsmm-custom avg execution time: 1.5294999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 30, 'a_nonzero': 432, 'a_rows': 15, 'a_size': 450, 'a_unique': 108, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9921542987904544, 'speedup_best_over_ref': 0.9921542987904544, 'xsmm_custom_avg': 1.5294999999999999, 'xsmm_custom_best': 1.5294999999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.5174999999999998, 'xsmm_reference_best': 1.5174999999999998, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m460.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 57600).

Output array: C (30, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.440467 ms

xsmm-reference Time (libxsmm): 1.440467 ms

xsmm-reference No. of CPU cycles: 1440466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.4404666666666666

xsmm-reference avg execution time: 1.4404666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1741630525 cleaned_data/example_mats/tri/p4/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m460.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 57600).

Output array: C (30, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 15

lda= 57600, ldb= 15, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.488933 ms

xsmm-custom Time (libxsmm): 1.488933 ms

xsmm-custom No. of CPU cycles: 1488933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.4889333333333332

xsmm-custom avg execution time: 1.4889333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 432, 'a_rows': 30, 'a_size': 450, 'a_unique': 108, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9674487328736455, 'speedup_best_over_ref': 0.9674487328736455, 'xsmm_custom_avg': 1.4889333333333332, 'xsmm_custom_best': 1.4889333333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.4404666666666666, 'xsmm_reference_best': 1.4404666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m0.txt...

Read matrix has 18 rows and 21 columns.

Input arrays: A (18, 21), B (21, 57600).

Output array: C (18, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.092467 ms

xsmm-reference Time (libxsmm): 1.092467 ms

xsmm-reference No. of CPU cycles: 1092466

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.0924666666666667

xsmm-reference avg execution time: 1.0924666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1290178179 cleaned_data/example_mats/tri/p5/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m0.txt...

Read matrix has 18 rows and 21 columns.

Input arrays: A (18, 21), B (21, 57600).

Output array: C (18, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 21

lda= 57600, ldb= 21, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.109533 ms

xsmm-custom Time (libxsmm): 1.109533 ms

xsmm-custom No. of CPU cycles: 1109533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.1095333333333335

xsmm-custom avg execution time: 1.1095333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 378, 'a_rows': 18, 'a_size': 378, 'a_unique': 63, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9846181577840533, 'speedup_best_over_ref': 0.9846181577840533, 'xsmm_custom_avg': 1.1095333333333335, 'xsmm_custom_best': 1.1095333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.0924666666666667, 'xsmm_reference_best': 1.0924666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m3.txt...

Read matrix has 21 rows and 18 columns.

Input arrays: A (21, 18), B (18, 57600).

Output array: C (21, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.102167 ms

xsmm-reference Time (libxsmm): 1.102167 ms

xsmm-reference No. of CPU cycles: 1102166

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.1021666666666665

xsmm-reference avg execution time: 1.1021666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1519120427 cleaned_data/example_mats/tri/p5/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m3.txt...

Read matrix has 21 rows and 18 columns.

Input arrays: A (21, 18), B (18, 57600).

Output array: C (21, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 21, k= 18

lda= 57600, ldb= 18, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.149967 ms

xsmm-custom Time (libxsmm): 1.149967 ms

xsmm-custom No. of CPU cycles: 1149966

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.1499666666666668

xsmm-custom avg execution time: 1.1499666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 378, 'a_rows': 21, 'a_size': 378, 'a_unique': 126, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.958433577784863, 'speedup_best_over_ref': 0.958433577784863, 'xsmm_custom_avg': 1.1499666666666668, 'xsmm_custom_best': 1.1499666666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.1021666666666665, 'xsmm_reference_best': 1.1021666666666665, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m6.txt...

Read matrix has 42 rows and 18 columns.

Input arrays: A (42, 18), B (18, 57600).

Output array: C (42, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.672667 ms

xsmm-reference Time (libxsmm): 2.672667 ms

xsmm-reference No. of CPU cycles: 2672666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.6726666666666667

xsmm-reference avg execution time: 2.6726666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 552502202 cleaned_data/example_mats/tri/p5/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m6.txt...

Read matrix has 42 rows and 18 columns.

Input arrays: A (42, 18), B (18, 57600).

Output array: C (42, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 42, k= 18

lda= 57600, ldb= 18, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.725700 ms

xsmm-custom Time (libxsmm): 2.725700 ms

xsmm-custom No. of CPU cycles: 2725700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.7257000000000002

xsmm-custom avg execution time: 2.7257000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 504, 'a_rows': 42, 'a_size': 756, 'a_unique': 63, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.980543224370498, 'speedup_best_over_ref': 0.980543224370498, 'xsmm_custom_avg': 2.7257000000000002, 'xsmm_custom_best': 2.7257000000000002, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.6726666666666667, 'xsmm_reference_best': 2.6726666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m132.txt...

Read matrix has 21 rows and 42 columns.

Input arrays: A (21, 42), B (42, 57600).

Output array: C (21, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.046767 ms

xsmm-reference Time (libxsmm): 3.046733 ms

xsmm-reference No. of CPU cycles: 3046733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.0467666666666671

xsmm-reference avg execution time: 3.0467666666666671

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1137614121 cleaned_data/example_mats/tri/p5/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m132.txt...

Read matrix has 21 rows and 42 columns.

Input arrays: A (21, 42), B (42, 57600).

Output array: C (21, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 21, k= 42

lda= 57600, ldb= 42, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.032633 ms

xsmm-custom Time (libxsmm): 3.032533 ms

xsmm-custom No. of CPU cycles: 3032533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.0326333333333335

xsmm-custom avg execution time: 3.0326333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 42, 'a_nonzero': 864, 'a_rows': 21, 'a_size': 882, 'a_unique': 216, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0046604161399884, 'speedup_best_over_ref': 1.0046604161399884, 'xsmm_custom_avg': 3.0326333333333335, 'xsmm_custom_best': 3.0326333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.046766666666667, 'xsmm_reference_best': 3.046766666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m460.txt...

Read matrix has 42 rows and 21 columns.

Input arrays: A (42, 21), B (21, 57600).

Output array: C (42, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.027100 ms

xsmm-reference Time (libxsmm): 3.027100 ms

xsmm-reference No. of CPU cycles: 3027100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.0270999999999995

xsmm-reference avg execution time: 3.0270999999999995

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1397107568 cleaned_data/example_mats/tri/p5/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m460.txt...

Read matrix has 42 rows and 21 columns.

Input arrays: A (42, 21), B (21, 57600).

Output array: C (42, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 42, k= 21

lda= 57600, ldb= 21, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.072367 ms

xsmm-custom Time (libxsmm): 3.072367 ms

xsmm-custom No. of CPU cycles: 3072366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.0723666666666669

xsmm-custom avg execution time: 3.0723666666666669

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 864, 'a_rows': 42, 'a_size': 882, 'a_unique': 216, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9852665154983669, 'speedup_best_over_ref': 0.9852665154983669, 'xsmm_custom_avg': 3.072366666666667, 'xsmm_custom_best': 3.072366666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.0270999999999995, 'xsmm_reference_best': 3.0270999999999995, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m0.txt...

Read matrix has 21 rows and 28 columns.

Input arrays: A (21, 28), B (28, 57600).

Output array: C (21, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.956600 ms

xsmm-reference Time (libxsmm): 1.956600 ms

xsmm-reference No. of CPU cycles: 1956600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.9566000000000001

xsmm-reference avg execution time: 1.9566000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 144941283 cleaned_data/example_mats/tri/p6/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m0.txt...

Read matrix has 21 rows and 28 columns.

Input arrays: A (21, 28), B (28, 57600).

Output array: C (21, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 21, k= 28

lda= 57600, ldb= 28, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.003933 ms

xsmm-custom Time (libxsmm): 2.003933 ms

xsmm-custom No. of CPU cycles: 2003933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.0039333333333333

xsmm-custom avg execution time: 2.0039333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 588, 'a_rows': 21, 'a_size': 588, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m0.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9763797864200406, 'speedup_best_over_ref': 0.9763797864200406, 'xsmm_custom_avg': 2.0039333333333333, 'xsmm_custom_best': 2.0039333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.9566000000000001, 'xsmm_reference_best': 1.9566000000000001, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m3.txt...

Read matrix has 28 rows and 21 columns.

Input arrays: A (28, 21), B (21, 57600).

Output array: C (28, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.921200 ms

xsmm-reference Time (libxsmm): 1.921200 ms

xsmm-reference No. of CPU cycles: 1921200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.9212

xsmm-reference avg execution time: 1.9212

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 2050405458 cleaned_data/example_mats/tri/p6/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m3.txt...

Read matrix has 28 rows and 21 columns.

Input arrays: A (28, 21), B (21, 57600).

Output array: C (28, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 21

lda= 57600, ldb= 21, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.940100 ms

xsmm-custom Time (libxsmm): 1.940100 ms

xsmm-custom No. of CPU cycles: 1940100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.9401000000000002

xsmm-custom avg execution time: 1.9401000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 588, 'a_rows': 28, 'a_size': 588, 'a_unique': 200, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m3.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9902582341116437, 'speedup_best_over_ref': 0.9902582341116437, 'xsmm_custom_avg': 1.9401000000000002, 'xsmm_custom_best': 1.9401000000000002, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.9212, 'xsmm_reference_best': 1.9212, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m6.txt...

Read matrix has 56 rows and 21 columns.

Input arrays: A (56, 21), B (21, 57600).

Output array: C (56, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.037633 ms

xsmm-reference Time (libxsmm): 4.037633 ms

xsmm-reference No. of CPU cycles: 4037633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.0376333333333339

xsmm-reference avg execution time: 4.0376333333333339

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1580612843 cleaned_data/example_mats/tri/p6/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m6.txt...

Read matrix has 56 rows and 21 columns.

Input arrays: A (56, 21), B (21, 57600).

Output array: C (56, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 21

lda= 57600, ldb= 21, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.983700 ms

xsmm-custom Time (libxsmm): 3.983700 ms

xsmm-custom No. of CPU cycles: 3983700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.9836999999999998

xsmm-custom avg execution time: 3.9836999999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 784, 'a_rows': 56, 'a_size': 1176, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m6.txt', 'size_n': 57600, 'speedup_avg_over_ref': 1.0135385027319663, 'speedup_best_over_ref': 1.0135385027319663, 'xsmm_custom_avg': 3.9837, 'xsmm_custom_best': 3.9837, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.037633333333334, 'xsmm_reference_best': 4.037633333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m132.txt...

Read matrix has 28 rows and 56 columns.

Input arrays: A (28, 56), B (56, 57600).

Output array: C (28, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.935433 ms

xsmm-reference Time (libxsmm): 4.935400 ms

xsmm-reference No. of CPU cycles: 4935400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.9354333333333331

xsmm-reference avg execution time: 4.9354333333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 1667020748 cleaned_data/example_mats/tri/p6/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m132.txt...

Read matrix has 28 rows and 56 columns.

Input arrays: A (28, 56), B (56, 57600).

Output array: C (28, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 56

lda= 57600, ldb= 56, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.966967 ms

xsmm-custom Time (libxsmm): 4.966867 ms

xsmm-custom No. of CPU cycles: 4966866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.9669666666666661

xsmm-custom avg execution time: 4.9669666666666661

Freeing A

Freeing B

Freeing C

{'a_cols': 56, 'a_nonzero': 1536, 'a_rows': 28, 'a_size': 1568, 'a_unique': 384, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m132.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9936513901844856, 'speedup_best_over_ref': 0.9936513901844856, 'xsmm_custom_avg': 4.966966666666666, 'xsmm_custom_best': 4.966966666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.935433333333333, 'xsmm_reference_best': 4.935433333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m460.txt...

Read matrix has 56 rows and 28 columns.

Input arrays: A (56, 28), B (28, 57600).

Output array: C (56, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.010733 ms

xsmm-reference Time (libxsmm): 5.010733 ms

xsmm-reference No. of CPU cycles: 5010733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.0107333333333335

xsmm-reference avg execution time: 5.0107333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 57600 724305360 cleaned_data/example_mats/tri/p6/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m460.txt...

Read matrix has 56 rows and 28 columns.

Input arrays: A (56, 28), B (28, 57600).

Output array: C (56, 57600).

Array B width (N): 57600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 28

lda= 57600, ldb= 28, ldc= 57600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.041467 ms

xsmm-custom Time (libxsmm): 5.041500 ms

xsmm-custom No. of CPU cycles: 5041500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.0414666666666665

xsmm-custom avg execution time: 5.0414666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 1536, 'a_rows': 56, 'a_size': 1568, 'a_unique': 384, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m460.txt', 'size_n': 57600, 'speedup_avg_over_ref': 0.9939038904022639, 'speedup_best_over_ref': 0.9939038904022639, 'xsmm_custom_avg': 5.0414666666666665, 'xsmm_custom_best': 5.0414666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.0107333333333335, 'xsmm_reference_best': 5.0107333333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
Average speedup (best) of custom over reference 1.4882919150917364
Average speedup (iqr avg) of custom over reference 1.4882919150917364
