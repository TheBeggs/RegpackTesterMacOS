run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m0.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 81600).

Output array: C (24, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.190533 ms

xsmm-reference Time (libxsmm): 1.190533 ms

xsmm-reference No. of CPU cycles: 1190533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.1905333333333334

xsmm-reference avg execution time: 1.1905333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1584831292 cleaned_data/example_mats/hex/p1/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m0.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 81600).

Output array: C (24, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 8

lda= 81600, ldb= 8, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.231533 ms

xsmm-custom Time (libxsmm): 1.231533 ms

xsmm-custom No. of CPU cycles: 1231533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.2315333333333343

xsmm-custom avg execution time: 1.2315333333333343

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 48, 'a_rows': 24, 'a_size': 192, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9667081686786114, 'speedup_best_over_ref': 0.9667081686786114, 'xsmm_custom_avg': 1.2315333333333343, 'xsmm_custom_best': 1.2315333333333343, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.1905333333333334, 'xsmm_reference_best': 1.1905333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m3.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 81600).

Output array: C (8, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.088733 ms

xsmm-reference Time (libxsmm): 1.088767 ms

xsmm-reference No. of CPU cycles: 1088766

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.0887333333333333

xsmm-reference avg execution time: 1.0887333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 907885725 cleaned_data/example_mats/hex/p1/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m3.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 81600).

Output array: C (8, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 24

lda= 81600, ldb= 24, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.094133 ms

xsmm-custom Time (libxsmm): 1.094100 ms

xsmm-custom No. of CPU cycles: 1094100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.0941333333333332

xsmm-custom avg execution time: 1.0941333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 48, 'a_rows': 8, 'a_size': 192, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9950645868876433, 'speedup_best_over_ref': 0.9950645868876433, 'xsmm_custom_avg': 1.0941333333333332, 'xsmm_custom_best': 1.0941333333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.0887333333333333, 'xsmm_reference_best': 1.0887333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m6.txt...

Read matrix has 24 rows and 24 columns.

Input arrays: A (24, 24), B (24, 81600).

Output array: C (24, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.013133 ms

xsmm-reference Time (libxsmm): 3.013167 ms

xsmm-reference No. of CPU cycles: 3013166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.0131333333333337

xsmm-reference avg execution time: 3.0131333333333337

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1605194514 cleaned_data/example_mats/hex/p1/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m6.txt...

Read matrix has 24 rows and 24 columns.

Input arrays: A (24, 24), B (24, 81600).

Output array: C (24, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 24

lda= 81600, ldb= 24, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.168767 ms

xsmm-custom Time (libxsmm): 3.168767 ms

xsmm-custom No. of CPU cycles: 3168766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.1687666666666661

xsmm-custom avg execution time: 3.1687666666666661

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 48, 'a_rows': 24, 'a_size': 576, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.08333333333333333, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9508852024446949, 'speedup_best_over_ref': 0.9508852024446949, 'xsmm_custom_avg': 3.168766666666666, 'xsmm_custom_best': 3.168766666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.0131333333333337, 'xsmm_reference_best': 3.0131333333333337, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m132.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 81600).

Output array: C (8, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.064567 ms

xsmm-reference Time (libxsmm): 1.064567 ms

xsmm-reference No. of CPU cycles: 1064566

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.0645666666666667

xsmm-reference avg execution time: 1.0645666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 2088085035 cleaned_data/example_mats/hex/p1/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m132.txt...

Read matrix has 8 rows and 24 columns.

Input arrays: A (8, 24), B (24, 81600).

Output array: C (8, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 24

lda= 81600, ldb= 24, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.094100 ms

xsmm-custom Time (libxsmm): 1.094067 ms

xsmm-custom No. of CPU cycles: 1094066

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.0941000000000001

xsmm-custom avg execution time: 1.0941000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 48, 'a_rows': 8, 'a_size': 192, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9730067330835085, 'speedup_best_over_ref': 0.9730067330835085, 'xsmm_custom_avg': 1.0941, 'xsmm_custom_best': 1.0941, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.0645666666666667, 'xsmm_reference_best': 1.0645666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m460.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 81600).

Output array: C (24, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.162667 ms

xsmm-reference Time (libxsmm): 1.162667 ms

xsmm-reference No. of CPU cycles: 1162666

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.1626666666666667

xsmm-reference avg execution time: 1.1626666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1935879564 cleaned_data/example_mats/hex/p1/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p1/gauss-legendre/m460.txt...

Read matrix has 24 rows and 8 columns.

Input arrays: A (24, 8), B (8, 81600).

Output array: C (24, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 8

lda= 81600, ldb= 8, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.184567 ms

xsmm-custom Time (libxsmm): 1.184567 ms

xsmm-custom No. of CPU cycles: 1184566

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.1845666666666665

xsmm-custom avg execution time: 1.1845666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 48, 'a_rows': 24, 'a_size': 192, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/hex/p1/gauss-legendre/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9815122266933057, 'speedup_best_over_ref': 0.9815122266933057, 'xsmm_custom_avg': 1.1845666666666665, 'xsmm_custom_best': 1.1845666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.1626666666666667, 'xsmm_reference_best': 1.1626666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 81600).

Output array: C (54, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.804600 ms

xsmm-reference Time (libxsmm): 6.804567 ms

xsmm-reference No. of CPU cycles: 6804566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.8045999999999998

xsmm-reference avg execution time: 6.8045999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1649549363 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 81600).

Output array: C (54, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 54, k= 27

lda= 81600, ldb= 27, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.976600 ms

xsmm-custom Time (libxsmm): 6.976600 ms

xsmm-custom No. of CPU cycles: 6976600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.9766000000000004

xsmm-custom avg execution time: 6.9766000000000004

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 54, 'a_rows': 54, 'a_size': 1458, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.037037037037037035, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9753461571539145, 'speedup_best_over_ref': 0.9753461571539145, 'xsmm_custom_avg': 6.9766, 'xsmm_custom_best': 6.9766, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.8046, 'xsmm_reference_best': 6.8046, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 81600).

Output array: C (27, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.925567 ms

xsmm-reference Time (libxsmm): 6.925533 ms

xsmm-reference No. of CPU cycles: 6925533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.9255666666666666

xsmm-reference avg execution time: 6.9255666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1822677149 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 81600).

Output array: C (27, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 54

lda= 81600, ldb= 54, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 7.036700 ms

xsmm-custom Time (libxsmm): 7.036667 ms

xsmm-custom No. of CPU cycles: 7036666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 7.0366999999999997

xsmm-custom avg execution time: 7.0366999999999997

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 27, 'a_size': 1458, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9842066120008907, 'speedup_best_over_ref': 0.9842066120008907, 'xsmm_custom_avg': 7.0367, 'xsmm_custom_best': 7.0367, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.925566666666667, 'xsmm_reference_best': 6.925566666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 81600).

Output array: C (81, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 18.870933 ms

xsmm-reference Time (libxsmm): 18.870967 ms

xsmm-reference No. of CPU cycles: 18870966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 18.870933333333333

xsmm-reference avg execution time: 18.870933333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1700861604 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 81600).

Output array: C (81, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 54

lda= 81600, ldb= 54, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 18.719333 ms

xsmm-custom Time (libxsmm): 18.719333 ms

xsmm-custom No. of CPU cycles: 18719333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 18.719333333333331

xsmm-custom avg execution time: 18.719333333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 81, 'a_size': 4374, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.037037037037037035, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.008098579009224, 'speedup_best_over_ref': 1.008098579009224, 'xsmm_custom_avg': 18.71933333333333, 'xsmm_custom_best': 18.71933333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 18.870933333333333, 'xsmm_reference_best': 18.870933333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 81600).

Output array: C (27, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 9.807367 ms

xsmm-reference Time (libxsmm): 9.807333 ms

xsmm-reference No. of CPU cycles: 9807333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 9.8073666666666668

xsmm-reference avg execution time: 9.8073666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 2050600860 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 81600).

Output array: C (27, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 81

lda= 81600, ldb= 81, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 9.847667 ms

xsmm-custom Time (libxsmm): 9.847633 ms

xsmm-custom No. of CPU cycles: 9847633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 9.847666666666667

xsmm-custom avg execution time: 9.847666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 81, 'a_nonzero': 216, 'a_rows': 27, 'a_size': 2187, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9959076600209863, 'speedup_best_over_ref': 0.9959076600209863, 'xsmm_custom_avg': 9.847666666666667, 'xsmm_custom_best': 9.847666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 9.807366666666667, 'xsmm_reference_best': 9.807366666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 81600).

Output array: C (81, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 10.074067 ms

xsmm-reference Time (libxsmm): 10.074067 ms

xsmm-reference No. of CPU cycles: 10074066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 10.074066666666665

xsmm-reference avg execution time: 10.074066666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 918557983 cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 81600).

Output array: C (81, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 27

lda= 81600, ldb= 27, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 10.117967 ms

xsmm-custom Time (libxsmm): 10.117867 ms

xsmm-custom No. of CPU cycles: 10117866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 10.117966666666666

xsmm-custom avg execution time: 10.117966666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 216, 'a_rows': 81, 'a_size': 2187, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre-lobatto/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9956611835711391, 'speedup_best_over_ref': 0.9956611835711391, 'xsmm_custom_avg': 10.117966666666666, 'xsmm_custom_best': 10.117966666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 10.074066666666665, 'xsmm_reference_best': 10.074066666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 81600).

Output array: C (54, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.814300 ms

xsmm-reference Time (libxsmm): 6.814300 ms

xsmm-reference No. of CPU cycles: 6814300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.8143000000000002

xsmm-reference avg execution time: 6.8143000000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 263689365 cleaned_data/example_mats/hex/p2/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m0.txt...

Read matrix has 54 rows and 27 columns.

Input arrays: A (54, 27), B (27, 81600).

Output array: C (54, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 54, k= 27

lda= 81600, ldb= 27, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.853533 ms

xsmm-custom Time (libxsmm): 6.853500 ms

xsmm-custom No. of CPU cycles: 6853500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.853533333333333

xsmm-custom avg execution time: 6.853533333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 162, 'a_rows': 54, 'a_size': 1458, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9942754588873867, 'speedup_best_over_ref': 0.9942754588873867, 'xsmm_custom_avg': 6.853533333333333, 'xsmm_custom_best': 6.853533333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.8143, 'xsmm_reference_best': 6.8143, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 81600).

Output array: C (27, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.957533 ms

xsmm-reference Time (libxsmm): 6.957533 ms

xsmm-reference No. of CPU cycles: 6957533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.9575333333333331

xsmm-reference avg execution time: 6.9575333333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 366984423 cleaned_data/example_mats/hex/p2/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m3.txt...

Read matrix has 27 rows and 54 columns.

Input arrays: A (27, 54), B (54, 81600).

Output array: C (27, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 54

lda= 81600, ldb= 54, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 7.037233 ms

xsmm-custom Time (libxsmm): 7.037200 ms

xsmm-custom No. of CPU cycles: 7037200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 7.037233333333333

xsmm-custom avg execution time: 7.037233333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 27, 'a_size': 1458, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9886745264474202, 'speedup_best_over_ref': 0.9886745264474202, 'xsmm_custom_avg': 7.037233333333333, 'xsmm_custom_best': 7.037233333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.957533333333333, 'xsmm_reference_best': 6.957533333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 81600).

Output array: C (81, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 18.854333 ms

xsmm-reference Time (libxsmm): 18.854333 ms

xsmm-reference No. of CPU cycles: 18854333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 18.854333333333333

xsmm-reference avg execution time: 18.854333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1223205959 cleaned_data/example_mats/hex/p2/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m6.txt...

Read matrix has 81 rows and 54 columns.

Input arrays: A (81, 54), B (54, 81600).

Output array: C (81, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 54

lda= 81600, ldb= 54, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 18.803067 ms

xsmm-custom Time (libxsmm): 18.803067 ms

xsmm-custom No. of CPU cycles: 18803066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 18.803066666666666

xsmm-custom avg execution time: 18.803066666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 54, 'a_nonzero': 162, 'a_rows': 81, 'a_size': 4374, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.037037037037037035, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0027265056054686, 'speedup_best_over_ref': 1.0027265056054686, 'xsmm_custom_avg': 18.803066666666666, 'xsmm_custom_best': 18.803066666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 18.854333333333333, 'xsmm_reference_best': 18.854333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 81600).

Output array: C (27, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 9.866467 ms

xsmm-reference Time (libxsmm): 9.866467 ms

xsmm-reference No. of CPU cycles: 9866466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 9.8664666666666676

xsmm-reference avg execution time: 9.8664666666666676

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 305148770 cleaned_data/example_mats/hex/p2/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m132.txt...

Read matrix has 27 rows and 81 columns.

Input arrays: A (27, 81), B (81, 81600).

Output array: C (27, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 27, k= 81

lda= 81600, ldb= 81, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 9.865900 ms

xsmm-custom Time (libxsmm): 9.865900 ms

xsmm-custom No. of CPU cycles: 9865900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 9.8658999999999999

xsmm-custom avg execution time: 9.8658999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 81, 'a_nonzero': 216, 'a_rows': 27, 'a_size': 2187, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0000574368954345, 'speedup_best_over_ref': 1.0000574368954345, 'xsmm_custom_avg': 9.8659, 'xsmm_custom_best': 9.8659, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 9.866466666666668, 'xsmm_reference_best': 9.866466666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 81600).

Output array: C (81, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 10.090533 ms

xsmm-reference Time (libxsmm): 10.090533 ms

xsmm-reference No. of CPU cycles: 10090533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 10.090533333333333

xsmm-reference avg execution time: 10.090533333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 2576380 cleaned_data/example_mats/hex/p2/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p2/gauss-legendre/m460.txt...

Read matrix has 81 rows and 27 columns.

Input arrays: A (81, 27), B (27, 81600).

Output array: C (81, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 81, k= 27

lda= 81600, ldb= 27, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 10.186067 ms

xsmm-custom Time (libxsmm): 10.186067 ms

xsmm-custom No. of CPU cycles: 10186066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 10.186066666666667

xsmm-custom avg execution time: 10.186066666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 27, 'a_nonzero': 216, 'a_rows': 81, 'a_size': 2187, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.09876543209876543, 'mat_file': 'data/example_mats/hex/p2/gauss-legendre/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9906211753310077, 'speedup_best_over_ref': 0.9906211753310077, 'xsmm_custom_avg': 10.186066666666667, 'xsmm_custom_best': 10.186066666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 10.090533333333333, 'xsmm_reference_best': 10.090533333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 81600).

Output array: C (96, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 29.319533 ms

xsmm-reference Time (libxsmm): 29.319533 ms

xsmm-reference No. of CPU cycles: 29319533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 29.319533333333332

xsmm-reference avg execution time: 29.319533333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 878311234 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 81600).

Output array: C (96, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 96, k= 64

lda= 81600, ldb= 64, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 96

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 29.103667 ms

xsmm-custom Time (libxsmm): 29.103633 ms

xsmm-custom No. of CPU cycles: 29103633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 29.103666666666665

xsmm-custom avg execution time: 29.103666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 96, 'a_rows': 96, 'a_size': 6144, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.015625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0074171639312344, 'speedup_best_over_ref': 1.0074171639312344, 'xsmm_custom_avg': 29.103666666666665, 'xsmm_custom_best': 29.103666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 29.319533333333332, 'xsmm_reference_best': 29.319533333333332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 81600).

Output array: C (64, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 29.459200 ms

xsmm-reference Time (libxsmm): 29.459167 ms

xsmm-reference No. of CPU cycles: 29459166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 29.459199999999999

xsmm-reference avg execution time: 29.459199999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 476312992 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 81600).

Output array: C (64, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 96

lda= 81600, ldb= 96, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 28.344367 ms

xsmm-custom Time (libxsmm): 28.344333 ms

xsmm-custom No. of CPU cycles: 28344333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 28.344366666666666

xsmm-custom avg execution time: 28.344366666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 64, 'a_size': 6144, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0393317425802422, 'speedup_best_over_ref': 1.0393317425802422, 'xsmm_custom_avg': 28.344366666666666, 'xsmm_custom_best': 28.344366666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 29.4592, 'xsmm_reference_best': 29.4592, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 81600).

Output array: C (192, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 76.429967 ms

xsmm-reference Time (libxsmm): 76.429967 ms

xsmm-reference No. of CPU cycles: 76429966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 76.429966666666658

xsmm-reference avg execution time: 76.429966666666658

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 610284447 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 81600).

Output array: C (192, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 96

lda= 81600, ldb= 96, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 76.447567 ms

xsmm-custom Time (libxsmm): 76.447567 ms

xsmm-custom No. of CPU cycles: 76447566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 76.447566666666674

xsmm-custom avg execution time: 76.447566666666674

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 192, 'a_size': 18432, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.020833333333333332, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9997697768448699, 'speedup_best_over_ref': 0.9997697768448699, 'xsmm_custom_avg': 76.44756666666667, 'xsmm_custom_best': 76.44756666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 76.42996666666666, 'xsmm_reference_best': 76.42996666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 81600).

Output array: C (64, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 53.125200 ms

xsmm-reference Time (libxsmm): 53.125200 ms

xsmm-reference No. of CPU cycles: 53125200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 53.125199999999992

xsmm-reference avg execution time: 53.125199999999992

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 175607782 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 81600).

Output array: C (64, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 192

lda= 81600, ldb= 192, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 53.040033 ms

xsmm-custom Time (libxsmm): 53.040033 ms

xsmm-custom No. of CPU cycles: 53040033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 53.040033333333334

xsmm-custom avg execution time: 53.040033333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 192, 'a_nonzero': 672, 'a_rows': 64, 'a_size': 12288, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0546875, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.001605705376002, 'speedup_best_over_ref': 1.001605705376002, 'xsmm_custom_avg': 53.040033333333334, 'xsmm_custom_best': 53.040033333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 53.12519999999999, 'xsmm_reference_best': 53.12519999999999, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 81600).

Output array: C (192, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 56.116400 ms

xsmm-reference Time (libxsmm): 56.116367 ms

xsmm-reference No. of CPU cycles: 56116366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 56.116399999999999

xsmm-reference avg execution time: 56.116399999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 132137981 cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 81600).

Output array: C (192, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 64

lda= 81600, ldb= 64, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 55.353067 ms

xsmm-custom Time (libxsmm): 55.353067 ms

xsmm-custom No. of CPU cycles: 55353066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 55.35306666666667

xsmm-custom avg execution time: 55.35306666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 672, 'a_rows': 192, 'a_size': 12288, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0546875, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre-lobatto/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.01379026274967, 'speedup_best_over_ref': 1.01379026274967, 'xsmm_custom_avg': 55.35306666666667, 'xsmm_custom_best': 55.35306666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 56.1164, 'xsmm_reference_best': 56.1164, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 81600).

Output array: C (96, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 29.910567 ms

xsmm-reference Time (libxsmm): 29.910567 ms

xsmm-reference No. of CPU cycles: 29910566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 29.910566666666668

xsmm-reference avg execution time: 29.910566666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 2045576720 cleaned_data/example_mats/hex/p3/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m0.txt...

Read matrix has 96 rows and 64 columns.

Input arrays: A (96, 64), B (64, 81600).

Output array: C (96, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 96, k= 64

lda= 81600, ldb= 64, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 96

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 29.166233 ms

xsmm-custom Time (libxsmm): 29.166200 ms

xsmm-custom No. of CPU cycles: 29166200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 29.166233333333331

xsmm-custom avg execution time: 29.166233333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 384, 'a_rows': 96, 'a_size': 6144, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.025520379159919, 'speedup_best_over_ref': 1.025520379159919, 'xsmm_custom_avg': 29.16623333333333, 'xsmm_custom_best': 29.16623333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 29.910566666666668, 'xsmm_reference_best': 29.910566666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 81600).

Output array: C (64, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 28.051133 ms

xsmm-reference Time (libxsmm): 28.051133 ms

xsmm-reference No. of CPU cycles: 28051133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 28.051133333333333

xsmm-reference avg execution time: 28.051133333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1454357513 cleaned_data/example_mats/hex/p3/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m3.txt...

Read matrix has 64 rows and 96 columns.

Input arrays: A (64, 96), B (96, 81600).

Output array: C (64, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 96

lda= 81600, ldb= 96, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 29.075767 ms

xsmm-custom Time (libxsmm): 29.075767 ms

xsmm-custom No. of CPU cycles: 29075766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 29.075766666666667

xsmm-custom avg execution time: 29.075766666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 64, 'a_size': 6144, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9647598859531362, 'speedup_best_over_ref': 0.9647598859531362, 'xsmm_custom_avg': 29.075766666666667, 'xsmm_custom_best': 29.075766666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 28.051133333333333, 'xsmm_reference_best': 28.051133333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 81600).

Output array: C (192, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 77.016333 ms

xsmm-reference Time (libxsmm): 77.016300 ms

xsmm-reference No. of CPU cycles: 77016300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 77.016333333333321

xsmm-reference avg execution time: 77.016333333333321

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1670424733 cleaned_data/example_mats/hex/p3/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m6.txt...

Read matrix has 192 rows and 96 columns.

Input arrays: A (192, 96), B (96, 81600).

Output array: C (192, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 96

lda= 81600, ldb= 96, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 76.370733 ms

xsmm-custom Time (libxsmm): 76.370733 ms

xsmm-custom No. of CPU cycles: 76370733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 76.370733333333334

xsmm-custom avg execution time: 76.370733333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 96, 'a_nonzero': 384, 'a_rows': 192, 'a_size': 18432, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.020833333333333332, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0084535000755086, 'speedup_best_over_ref': 1.0084535000755086, 'xsmm_custom_avg': 76.37073333333333, 'xsmm_custom_best': 76.37073333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 77.01633333333332, 'xsmm_reference_best': 77.01633333333332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 81600).

Output array: C (64, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 52.582367 ms

xsmm-reference Time (libxsmm): 52.582367 ms

xsmm-reference No. of CPU cycles: 52582366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 52.582366666666665

xsmm-reference avg execution time: 52.582366666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1867920720 cleaned_data/example_mats/hex/p3/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m132.txt...

Read matrix has 64 rows and 192 columns.

Input arrays: A (64, 192), B (192, 81600).

Output array: C (64, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 64, k= 192

lda= 81600, ldb= 192, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 64

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 51.846733 ms

xsmm-custom Time (libxsmm): 51.846733 ms

xsmm-custom No. of CPU cycles: 51846733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 51.846733333333333

xsmm-custom avg execution time: 51.846733333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 192, 'a_nonzero': 768, 'a_rows': 64, 'a_size': 12288, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0141886149047, 'speedup_best_over_ref': 1.0141886149047, 'xsmm_custom_avg': 51.84673333333333, 'xsmm_custom_best': 51.84673333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 52.582366666666665, 'xsmm_reference_best': 52.582366666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 81600).

Output array: C (192, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 55.263333 ms

xsmm-reference Time (libxsmm): 55.263333 ms

xsmm-reference No. of CPU cycles: 55263333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 55.263333333333335

xsmm-reference avg execution time: 55.263333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1181793286 cleaned_data/example_mats/hex/p3/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p3/gauss-legendre/m460.txt...

Read matrix has 192 rows and 64 columns.

Input arrays: A (192, 64), B (64, 81600).

Output array: C (192, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 192, k= 64

lda= 81600, ldb= 64, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 192

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 54.643933 ms

xsmm-custom Time (libxsmm): 54.643900 ms

xsmm-custom No. of CPU cycles: 54643900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 54.643933333333329

xsmm-custom avg execution time: 54.643933333333329

Freeing A

Freeing B

Freeing C

{'a_cols': 64, 'a_nonzero': 768, 'a_rows': 192, 'a_size': 12288, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/hex/p3/gauss-legendre/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0113352015899295, 'speedup_best_over_ref': 1.0113352015899295, 'xsmm_custom_avg': 54.64393333333333, 'xsmm_custom_best': 54.64393333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 55.263333333333335, 'xsmm_reference_best': 55.263333333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 81600).

Output array: C (150, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 76.073467 ms

xsmm-reference Time (libxsmm): 76.073467 ms

xsmm-reference No. of CPU cycles: 76073466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 76.073466666666675

xsmm-reference avg execution time: 76.073466666666675

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1754145643 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 81600).

Output array: C (150, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 150, k= 125

lda= 81600, ldb= 125, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 75.809633 ms

xsmm-custom Time (libxsmm): 75.809633 ms

xsmm-custom No. of CPU cycles: 75809633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 75.809633333333323

xsmm-custom avg execution time: 75.809633333333323

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 150, 'a_rows': 150, 'a_size': 18750, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.008, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0034802085399, 'speedup_best_over_ref': 1.0034802085399, 'xsmm_custom_avg': 75.80963333333332, 'xsmm_custom_best': 75.80963333333332, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 76.07346666666668, 'xsmm_reference_best': 76.07346666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 81600).

Output array: C (125, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 75.714400 ms

xsmm-reference Time (libxsmm): 75.714400 ms

xsmm-reference No. of CPU cycles: 75714400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 75.714399999999998

xsmm-reference avg execution time: 75.714399999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1118303131 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 81600).

Output array: C (125, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 150

lda= 81600, ldb= 150, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 75.931367 ms

xsmm-custom Time (libxsmm): 75.931333 ms

xsmm-custom No. of CPU cycles: 75931333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 75.931366666666662

xsmm-custom avg execution time: 75.931366666666662

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 125, 'a_size': 18750, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9971425950013632, 'speedup_best_over_ref': 0.9971425950013632, 'xsmm_custom_avg': 75.93136666666666, 'xsmm_custom_best': 75.93136666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 75.7144, 'xsmm_reference_best': 75.7144, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 81600).

Output array: C (375, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 209.514200 ms

xsmm-reference Time (libxsmm): 209.514200 ms

xsmm-reference No. of CPU cycles: 209514200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 209.51420000000002

xsmm-reference avg execution time: 209.51420000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1335740531 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 81600).

Output array: C (375, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 150

lda= 81600, ldb= 150, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 213.461967 ms

xsmm-custom Time (libxsmm): 213.462000 ms

xsmm-custom No. of CPU cycles: 213462000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 213.46196666666668

xsmm-custom avg execution time: 213.46196666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 375, 'a_size': 56250, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.013333333333333334, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.981505995057043, 'speedup_best_over_ref': 0.981505995057043, 'xsmm_custom_avg': 213.46196666666668, 'xsmm_custom_best': 213.46196666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 209.51420000000002, 'xsmm_reference_best': 209.51420000000002, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 81600).

Output array: C (125, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 217.437867 ms

xsmm-reference Time (libxsmm): 217.437900 ms

xsmm-reference No. of CPU cycles: 217437900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 217.43786666666668

xsmm-reference avg execution time: 217.43786666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 845616291 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 81600).

Output array: C (125, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 375

lda= 81600, ldb= 375, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 217.957067 ms

xsmm-custom Time (libxsmm): 217.957067 ms

xsmm-custom No. of CPU cycles: 217957066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 217.95706666666666

xsmm-custom avg execution time: 217.95706666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 375, 'a_nonzero': 1650, 'a_rows': 125, 'a_size': 46875, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0352, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9976178794845224, 'speedup_best_over_ref': 0.9976178794845224, 'xsmm_custom_avg': 217.95706666666666, 'xsmm_custom_best': 217.95706666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 217.43786666666668, 'xsmm_reference_best': 217.43786666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 81600).

Output array: C (375, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 178.115533 ms

xsmm-reference Time (libxsmm): 178.115567 ms

xsmm-reference No. of CPU cycles: 178115566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 178.11553333333333

xsmm-reference avg execution time: 178.11553333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 184579969 cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 81600).

Output array: C (375, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 125

lda= 81600, ldb= 125, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 180.309933 ms

xsmm-custom Time (libxsmm): 180.309933 ms

xsmm-custom No. of CPU cycles: 180309933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 180.30993333333333

xsmm-custom avg execution time: 180.30993333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 1650, 'a_rows': 375, 'a_size': 46875, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0352, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre-lobatto/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9878298440943724, 'speedup_best_over_ref': 0.9878298440943724, 'xsmm_custom_avg': 180.30993333333333, 'xsmm_custom_best': 180.30993333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 178.11553333333333, 'xsmm_reference_best': 178.11553333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 81600).

Output array: C (150, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 75.504000 ms

xsmm-reference Time (libxsmm): 75.503967 ms

xsmm-reference No. of CPU cycles: 75503966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 75.503999999999991

xsmm-reference avg execution time: 75.503999999999991

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 294992913 cleaned_data/example_mats/hex/p4/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m0.txt...

Read matrix has 150 rows and 125 columns.

Input arrays: A (150, 125), B (125, 81600).

Output array: C (150, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 150, k= 125

lda= 81600, ldb= 125, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 75.766800 ms

xsmm-custom Time (libxsmm): 75.766767 ms

xsmm-custom No. of CPU cycles: 75766766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 75.766800000000003

xsmm-custom avg execution time: 75.766800000000003

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 750, 'a_rows': 150, 'a_size': 18750, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9965314623291467, 'speedup_best_over_ref': 0.9965314623291467, 'xsmm_custom_avg': 75.7668, 'xsmm_custom_best': 75.7668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 75.50399999999999, 'xsmm_reference_best': 75.50399999999999, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 81600).

Output array: C (125, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 75.350033 ms

xsmm-reference Time (libxsmm): 75.350033 ms

xsmm-reference No. of CPU cycles: 75350033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 75.350033333333343

xsmm-reference avg execution time: 75.350033333333343

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 989543727 cleaned_data/example_mats/hex/p4/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m3.txt...

Read matrix has 125 rows and 150 columns.

Input arrays: A (125, 150), B (150, 81600).

Output array: C (125, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 150

lda= 81600, ldb= 150, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 75.432633 ms

xsmm-custom Time (libxsmm): 75.432600 ms

xsmm-custom No. of CPU cycles: 75432600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 75.432633333333328

xsmm-custom avg execution time: 75.432633333333328

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 125, 'a_size': 18750, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9989049832101846, 'speedup_best_over_ref': 0.9989049832101846, 'xsmm_custom_avg': 75.43263333333333, 'xsmm_custom_best': 75.43263333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 75.35003333333334, 'xsmm_reference_best': 75.35003333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 81600).

Output array: C (375, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 210.040933 ms

xsmm-reference Time (libxsmm): 210.040900 ms

xsmm-reference No. of CPU cycles: 210040900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 210.04093333333333

xsmm-reference avg execution time: 210.04093333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1912572008 cleaned_data/example_mats/hex/p4/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m6.txt...

Read matrix has 375 rows and 150 columns.

Input arrays: A (375, 150), B (150, 81600).

Output array: C (375, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 150

lda= 81600, ldb= 150, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 209.509667 ms

xsmm-custom Time (libxsmm): 209.509667 ms

xsmm-custom No. of CPU cycles: 209509666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 209.50966666666667

xsmm-custom avg execution time: 209.50966666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 150, 'a_nonzero': 750, 'a_rows': 375, 'a_size': 56250, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.013333333333333334, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0025357620730309, 'speedup_best_over_ref': 1.0025357620730309, 'xsmm_custom_avg': 209.50966666666667, 'xsmm_custom_best': 209.50966666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 210.04093333333333, 'xsmm_reference_best': 210.04093333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 81600).

Output array: C (125, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 215.744967 ms

xsmm-reference Time (libxsmm): 215.744967 ms

xsmm-reference No. of CPU cycles: 215744966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 215.74496666666667

xsmm-reference avg execution time: 215.74496666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1984047685 cleaned_data/example_mats/hex/p4/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m132.txt...

Read matrix has 125 rows and 375 columns.

Input arrays: A (125, 375), B (375, 81600).

Output array: C (125, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 125, k= 375

lda= 81600, ldb= 375, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 217.744367 ms

xsmm-custom Time (libxsmm): 217.744333 ms

xsmm-custom No. of CPU cycles: 217744333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 217.74436666666668

xsmm-custom avg execution time: 217.74436666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 375, 'a_nonzero': 1800, 'a_rows': 125, 'a_size': 46875, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0384, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9908176728950201, 'speedup_best_over_ref': 0.9908176728950201, 'xsmm_custom_avg': 217.74436666666668, 'xsmm_custom_best': 217.74436666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 215.74496666666667, 'xsmm_reference_best': 215.74496666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 81600).

Output array: C (375, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 176.952133 ms

xsmm-reference Time (libxsmm): 176.952133 ms

xsmm-reference No. of CPU cycles: 176952133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 176.95213333333334

xsmm-reference avg execution time: 176.95213333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 886951499 cleaned_data/example_mats/hex/p4/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p4/gauss-legendre/m460.txt...

Read matrix has 375 rows and 125 columns.

Input arrays: A (375, 125), B (125, 81600).

Output array: C (375, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 375, k= 125

lda= 81600, ldb= 125, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 180.247633 ms

xsmm-custom Time (libxsmm): 180.247633 ms

xsmm-custom No. of CPU cycles: 180247633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 180.24763333333334

xsmm-custom avg execution time: 180.24763333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 125, 'a_nonzero': 1800, 'a_rows': 375, 'a_size': 46875, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0384, 'mat_file': 'data/example_mats/hex/p4/gauss-legendre/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9817168195828369, 'speedup_best_over_ref': 0.9817168195828369, 'xsmm_custom_avg': 180.24763333333334, 'xsmm_custom_best': 180.24763333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 176.95213333333334, 'xsmm_reference_best': 176.95213333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 81600).

Output array: C (216, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 182.105433 ms

xsmm-reference Time (libxsmm): 182.105433 ms

xsmm-reference No. of CPU cycles: 182105433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 182.10543333333334

xsmm-reference avg execution time: 182.10543333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 41304394 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 81600).

Output array: C (216, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 81600, ldb= 216, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 183.833933 ms

xsmm-custom Time (libxsmm): 183.833933 ms

xsmm-custom No. of CPU cycles: 183833933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 183.83393333333333

xsmm-custom avg execution time: 183.83393333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 216, 'a_rows': 216, 'a_size': 46656, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.004629629629629629, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9905974921568705, 'speedup_best_over_ref': 0.9905974921568705, 'xsmm_custom_avg': 183.83393333333333, 'xsmm_custom_best': 183.83393333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 182.10543333333334, 'xsmm_reference_best': 182.10543333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 81600).

Output array: C (216, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 182.474667 ms

xsmm-reference Time (libxsmm): 182.474700 ms

xsmm-reference No. of CPU cycles: 182474700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 182.47466666666665

xsmm-reference avg execution time: 182.47466666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1933162283 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 81600).

Output array: C (216, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 81600, ldb= 216, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 181.881967 ms

xsmm-custom Time (libxsmm): 181.881933 ms

xsmm-custom No. of CPU cycles: 181881933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 181.88196666666667

xsmm-custom avg execution time: 181.88196666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 216, 'a_size': 46656, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0032587067913457, 'speedup_best_over_ref': 1.0032587067913457, 'xsmm_custom_avg': 181.88196666666667, 'xsmm_custom_best': 181.88196666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 182.47466666666665, 'xsmm_reference_best': 182.47466666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 81600).

Output array: C (648, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 526.975300 ms

xsmm-reference Time (libxsmm): 526.975300 ms

xsmm-reference No. of CPU cycles: 526975300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 526.97529999999995

xsmm-reference avg execution time: 526.97529999999995

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1144239312 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 81600).

Output array: C (648, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 81600, ldb= 216, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 523.563833 ms

xsmm-custom Time (libxsmm): 523.563833 ms

xsmm-custom No. of CPU cycles: 523563833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 523.56383333333338

xsmm-custom avg execution time: 523.56383333333338

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 648, 'a_size': 139968, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.009259259259259259, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0065158562327483, 'speedup_best_over_ref': 1.0065158562327483, 'xsmm_custom_avg': 523.5638333333334, 'xsmm_custom_best': 523.5638333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 526.9753, 'xsmm_reference_best': 526.9753, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 81600).

Output array: C (216, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 633.336367 ms

xsmm-reference Time (libxsmm): 633.336367 ms

xsmm-reference No. of CPU cycles: 633336366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 633.33636666666666

xsmm-reference avg execution time: 633.33636666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 262925949 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 81600).

Output array: C (216, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 648

lda= 81600, ldb= 648, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 637.618233 ms

xsmm-custom Time (libxsmm): 637.618233 ms

xsmm-custom No. of CPU cycles: 637618233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 637.61823333333325

xsmm-custom avg execution time: 637.61823333333325

Freeing A

Freeing B

Freeing C

{'a_cols': 648, 'a_nonzero': 3456, 'a_rows': 216, 'a_size': 139968, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.024691358024691357, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9932845918720331, 'speedup_best_over_ref': 0.9932845918720331, 'xsmm_custom_avg': 637.6182333333333, 'xsmm_custom_best': 637.6182333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 633.3363666666667, 'xsmm_reference_best': 633.3363666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 81600).

Output array: C (648, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 530.121200 ms

xsmm-reference Time (libxsmm): 530.121200 ms

xsmm-reference No. of CPU cycles: 530121200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 530.12120000000004

xsmm-reference avg execution time: 530.12120000000004

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 820375548 cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 81600).

Output array: C (648, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 81600, ldb= 216, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 539.359267 ms

xsmm-custom Time (libxsmm): 539.359233 ms

xsmm-custom No. of CPU cycles: 539359233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 539.35926666666671

xsmm-custom avg execution time: 539.35926666666671

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 3456, 'a_rows': 648, 'a_size': 139968, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.024691358024691357, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre-lobatto/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.982872146197173, 'speedup_best_over_ref': 0.982872146197173, 'xsmm_custom_avg': 539.3592666666667, 'xsmm_custom_best': 539.3592666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 530.1212, 'xsmm_reference_best': 530.1212, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 81600).

Output array: C (216, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 182.656900 ms

xsmm-reference Time (libxsmm): 182.656867 ms

xsmm-reference No. of CPU cycles: 182656866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 182.65690000000001

xsmm-reference avg execution time: 182.65690000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1691538502 cleaned_data/example_mats/hex/p5/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m0.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 81600).

Output array: C (216, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 81600, ldb= 216, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 182.185433 ms

xsmm-custom Time (libxsmm): 182.185400 ms

xsmm-custom No. of CPU cycles: 182185400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 182.18543333333335

xsmm-custom avg execution time: 182.18543333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 216, 'a_size': 46656, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0025878395327252, 'speedup_best_over_ref': 1.0025878395327252, 'xsmm_custom_avg': 182.18543333333335, 'xsmm_custom_best': 182.18543333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 182.6569, 'xsmm_reference_best': 182.6569, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 81600).

Output array: C (216, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 186.953900 ms

xsmm-reference Time (libxsmm): 186.953900 ms

xsmm-reference No. of CPU cycles: 186953900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 186.9539

xsmm-reference avg execution time: 186.9539

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 645782592 cleaned_data/example_mats/hex/p5/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m3.txt...

Read matrix has 216 rows and 216 columns.

Input arrays: A (216, 216), B (216, 81600).

Output array: C (216, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 216

lda= 81600, ldb= 216, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 183.255300 ms

xsmm-custom Time (libxsmm): 183.255267 ms

xsmm-custom No. of CPU cycles: 183255266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 183.25529999999998

xsmm-custom avg execution time: 183.25529999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 216, 'a_size': 46656, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.020182772340009, 'speedup_best_over_ref': 1.020182772340009, 'xsmm_custom_avg': 183.25529999999998, 'xsmm_custom_best': 183.25529999999998, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 186.9539, 'xsmm_reference_best': 186.9539, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 81600).

Output array: C (648, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 528.968333 ms

xsmm-reference Time (libxsmm): 528.968333 ms

xsmm-reference No. of CPU cycles: 528968333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 528.96833333333336

xsmm-reference avg execution time: 528.96833333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1669707971 cleaned_data/example_mats/hex/p5/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m6.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 81600).

Output array: C (648, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 81600, ldb= 216, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 528.854667 ms

xsmm-custom Time (libxsmm): 528.854633 ms

xsmm-custom No. of CPU cycles: 528854633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 528.85466666666662

xsmm-custom avg execution time: 528.85466666666662

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 1296, 'a_rows': 648, 'a_size': 139968, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.009259259259259259, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0002149298736138, 'speedup_best_over_ref': 1.0002149298736138, 'xsmm_custom_avg': 528.8546666666666, 'xsmm_custom_best': 528.8546666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 528.9683333333334, 'xsmm_reference_best': 528.9683333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 81600).

Output array: C (216, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 635.915900 ms

xsmm-reference Time (libxsmm): 635.915900 ms

xsmm-reference No. of CPU cycles: 635915900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 635.91589999999997

xsmm-reference avg execution time: 635.91589999999997

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 71480076 cleaned_data/example_mats/hex/p5/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m132.txt...

Read matrix has 216 rows and 648 columns.

Input arrays: A (216, 648), B (648, 81600).

Output array: C (216, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 216, k= 648

lda= 81600, ldb= 648, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 216

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 636.276600 ms

xsmm-custom Time (libxsmm): 636.276600 ms

xsmm-custom No. of CPU cycles: 636276600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 636.27659999999992

xsmm-custom avg execution time: 636.27659999999992

Freeing A

Freeing B

Freeing C

{'a_cols': 648, 'a_nonzero': 3888, 'a_rows': 216, 'a_size': 139968, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9994331081796817, 'speedup_best_over_ref': 0.9994331081796817, 'xsmm_custom_avg': 636.2765999999999, 'xsmm_custom_best': 636.2765999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 635.9159, 'xsmm_reference_best': 635.9159, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 81600).

Output array: C (648, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 534.583867 ms

xsmm-reference Time (libxsmm): 534.583833 ms

xsmm-reference No. of CPU cycles: 534583833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 534.58386666666661

xsmm-reference avg execution time: 534.58386666666661

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 2022385220 cleaned_data/example_mats/hex/p5/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p5/gauss-legendre/m460.txt...

Read matrix has 648 rows and 216 columns.

Input arrays: A (648, 216), B (216, 81600).

Output array: C (648, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 648, k= 216

lda= 81600, ldb= 216, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 648

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 528.132033 ms

xsmm-custom Time (libxsmm): 528.132033 ms

xsmm-custom No. of CPU cycles: 528132033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 528.13203333333331

xsmm-custom avg execution time: 528.13203333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 216, 'a_nonzero': 3888, 'a_rows': 648, 'a_size': 139968, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/hex/p5/gauss-legendre/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0122163264602835, 'speedup_best_over_ref': 1.0122163264602835, 'xsmm_custom_avg': 528.1320333333333, 'xsmm_custom_best': 528.1320333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 534.5838666666666, 'xsmm_reference_best': 534.5838666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 81600).

Output array: C (294, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 444.765833 ms

xsmm-reference Time (libxsmm): 444.765800 ms

xsmm-reference No. of CPU cycles: 444765800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 444.76583333333332

xsmm-reference avg execution time: 444.76583333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1739705146 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 81600).

Output array: C (294, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 294, k= 343

lda= 81600, ldb= 343, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 444.009700 ms

xsmm-custom Time (libxsmm): 444.009667 ms

xsmm-custom No. of CPU cycles: 444009666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 444.00969999999995

xsmm-custom avg execution time: 444.00969999999995

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 294, 'a_rows': 294, 'a_size': 100842, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0029154518950437317, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.00170296579857, 'speedup_best_over_ref': 1.00170296579857, 'xsmm_custom_avg': 444.00969999999995, 'xsmm_custom_best': 444.00969999999995, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 444.7658333333333, 'xsmm_reference_best': 444.7658333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 81600).

Output array: C (343, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 442.457567 ms

xsmm-reference Time (libxsmm): 442.457567 ms

xsmm-reference No. of CPU cycles: 442457566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 442.45756666666671

xsmm-reference avg execution time: 442.45756666666671

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1408016792 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 81600).

Output array: C (343, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 294

lda= 81600, ldb= 294, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 444.496033 ms

xsmm-custom Time (libxsmm): 444.496000 ms

xsmm-custom No. of CPU cycles: 444496000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 444.49603333333329

xsmm-custom avg execution time: 444.49603333333329

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 343, 'a_size': 100842, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9954139823220022, 'speedup_best_over_ref': 0.9954139823220022, 'xsmm_custom_avg': 444.4960333333333, 'xsmm_custom_best': 444.4960333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 442.4575666666667, 'xsmm_reference_best': 442.4575666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 81600).

Output array: C (1029, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1318.082233 ms

xsmm-reference Time (libxsmm): 1318.082200 ms

xsmm-reference No. of CPU cycles: 1318082200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1318.0822333333333

xsmm-reference avg execution time: 1318.0822333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1807768256 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 81600).

Output array: C (1029, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 294

lda= 81600, ldb= 294, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1303.730467 ms

xsmm-custom Time (libxsmm): 1303.730467 ms

xsmm-custom No. of CPU cycles: 1303730466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1303.7304666666666

xsmm-custom avg execution time: 1303.7304666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 1029, 'a_size': 302526, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.006802721088435374, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.011008231404886, 'speedup_best_over_ref': 1.011008231404886, 'xsmm_custom_avg': 1303.7304666666666, 'xsmm_custom_best': 1303.7304666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1318.0822333333333, 'xsmm_reference_best': 1318.0822333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 81600).

Output array: C (343, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1558.123600 ms

xsmm-reference Time (libxsmm): 1558.123600 ms

xsmm-reference No. of CPU cycles: 1558123600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1558.1235999999999

xsmm-reference avg execution time: 1558.1235999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 660125374 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 81600).

Output array: C (343, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 1029

lda= 81600, ldb= 1029, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1562.142200 ms

xsmm-custom Time (libxsmm): 1562.142167 ms

xsmm-custom No. of CPU cycles: 1562142166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1562.1422

xsmm-custom avg execution time: 1562.1422

Freeing A

Freeing B

Freeing C

{'a_cols': 1029, 'a_nonzero': 6468, 'a_rows': 343, 'a_size': 352947, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.018325697625989172, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9974275069196645, 'speedup_best_over_ref': 0.9974275069196645, 'xsmm_custom_avg': 1562.1422, 'xsmm_custom_best': 1562.1422, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1558.1236, 'xsmm_reference_best': 1558.1236, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 81600).

Output array: C (1029, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1511.202300 ms

xsmm-reference Time (libxsmm): 1511.202300 ms

xsmm-reference No. of CPU cycles: 1511202300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1511.2023000000002

xsmm-reference avg execution time: 1511.2023000000002

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1880480757 cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 81600).

Output array: C (1029, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 343

lda= 81600, ldb= 343, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1530.384567 ms

xsmm-custom Time (libxsmm): 1530.384533 ms

xsmm-custom No. of CPU cycles: 1530384533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1530.3845666666666

xsmm-custom avg execution time: 1530.3845666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 6468, 'a_rows': 1029, 'a_size': 352947, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.018325697625989172, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre-lobatto/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9874657213066077, 'speedup_best_over_ref': 0.9874657213066077, 'xsmm_custom_avg': 1530.3845666666666, 'xsmm_custom_best': 1530.3845666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1511.2023000000002, 'xsmm_reference_best': 1511.2023000000002, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 81600).

Output array: C (294, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 444.576800 ms

xsmm-reference Time (libxsmm): 444.576800 ms

xsmm-reference No. of CPU cycles: 444576800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 444.57679999999999

xsmm-reference avg execution time: 444.57679999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1476257833 cleaned_data/example_mats/hex/p6/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m0.txt...

Read matrix has 294 rows and 343 columns.

Input arrays: A (294, 343), B (343, 81600).

Output array: C (294, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 294, k= 343

lda= 81600, ldb= 343, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 442.021933 ms

xsmm-custom Time (libxsmm): 442.021900 ms

xsmm-custom No. of CPU cycles: 442021900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 442.02193333333332

xsmm-custom avg execution time: 442.02193333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 2058, 'a_rows': 294, 'a_size': 100842, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0057799545090447, 'speedup_best_over_ref': 1.0057799545090447, 'xsmm_custom_avg': 442.0219333333333, 'xsmm_custom_best': 442.0219333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 444.5768, 'xsmm_reference_best': 444.5768, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 81600).

Output array: C (343, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 445.159500 ms

xsmm-reference Time (libxsmm): 445.159500 ms

xsmm-reference No. of CPU cycles: 445159500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 445.15949999999998

xsmm-reference avg execution time: 445.15949999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 164491239 cleaned_data/example_mats/hex/p6/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m3.txt...

Read matrix has 343 rows and 294 columns.

Input arrays: A (343, 294), B (294, 81600).

Output array: C (343, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 294

lda= 81600, ldb= 294, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 441.820167 ms

xsmm-custom Time (libxsmm): 441.820167 ms

xsmm-custom No. of CPU cycles: 441820166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 441.82016666666664

xsmm-custom avg execution time: 441.82016666666664

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 343, 'a_size': 100842, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0075581279110166, 'speedup_best_over_ref': 1.0075581279110166, 'xsmm_custom_avg': 441.82016666666664, 'xsmm_custom_best': 441.82016666666664, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 445.1595, 'xsmm_reference_best': 445.1595, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 81600).

Output array: C (1029, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1308.022900 ms

xsmm-reference Time (libxsmm): 1308.022867 ms

xsmm-reference No. of CPU cycles: 1308022866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1308.0228999999999

xsmm-reference avg execution time: 1308.0228999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 375776174 cleaned_data/example_mats/hex/p6/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m6.txt...

Read matrix has 1029 rows and 294 columns.

Input arrays: A (1029, 294), B (294, 81600).

Output array: C (1029, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 294

lda= 81600, ldb= 294, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1313.497133 ms

xsmm-custom Time (libxsmm): 1313.497133 ms

xsmm-custom No. of CPU cycles: 1313497133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1313.4971333333333

xsmm-custom avg execution time: 1313.4971333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 294, 'a_nonzero': 2058, 'a_rows': 1029, 'a_size': 302526, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.006802721088435374, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9958323218266635, 'speedup_best_over_ref': 0.9958323218266635, 'xsmm_custom_avg': 1313.4971333333333, 'xsmm_custom_best': 1313.4971333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1308.0229, 'xsmm_reference_best': 1308.0229, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 81600).

Output array: C (343, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1573.891400 ms

xsmm-reference Time (libxsmm): 1573.891400 ms

xsmm-reference No. of CPU cycles: 1573891400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1573.8914

xsmm-reference avg execution time: 1573.8914

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1119673080 cleaned_data/example_mats/hex/p6/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m132.txt...

Read matrix has 343 rows and 1029 columns.

Input arrays: A (343, 1029), B (1029, 81600).

Output array: C (343, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 343, k= 1029

lda= 81600, ldb= 1029, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1576.914233 ms

xsmm-custom Time (libxsmm): 1576.914200 ms

xsmm-custom No. of CPU cycles: 1576914200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1576.9142333333334

xsmm-custom avg execution time: 1576.9142333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 1029, 'a_nonzero': 7056, 'a_rows': 343, 'a_size': 352947, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.019991670137442734, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9980830705504232, 'speedup_best_over_ref': 0.9980830705504232, 'xsmm_custom_avg': 1576.9142333333334, 'xsmm_custom_best': 1576.9142333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1573.8914, 'xsmm_reference_best': 1573.8914, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 81600).

Output array: C (1029, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1525.199700 ms

xsmm-reference Time (libxsmm): 1525.199700 ms

xsmm-reference No. of CPU cycles: 1525199700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1525.1997000000001

xsmm-reference avg execution time: 1525.1997000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1171372326 cleaned_data/example_mats/hex/p6/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/hex/p6/gauss-legendre/m460.txt...

Read matrix has 1029 rows and 343 columns.

Input arrays: A (1029, 343), B (343, 81600).

Output array: C (1029, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 1029, k= 343

lda= 81600, ldb= 343, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1517.569967 ms

xsmm-custom Time (libxsmm): 1517.569967 ms

xsmm-custom No. of CPU cycles: 1517569966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1517.5699666666667

xsmm-custom avg execution time: 1517.5699666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 343, 'a_nonzero': 7056, 'a_rows': 1029, 'a_size': 352947, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.019991670137442734, 'mat_file': 'data/example_mats/hex/p6/gauss-legendre/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0050275990569926, 'speedup_best_over_ref': 1.0050275990569926, 'xsmm_custom_avg': 1517.5699666666667, 'xsmm_custom_best': 1517.5699666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1525.1997000000001, 'xsmm_reference_best': 1525.1997000000001, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m0.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 81600).

Output array: C (8, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.227567 ms

xsmm-reference Time (libxsmm): 0.227567 ms

xsmm-reference No. of CPU cycles: 227566

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.22756666666666667

xsmm-reference avg execution time: 0.22756666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 443349703 cleaned_data/example_mats/quad/p1/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m0.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 81600).

Output array: C (8, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 4

lda= 81600, ldb= 4, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.260133 ms

xsmm-custom Time (libxsmm): 0.260133 ms

xsmm-custom No. of CPU cycles: 260133

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.26013333333333333

xsmm-custom avg execution time: 0.26013333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 16, 'a_rows': 8, 'a_size': 32, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.8748077908764736, 'speedup_best_over_ref': 0.8748077908764736, 'xsmm_custom_avg': 0.2601333333333333, 'xsmm_custom_best': 0.2601333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.22756666666666667, 'xsmm_reference_best': 0.22756666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m3.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 81600).

Output array: C (4, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.207600 ms

xsmm-reference Time (libxsmm): 0.207600 ms

xsmm-reference No. of CPU cycles: 207600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.20759999999999998

xsmm-reference avg execution time: 0.20759999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 435118701 cleaned_data/example_mats/quad/p1/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m3.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 81600).

Output array: C (4, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 8

lda= 81600, ldb= 8, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.225767 ms

xsmm-custom Time (libxsmm): 0.225767 ms

xsmm-custom No. of CPU cycles: 225766

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.22576666666666664

xsmm-custom avg execution time: 0.22576666666666664

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 16, 'a_rows': 4, 'a_size': 32, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9195334416063783, 'speedup_best_over_ref': 0.9195334416063783, 'xsmm_custom_avg': 0.22576666666666664, 'xsmm_custom_best': 0.22576666666666664, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.20759999999999998, 'xsmm_reference_best': 0.20759999999999998, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m6.txt...

Read matrix has 8 rows and 8 columns.

Input arrays: A (8, 8), B (8, 81600).

Output array: C (8, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.350967 ms

xsmm-reference Time (libxsmm): 0.350967 ms

xsmm-reference No. of CPU cycles: 350966

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.35096666666666665

xsmm-reference avg execution time: 0.35096666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 729426826 cleaned_data/example_mats/quad/p1/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m6.txt...

Read matrix has 8 rows and 8 columns.

Input arrays: A (8, 8), B (8, 81600).

Output array: C (8, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 8

lda= 81600, ldb= 8, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.372300 ms

xsmm-custom Time (libxsmm): 0.372300 ms

xsmm-custom No. of CPU cycles: 372300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.37230000000000002

xsmm-custom avg execution time: 0.37230000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 16, 'a_rows': 8, 'a_size': 64, 'a_unique': 2, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9426985406034559, 'speedup_best_over_ref': 0.9426985406034559, 'xsmm_custom_avg': 0.3723, 'xsmm_custom_best': 0.3723, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.35096666666666665, 'xsmm_reference_best': 0.35096666666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m132.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 81600).

Output array: C (4, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.207500 ms

xsmm-reference Time (libxsmm): 0.207500 ms

xsmm-reference No. of CPU cycles: 207500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.20749999999999999

xsmm-reference avg execution time: 0.20749999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 2128173301 cleaned_data/example_mats/quad/p1/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m132.txt...

Read matrix has 4 rows and 8 columns.

Input arrays: A (4, 8), B (8, 81600).

Output array: C (4, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 8

lda= 81600, ldb= 8, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.235100 ms

xsmm-custom Time (libxsmm): 0.235100 ms

xsmm-custom No. of CPU cycles: 235100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.2351

xsmm-custom avg execution time: 0.2351

Freeing A

Freeing B

Freeing C

{'a_cols': 8, 'a_nonzero': 16, 'a_rows': 4, 'a_size': 32, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.8826031475967673, 'speedup_best_over_ref': 0.8826031475967673, 'xsmm_custom_avg': 0.2351, 'xsmm_custom_best': 0.2351, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.2075, 'xsmm_reference_best': 0.2075, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m460.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 81600).

Output array: C (8, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.259533 ms

xsmm-reference Time (libxsmm): 0.259533 ms

xsmm-reference No. of CPU cycles: 259533

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.25953333333333334

xsmm-reference avg execution time: 0.25953333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 390771307 cleaned_data/example_mats/quad/p1/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p1/gauss-legendre/m460.txt...

Read matrix has 8 rows and 4 columns.

Input arrays: A (8, 4), B (4, 81600).

Output array: C (8, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 8, k= 4

lda= 81600, ldb= 4, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 8

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.280700 ms

xsmm-custom Time (libxsmm): 0.280700 ms

xsmm-custom No. of CPU cycles: 280700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.28070000000000001

xsmm-custom avg execution time: 0.28070000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 16, 'a_rows': 8, 'a_size': 32, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/quad/p1/gauss-legendre/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9245932787079919, 'speedup_best_over_ref': 0.9245932787079919, 'xsmm_custom_avg': 0.2807, 'xsmm_custom_best': 0.2807, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.25953333333333334, 'xsmm_reference_best': 0.25953333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 81600).

Output array: C (12, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.488933 ms

xsmm-reference Time (libxsmm): 0.488933 ms

xsmm-reference No. of CPU cycles: 488933

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.48893333333333333

xsmm-reference avg execution time: 0.48893333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 596132954 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 81600).

Output array: C (12, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 9

lda= 81600, ldb= 9, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.483600 ms

xsmm-custom Time (libxsmm): 0.483600 ms

xsmm-custom No. of CPU cycles: 483600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.48359999999999997

xsmm-custom avg execution time: 0.48359999999999997

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 12, 'a_rows': 12, 'a_size': 108, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1111111111111111, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0110283981251724, 'speedup_best_over_ref': 1.0110283981251724, 'xsmm_custom_avg': 0.4836, 'xsmm_custom_best': 0.4836, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.48893333333333333, 'xsmm_reference_best': 0.48893333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 81600).

Output array: C (9, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.479433 ms

xsmm-reference Time (libxsmm): 0.479433 ms

xsmm-reference No. of CPU cycles: 479433

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.47943333333333332

xsmm-reference avg execution time: 0.47943333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1505628805 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 81600).

Output array: C (9, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 12

lda= 81600, ldb= 12, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.479500 ms

xsmm-custom Time (libxsmm): 0.479500 ms

xsmm-custom No. of CPU cycles: 479500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.47949999999999998

xsmm-custom avg execution time: 0.47949999999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 9, 'a_size': 108, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.3333333333333333, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.999860966284324, 'speedup_best_over_ref': 0.999860966284324, 'xsmm_custom_avg': 0.4795, 'xsmm_custom_best': 0.4795, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4794333333333333, 'xsmm_reference_best': 0.4794333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 81600).

Output array: C (18, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.002533 ms

xsmm-reference Time (libxsmm): 1.002533 ms

xsmm-reference No. of CPU cycles: 1002533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.0025333333333333

xsmm-reference avg execution time: 1.0025333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1068600857 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 81600).

Output array: C (18, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 12

lda= 81600, ldb= 12, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.018800 ms

xsmm-custom Time (libxsmm): 1.018800 ms

xsmm-custom No. of CPU cycles: 1018800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.0187999999999999

xsmm-custom avg execution time: 1.0187999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 18, 'a_size': 216, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9840335034681325, 'speedup_best_over_ref': 0.9840335034681325, 'xsmm_custom_avg': 1.0188, 'xsmm_custom_best': 1.0188, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.0025333333333333, 'xsmm_reference_best': 1.0025333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 81600).

Output array: C (9, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.695067 ms

xsmm-reference Time (libxsmm): 0.695067 ms

xsmm-reference No. of CPU cycles: 695066

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.69506666666666672

xsmm-reference avg execution time: 0.69506666666666672

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1551167845 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 81600).

Output array: C (9, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 18

lda= 81600, ldb= 18, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.706733 ms

xsmm-custom Time (libxsmm): 0.706733 ms

xsmm-custom No. of CPU cycles: 706733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.70673333333333344

xsmm-custom avg execution time: 0.70673333333333344

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 48, 'a_rows': 9, 'a_size': 162, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9834921233845862, 'speedup_best_over_ref': 0.9834921233845862, 'xsmm_custom_avg': 0.7067333333333334, 'xsmm_custom_best': 0.7067333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6950666666666667, 'xsmm_reference_best': 0.6950666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 81600).

Output array: C (18, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.736867 ms

xsmm-reference Time (libxsmm): 0.736833 ms

xsmm-reference No. of CPU cycles: 736833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.73686666666666667

xsmm-reference avg execution time: 0.73686666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1217113484 cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 81600).

Output array: C (18, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 9

lda= 81600, ldb= 9, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.751400 ms

xsmm-custom Time (libxsmm): 0.751400 ms

xsmm-custom No. of CPU cycles: 751400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.75140000000000007

xsmm-custom avg execution time: 0.75140000000000007

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 48, 'a_rows': 18, 'a_size': 162, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre-lobatto/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9806583266790878, 'speedup_best_over_ref': 0.9806583266790878, 'xsmm_custom_avg': 0.7514000000000001, 'xsmm_custom_best': 0.7514000000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.7368666666666667, 'xsmm_reference_best': 0.7368666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 81600).

Output array: C (12, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.475667 ms

xsmm-reference Time (libxsmm): 0.475667 ms

xsmm-reference No. of CPU cycles: 475666

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.47566666666666663

xsmm-reference avg execution time: 0.47566666666666663

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1228506884 cleaned_data/example_mats/quad/p2/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m0.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 81600).

Output array: C (12, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 9

lda= 81600, ldb= 9, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.475333 ms

xsmm-custom Time (libxsmm): 0.475333 ms

xsmm-custom No. of CPU cycles: 475333

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.47533333333333333

xsmm-custom avg execution time: 0.47533333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 36, 'a_rows': 12, 'a_size': 108, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.3333333333333333, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0007012622720897, 'speedup_best_over_ref': 1.0007012622720897, 'xsmm_custom_avg': 0.47533333333333333, 'xsmm_custom_best': 0.47533333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4756666666666666, 'xsmm_reference_best': 0.4756666666666666, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 81600).

Output array: C (9, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.460400 ms

xsmm-reference Time (libxsmm): 0.460400 ms

xsmm-reference No. of CPU cycles: 460400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.46039999999999998

xsmm-reference avg execution time: 0.46039999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 213102487 cleaned_data/example_mats/quad/p2/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m3.txt...

Read matrix has 9 rows and 12 columns.

Input arrays: A (9, 12), B (12, 81600).

Output array: C (9, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 12

lda= 81600, ldb= 12, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.477367 ms

xsmm-custom Time (libxsmm): 0.477367 ms

xsmm-custom No. of CPU cycles: 477366

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.47736666666666666

xsmm-custom avg execution time: 0.47736666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 9, 'a_size': 108, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.3333333333333333, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9644577892605265, 'speedup_best_over_ref': 0.9644577892605265, 'xsmm_custom_avg': 0.47736666666666666, 'xsmm_custom_best': 0.47736666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.4604, 'xsmm_reference_best': 0.4604, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 81600).

Output array: C (18, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.011533 ms

xsmm-reference Time (libxsmm): 1.011533 ms

xsmm-reference No. of CPU cycles: 1011533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.0115333333333334

xsmm-reference avg execution time: 1.0115333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 982150040 cleaned_data/example_mats/quad/p2/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m6.txt...

Read matrix has 18 rows and 12 columns.

Input arrays: A (18, 12), B (12, 81600).

Output array: C (18, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 12

lda= 81600, ldb= 12, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.043200 ms

xsmm-custom Time (libxsmm): 1.043200 ms

xsmm-custom No. of CPU cycles: 1043200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.0431999999999999

xsmm-custom avg execution time: 1.0431999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 36, 'a_rows': 18, 'a_size': 216, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.969644683026585, 'speedup_best_over_ref': 0.969644683026585, 'xsmm_custom_avg': 1.0432, 'xsmm_custom_best': 1.0432, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.0115333333333334, 'xsmm_reference_best': 1.0115333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 81600).

Output array: C (9, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.695300 ms

xsmm-reference Time (libxsmm): 0.695300 ms

xsmm-reference No. of CPU cycles: 695300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.69530000000000003

xsmm-reference avg execution time: 0.69530000000000003

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1511821829 cleaned_data/example_mats/quad/p2/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m132.txt...

Read matrix has 9 rows and 18 columns.

Input arrays: A (9, 18), B (18, 81600).

Output array: C (9, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 18

lda= 81600, ldb= 18, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.716300 ms

xsmm-custom Time (libxsmm): 0.716300 ms

xsmm-custom No. of CPU cycles: 716300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.71630000000000005

xsmm-custom avg execution time: 0.71630000000000005

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 48, 'a_rows': 9, 'a_size': 162, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9706826748569035, 'speedup_best_over_ref': 0.9706826748569035, 'xsmm_custom_avg': 0.7163, 'xsmm_custom_best': 0.7163, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6953, 'xsmm_reference_best': 0.6953, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 81600).

Output array: C (18, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.749667 ms

xsmm-reference Time (libxsmm): 0.749667 ms

xsmm-reference No. of CPU cycles: 749666

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.74966666666666659

xsmm-reference avg execution time: 0.74966666666666659

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1241109661 cleaned_data/example_mats/quad/p2/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p2/gauss-legendre/m460.txt...

Read matrix has 18 rows and 9 columns.

Input arrays: A (18, 9), B (9, 81600).

Output array: C (18, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 9

lda= 81600, ldb= 9, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.734767 ms

xsmm-custom Time (libxsmm): 0.734767 ms

xsmm-custom No. of CPU cycles: 734766

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.73476666666666668

xsmm-custom avg execution time: 0.73476666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 48, 'a_rows': 18, 'a_size': 162, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2962962962962963, 'mat_file': 'data/example_mats/quad/p2/gauss-legendre/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0202785464773396, 'speedup_best_over_ref': 1.0202785464773396, 'xsmm_custom_avg': 0.7347666666666667, 'xsmm_custom_best': 0.7347666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.7496666666666666, 'xsmm_reference_best': 0.7496666666666666, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 81600).

Output array: C (16, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.187967 ms

xsmm-reference Time (libxsmm): 1.187967 ms

xsmm-reference No. of CPU cycles: 1187966

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.1879666666666668

xsmm-reference avg execution time: 1.1879666666666668

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1858945909 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 81600).

Output array: C (16, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 81600, ldb= 16, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.254267 ms

xsmm-custom Time (libxsmm): 1.254233 ms

xsmm-custom No. of CPU cycles: 1254233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.2542666666666666

xsmm-custom avg execution time: 1.2542666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 16, 'a_rows': 16, 'a_size': 256, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.0625, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9471404273413417, 'speedup_best_over_ref': 0.9471404273413417, 'xsmm_custom_avg': 1.2542666666666666, 'xsmm_custom_best': 1.2542666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.1879666666666668, 'xsmm_reference_best': 1.1879666666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 81600).

Output array: C (16, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.209900 ms

xsmm-reference Time (libxsmm): 1.209900 ms

xsmm-reference No. of CPU cycles: 1209900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.2099

xsmm-reference avg execution time: 1.2099

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1179931828 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 81600).

Output array: C (16, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 81600, ldb= 16, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.263600 ms

xsmm-custom Time (libxsmm): 1.263600 ms

xsmm-custom No. of CPU cycles: 1263600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.2636000000000001

xsmm-custom avg execution time: 1.2636000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 16, 'a_size': 256, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9575023741690408, 'speedup_best_over_ref': 0.9575023741690408, 'xsmm_custom_avg': 1.2636, 'xsmm_custom_best': 1.2636, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.2099, 'xsmm_reference_best': 1.2099, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 81600).

Output array: C (32, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.826967 ms

xsmm-reference Time (libxsmm): 2.826933 ms

xsmm-reference No. of CPU cycles: 2826933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.8269666666666664

xsmm-reference avg execution time: 2.8269666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 2058259467 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 81600).

Output array: C (32, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 81600, ldb= 16, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.862933 ms

xsmm-custom Time (libxsmm): 2.862933 ms

xsmm-custom No. of CPU cycles: 2862933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.8629333333333333

xsmm-custom avg execution time: 2.8629333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 32, 'a_size': 512, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.125, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9874371274217585, 'speedup_best_over_ref': 0.9874371274217585, 'xsmm_custom_avg': 2.8629333333333333, 'xsmm_custom_best': 2.8629333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.8269666666666664, 'xsmm_reference_best': 2.8269666666666664, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 81600).

Output array: C (16, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.015333 ms

xsmm-reference Time (libxsmm): 3.015300 ms

xsmm-reference No. of CPU cycles: 3015300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.015333333333333

xsmm-reference avg execution time: 3.015333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 2012325356 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 81600).

Output array: C (16, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 32

lda= 81600, ldb= 32, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.226267 ms

xsmm-custom Time (libxsmm): 3.226267 ms

xsmm-custom No. of CPU cycles: 3226266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.2262666666666666

xsmm-custom avg execution time: 3.2262666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 32, 'a_nonzero': 112, 'a_rows': 16, 'a_size': 512, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.21875, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9346199942141586, 'speedup_best_over_ref': 0.9346199942141586, 'xsmm_custom_avg': 3.2262666666666666, 'xsmm_custom_best': 3.2262666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.015333333333333, 'xsmm_reference_best': 3.015333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 81600).

Output array: C (32, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.809700 ms

xsmm-reference Time (libxsmm): 2.809700 ms

xsmm-reference No. of CPU cycles: 2809700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.8096999999999999

xsmm-reference avg execution time: 2.8096999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 123337718 cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 81600).

Output array: C (32, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 81600, ldb= 16, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.887167 ms

xsmm-custom Time (libxsmm): 2.887167 ms

xsmm-custom No. of CPU cycles: 2887166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.8871666666666664

xsmm-custom avg execution time: 2.8871666666666664

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 112, 'a_rows': 32, 'a_size': 512, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.21875, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre-lobatto/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9731686197540842, 'speedup_best_over_ref': 0.9731686197540842, 'xsmm_custom_avg': 2.8871666666666664, 'xsmm_custom_best': 2.8871666666666664, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.8097, 'xsmm_reference_best': 2.8097, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 81600).

Output array: C (16, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.208000 ms

xsmm-reference Time (libxsmm): 1.208000 ms

xsmm-reference No. of CPU cycles: 1208000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.208

xsmm-reference avg execution time: 1.208

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 794664946 cleaned_data/example_mats/quad/p3/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m0.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 81600).

Output array: C (16, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 81600, ldb= 16, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.254800 ms

xsmm-custom Time (libxsmm): 1.254800 ms

xsmm-custom No. of CPU cycles: 1254800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.2547999999999999

xsmm-custom avg execution time: 1.2547999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 16, 'a_size': 256, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9627032196365956, 'speedup_best_over_ref': 0.9627032196365956, 'xsmm_custom_avg': 1.2548, 'xsmm_custom_best': 1.2548, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.208, 'xsmm_reference_best': 1.208, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 81600).

Output array: C (16, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.224200 ms

xsmm-reference Time (libxsmm): 1.224200 ms

xsmm-reference No. of CPU cycles: 1224200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.2242

xsmm-reference avg execution time: 1.2242

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1004246665 cleaned_data/example_mats/quad/p3/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m3.txt...

Read matrix has 16 rows and 16 columns.

Input arrays: A (16, 16), B (16, 81600).

Output array: C (16, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 16

lda= 81600, ldb= 16, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.265500 ms

xsmm-custom Time (libxsmm): 1.265500 ms

xsmm-custom No. of CPU cycles: 1265500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.2655000000000001

xsmm-custom avg execution time: 1.2655000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 16, 'a_size': 256, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9673646779928881, 'speedup_best_over_ref': 0.9673646779928881, 'xsmm_custom_avg': 1.2655, 'xsmm_custom_best': 1.2655, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.2242, 'xsmm_reference_best': 1.2242, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 81600).

Output array: C (32, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.810267 ms

xsmm-reference Time (libxsmm): 2.810267 ms

xsmm-reference No. of CPU cycles: 2810266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.8102666666666667

xsmm-reference avg execution time: 2.8102666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1373100850 cleaned_data/example_mats/quad/p3/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m6.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 81600).

Output array: C (32, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 81600, ldb= 16, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.871433 ms

xsmm-custom Time (libxsmm): 2.871433 ms

xsmm-custom No. of CPU cycles: 2871433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.8714333333333335

xsmm-custom avg execution time: 2.8714333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 64, 'a_rows': 32, 'a_size': 512, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.125, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9786982111140777, 'speedup_best_over_ref': 0.9786982111140777, 'xsmm_custom_avg': 2.8714333333333335, 'xsmm_custom_best': 2.8714333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.8102666666666667, 'xsmm_reference_best': 2.8102666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 81600).

Output array: C (16, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.039167 ms

xsmm-reference Time (libxsmm): 3.039133 ms

xsmm-reference No. of CPU cycles: 3039133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.0391666666666666

xsmm-reference avg execution time: 3.0391666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 2002732973 cleaned_data/example_mats/quad/p3/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m132.txt...

Read matrix has 16 rows and 32 columns.

Input arrays: A (16, 32), B (32, 81600).

Output array: C (16, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 16, k= 32

lda= 81600, ldb= 32, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 16

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.222367 ms

xsmm-custom Time (libxsmm): 3.222300 ms

xsmm-custom No. of CPU cycles: 3222300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.2223666666666668

xsmm-custom avg execution time: 3.2223666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 32, 'a_nonzero': 128, 'a_rows': 16, 'a_size': 512, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9431473761521034, 'speedup_best_over_ref': 0.9431473761521034, 'xsmm_custom_avg': 3.222366666666667, 'xsmm_custom_best': 3.222366666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.0391666666666666, 'xsmm_reference_best': 3.0391666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 81600).

Output array: C (32, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.785567 ms

xsmm-reference Time (libxsmm): 2.785533 ms

xsmm-reference No. of CPU cycles: 2785533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.7855666666666665

xsmm-reference avg execution time: 2.7855666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 800693010 cleaned_data/example_mats/quad/p3/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p3/gauss-legendre/m460.txt...

Read matrix has 32 rows and 16 columns.

Input arrays: A (32, 16), B (16, 81600).

Output array: C (32, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 32, k= 16

lda= 81600, ldb= 16, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 32

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.865033 ms

xsmm-custom Time (libxsmm): 2.864933 ms

xsmm-custom No. of CPU cycles: 2864933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.8650333333333333

xsmm-custom avg execution time: 2.8650333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 16, 'a_nonzero': 128, 'a_rows': 32, 'a_size': 512, 'a_unique': 8, 'alpha': 1.0, 'beta': 0.0, 'density': 0.25, 'mat_file': 'data/example_mats/quad/p3/gauss-legendre/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9722632662796243, 'speedup_best_over_ref': 0.9722632662796243, 'xsmm_custom_avg': 2.8650333333333333, 'xsmm_custom_best': 2.8650333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.7855666666666665, 'xsmm_reference_best': 2.7855666666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 81600).

Output array: C (20, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.837033 ms

xsmm-reference Time (libxsmm): 2.837033 ms

xsmm-reference No. of CPU cycles: 2837033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.8370333333333333

xsmm-reference avg execution time: 2.8370333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1677658043 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 81600).

Output array: C (20, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 25

lda= 81600, ldb= 25, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.857100 ms

xsmm-custom Time (libxsmm): 2.857067 ms

xsmm-custom No. of CPU cycles: 2857066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.8571

xsmm-custom avg execution time: 2.8571

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 20, 'a_rows': 20, 'a_size': 500, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.04, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9929765613150864, 'speedup_best_over_ref': 0.9929765613150864, 'xsmm_custom_avg': 2.8571, 'xsmm_custom_best': 2.8571, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.8370333333333333, 'xsmm_reference_best': 2.8370333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 81600).

Output array: C (25, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.617433 ms

xsmm-reference Time (libxsmm): 2.617433 ms

xsmm-reference No. of CPU cycles: 2617433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.6174333333333331

xsmm-reference avg execution time: 2.6174333333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 349744975 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 81600).

Output array: C (25, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 20

lda= 81600, ldb= 20, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.742600 ms

xsmm-custom Time (libxsmm): 2.742567 ms

xsmm-custom No. of CPU cycles: 2742566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.7426000000000004

xsmm-custom avg execution time: 2.7426000000000004

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 25, 'a_size': 500, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9543620408857773, 'speedup_best_over_ref': 0.9543620408857773, 'xsmm_custom_avg': 2.7426000000000004, 'xsmm_custom_best': 2.7426000000000004, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.617433333333333, 'xsmm_reference_best': 2.617433333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 81600).

Output array: C (50, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.929733 ms

xsmm-reference Time (libxsmm): 4.929733 ms

xsmm-reference No. of CPU cycles: 4929733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.9297333333333331

xsmm-reference avg execution time: 4.9297333333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 570121927 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 81600).

Output array: C (50, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 20

lda= 81600, ldb= 20, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.029967 ms

xsmm-custom Time (libxsmm): 5.029967 ms

xsmm-custom No. of CPU cycles: 5029966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.0299666666666667

xsmm-custom avg execution time: 5.0299666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 50, 'a_size': 1000, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9800727639016825, 'speedup_best_over_ref': 0.9800727639016825, 'xsmm_custom_avg': 5.029966666666667, 'xsmm_custom_best': 5.029966666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.929733333333333, 'xsmm_reference_best': 4.929733333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 81600).

Output array: C (25, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.351033 ms

xsmm-reference Time (libxsmm): 6.351033 ms

xsmm-reference No. of CPU cycles: 6351033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.3510333333333335

xsmm-reference avg execution time: 6.3510333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 481709805 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 81600).

Output array: C (25, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 50

lda= 81600, ldb= 50, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.437200 ms

xsmm-custom Time (libxsmm): 6.437167 ms

xsmm-custom No. of CPU cycles: 6437166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.4372000000000007

xsmm-custom avg execution time: 6.4372000000000007

Freeing A

Freeing B

Freeing C

{'a_cols': 50, 'a_nonzero': 220, 'a_rows': 25, 'a_size': 1250, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.176, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9866142629300523, 'speedup_best_over_ref': 0.9866142629300523, 'xsmm_custom_avg': 6.437200000000001, 'xsmm_custom_best': 6.437200000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.3510333333333335, 'xsmm_reference_best': 6.3510333333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 81600).

Output array: C (50, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.118967 ms

xsmm-reference Time (libxsmm): 6.118967 ms

xsmm-reference No. of CPU cycles: 6118966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.1189666666666662

xsmm-reference avg execution time: 6.1189666666666662

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 210358098 cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 81600).

Output array: C (50, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 25

lda= 81600, ldb= 25, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.089267 ms

xsmm-custom Time (libxsmm): 6.089267 ms

xsmm-custom No. of CPU cycles: 6089266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.0892666666666662

xsmm-custom avg execution time: 6.0892666666666662

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 220, 'a_rows': 50, 'a_size': 1250, 'a_unique': 11, 'alpha': 1.0, 'beta': 0.0, 'density': 0.176, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre-lobatto/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.004877434611721, 'speedup_best_over_ref': 1.004877434611721, 'xsmm_custom_avg': 6.089266666666666, 'xsmm_custom_best': 6.089266666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.118966666666666, 'xsmm_reference_best': 6.118966666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 81600).

Output array: C (20, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.798800 ms

xsmm-reference Time (libxsmm): 2.798767 ms

xsmm-reference No. of CPU cycles: 2798766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.7988

xsmm-reference avg execution time: 2.7988

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 617350605 cleaned_data/example_mats/quad/p4/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m0.txt...

Read matrix has 20 rows and 25 columns.

Input arrays: A (20, 25), B (25, 81600).

Output array: C (20, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 25

lda= 81600, ldb= 25, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.838067 ms

xsmm-custom Time (libxsmm): 2.838033 ms

xsmm-custom No. of CPU cycles: 2838033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.8380666666666667

xsmm-custom avg execution time: 2.8380666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 100, 'a_rows': 20, 'a_size': 500, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9861642902445327, 'speedup_best_over_ref': 0.9861642902445327, 'xsmm_custom_avg': 2.8380666666666667, 'xsmm_custom_best': 2.8380666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.7988, 'xsmm_reference_best': 2.7988, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 81600).

Output array: C (25, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.892000 ms

xsmm-reference Time (libxsmm): 2.891967 ms

xsmm-reference No. of CPU cycles: 2891966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.8920000000000003

xsmm-reference avg execution time: 2.8920000000000003

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 717250693 cleaned_data/example_mats/quad/p4/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m3.txt...

Read matrix has 25 rows and 20 columns.

Input arrays: A (25, 20), B (20, 81600).

Output array: C (25, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 20

lda= 81600, ldb= 20, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.731067 ms

xsmm-custom Time (libxsmm): 2.731067 ms

xsmm-custom No. of CPU cycles: 2731066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.7310666666666665

xsmm-custom avg execution time: 2.7310666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 25, 'a_size': 500, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.2, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0589269150026854, 'speedup_best_over_ref': 1.0589269150026854, 'xsmm_custom_avg': 2.7310666666666665, 'xsmm_custom_best': 2.7310666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.8920000000000003, 'xsmm_reference_best': 2.8920000000000003, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 81600).

Output array: C (50, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.895767 ms

xsmm-reference Time (libxsmm): 4.895767 ms

xsmm-reference No. of CPU cycles: 4895766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.8957666666666659

xsmm-reference avg execution time: 4.8957666666666659

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1886011925 cleaned_data/example_mats/quad/p4/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m6.txt...

Read matrix has 50 rows and 20 columns.

Input arrays: A (50, 20), B (20, 81600).

Output array: C (50, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 20

lda= 81600, ldb= 20, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.877167 ms

xsmm-custom Time (libxsmm): 5.877167 ms

xsmm-custom No. of CPU cycles: 5877166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.8771666666666684

xsmm-custom avg execution time: 5.8771666666666684

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 100, 'a_rows': 50, 'a_size': 1000, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.8330147746930207, 'speedup_best_over_ref': 0.8330147746930207, 'xsmm_custom_avg': 5.877166666666668, 'xsmm_custom_best': 5.877166666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.895766666666666, 'xsmm_reference_best': 4.895766666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 81600).

Output array: C (25, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.357033 ms

xsmm-reference Time (libxsmm): 6.357000 ms

xsmm-reference No. of CPU cycles: 6357000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.3570333333333338

xsmm-reference avg execution time: 6.3570333333333338

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 827292512 cleaned_data/example_mats/quad/p4/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m132.txt...

Read matrix has 25 rows and 50 columns.

Input arrays: A (25, 50), B (50, 81600).

Output array: C (25, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 25, k= 50

lda= 81600, ldb= 50, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.397033 ms

xsmm-custom Time (libxsmm): 6.397000 ms

xsmm-custom No. of CPU cycles: 6397000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.3970333333333338

xsmm-custom avg execution time: 6.3970333333333338

Freeing A

Freeing B

Freeing C

{'a_cols': 50, 'a_nonzero': 240, 'a_rows': 25, 'a_size': 1250, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.192, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9937471015210175, 'speedup_best_over_ref': 0.9937471015210175, 'xsmm_custom_avg': 6.397033333333334, 'xsmm_custom_best': 6.397033333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.357033333333334, 'xsmm_reference_best': 6.357033333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 81600).

Output array: C (50, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.111900 ms

xsmm-reference Time (libxsmm): 6.111900 ms

xsmm-reference No. of CPU cycles: 6111900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.1119000000000003

xsmm-reference avg execution time: 6.1119000000000003

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1390003439 cleaned_data/example_mats/quad/p4/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p4/gauss-legendre/m460.txt...

Read matrix has 50 rows and 25 columns.

Input arrays: A (50, 25), B (25, 81600).

Output array: C (50, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 50, k= 25

lda= 81600, ldb= 25, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.110200 ms

xsmm-custom Time (libxsmm): 6.110167 ms

xsmm-custom No. of CPU cycles: 6110166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.1102000000000007

xsmm-custom avg execution time: 6.1102000000000007

Freeing A

Freeing B

Freeing C

{'a_cols': 25, 'a_nonzero': 240, 'a_rows': 50, 'a_size': 1250, 'a_unique': 12, 'alpha': 1.0, 'beta': 0.0, 'density': 0.192, 'mat_file': 'data/example_mats/quad/p4/gauss-legendre/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0002782232987464, 'speedup_best_over_ref': 1.0002782232987464, 'xsmm_custom_avg': 6.110200000000001, 'xsmm_custom_best': 6.110200000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.1119, 'xsmm_reference_best': 6.1119, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 81600).

Output array: C (24, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.107533 ms

xsmm-reference Time (libxsmm): 4.107500 ms

xsmm-reference No. of CPU cycles: 4107500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.1075333333333335

xsmm-reference avg execution time: 4.1075333333333335

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 153630176 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 81600).

Output array: C (24, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 36

lda= 81600, ldb= 36, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.195067 ms

xsmm-custom Time (libxsmm): 4.195033 ms

xsmm-custom No. of CPU cycles: 4195033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.1950666666666665

xsmm-custom avg execution time: 4.1950666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 24, 'a_rows': 24, 'a_size': 864, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.027777777777777776, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9791342211486509, 'speedup_best_over_ref': 0.9791342211486509, 'xsmm_custom_avg': 4.1950666666666665, 'xsmm_custom_best': 4.1950666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.1075333333333335, 'xsmm_reference_best': 4.1075333333333335, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 81600).

Output array: C (36, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.280567 ms

xsmm-reference Time (libxsmm): 4.280533 ms

xsmm-reference No. of CPU cycles: 4280533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.2805666666666671

xsmm-reference avg execution time: 4.2805666666666671

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 501876512 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 81600).

Output array: C (36, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 24

lda= 81600, ldb= 24, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.404800 ms

xsmm-custom Time (libxsmm): 4.404800 ms

xsmm-custom No. of CPU cycles: 4404800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.4047999999999998

xsmm-custom avg execution time: 4.4047999999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 36, 'a_size': 864, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9717959196028576, 'speedup_best_over_ref': 0.9717959196028576, 'xsmm_custom_avg': 4.4048, 'xsmm_custom_best': 4.4048, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.280566666666667, 'xsmm_reference_best': 4.280566666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 81600).

Output array: C (72, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.228800 ms

xsmm-reference Time (libxsmm): 8.228800 ms

xsmm-reference No. of CPU cycles: 8228800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.2287999999999997

xsmm-reference avg execution time: 8.2287999999999997

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 49191673 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 81600).

Output array: C (72, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 24

lda= 81600, ldb= 24, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.398100 ms

xsmm-custom Time (libxsmm): 8.398100 ms

xsmm-custom No. of CPU cycles: 8398100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.3981000000000012

xsmm-custom avg execution time: 8.3981000000000012

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 72, 'a_size': 1728, 'a_unique': 4, 'alpha': 1.0, 'beta': 0.0, 'density': 0.08333333333333333, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9798406782486513, 'speedup_best_over_ref': 0.9798406782486513, 'xsmm_custom_avg': 8.398100000000001, 'xsmm_custom_best': 8.398100000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.2288, 'xsmm_reference_best': 8.2288, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 81600).

Output array: C (36, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 11.239767 ms

xsmm-reference Time (libxsmm): 11.239733 ms

xsmm-reference No. of CPU cycles: 11239733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 11.239766666666666

xsmm-reference avg execution time: 11.239766666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 371639456 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 81600).

Output array: C (36, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 72

lda= 81600, ldb= 72, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 11.285667 ms

xsmm-custom Time (libxsmm): 11.285633 ms

xsmm-custom No. of CPU cycles: 11285633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 11.285666666666668

xsmm-custom avg execution time: 11.285666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 72, 'a_nonzero': 384, 'a_rows': 36, 'a_size': 2592, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14814814814814814, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9959328942316211, 'speedup_best_over_ref': 0.9959328942316211, 'xsmm_custom_avg': 11.285666666666668, 'xsmm_custom_best': 11.285666666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 11.239766666666666, 'xsmm_reference_best': 11.239766666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 81600).

Output array: C (72, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 11.169700 ms

xsmm-reference Time (libxsmm): 11.169700 ms

xsmm-reference No. of CPU cycles: 11169700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 11.169700000000001

xsmm-reference avg execution time: 11.169700000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1290104143 cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 81600).

Output array: C (72, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 36

lda= 81600, ldb= 36, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 11.253500 ms

xsmm-custom Time (libxsmm): 11.253433 ms

xsmm-custom No. of CPU cycles: 11253433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 11.253500000000001

xsmm-custom avg execution time: 11.253500000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 384, 'a_rows': 72, 'a_size': 2592, 'a_unique': 16, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14814814814814814, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre-lobatto/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9925534278224553, 'speedup_best_over_ref': 0.9925534278224553, 'xsmm_custom_avg': 11.2535, 'xsmm_custom_best': 11.2535, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 11.1697, 'xsmm_reference_best': 11.1697, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 81600).

Output array: C (24, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.126400 ms

xsmm-reference Time (libxsmm): 4.126367 ms

xsmm-reference No. of CPU cycles: 4126366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.1264000000000003

xsmm-reference avg execution time: 4.1264000000000003

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1969278666 cleaned_data/example_mats/quad/p5/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m0.txt...

Read matrix has 24 rows and 36 columns.

Input arrays: A (24, 36), B (36, 81600).

Output array: C (24, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 36

lda= 81600, ldb= 36, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.184767 ms

xsmm-custom Time (libxsmm): 4.184767 ms

xsmm-custom No. of CPU cycles: 4184766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.1847666666666665

xsmm-custom avg execution time: 4.1847666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 144, 'a_rows': 24, 'a_size': 864, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.986052587559641, 'speedup_best_over_ref': 0.986052587559641, 'xsmm_custom_avg': 4.1847666666666665, 'xsmm_custom_best': 4.1847666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.1264, 'xsmm_reference_best': 4.1264, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 81600).

Output array: C (36, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.298867 ms

xsmm-reference Time (libxsmm): 4.298833 ms

xsmm-reference No. of CPU cycles: 4298833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.2988666666666671

xsmm-reference avg execution time: 4.2988666666666671

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1355218993 cleaned_data/example_mats/quad/p5/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m3.txt...

Read matrix has 36 rows and 24 columns.

Input arrays: A (36, 24), B (24, 81600).

Output array: C (36, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 24

lda= 81600, ldb= 24, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.440700 ms

xsmm-custom Time (libxsmm): 4.440700 ms

xsmm-custom No. of CPU cycles: 4440700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.4407000000000005

xsmm-custom avg execution time: 4.4407000000000005

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 36, 'a_size': 864, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9680605910479578, 'speedup_best_over_ref': 0.9680605910479578, 'xsmm_custom_avg': 4.4407000000000005, 'xsmm_custom_best': 4.4407000000000005, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.298866666666667, 'xsmm_reference_best': 4.298866666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 81600).

Output array: C (72, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 8.236933 ms

xsmm-reference Time (libxsmm): 8.236933 ms

xsmm-reference No. of CPU cycles: 8236933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 8.2369333333333312

xsmm-reference avg execution time: 8.2369333333333312

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 712460840 cleaned_data/example_mats/quad/p5/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m6.txt...

Read matrix has 72 rows and 24 columns.

Input arrays: A (72, 24), B (24, 81600).

Output array: C (72, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 24

lda= 81600, ldb= 24, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 8.344767 ms

xsmm-custom Time (libxsmm): 8.344667 ms

xsmm-custom No. of CPU cycles: 8344666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 8.3447666666666667

xsmm-custom avg execution time: 8.3447666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 144, 'a_rows': 72, 'a_size': 1728, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 0.08333333333333333, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9870777293553242, 'speedup_best_over_ref': 0.9870777293553242, 'xsmm_custom_avg': 8.344766666666667, 'xsmm_custom_best': 8.344766666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 8.236933333333331, 'xsmm_reference_best': 8.236933333333331, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 81600).

Output array: C (36, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 11.168767 ms

xsmm-reference Time (libxsmm): 11.168733 ms

xsmm-reference No. of CPU cycles: 11168733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 11.168766666666667

xsmm-reference avg execution time: 11.168766666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1374865217 cleaned_data/example_mats/quad/p5/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m132.txt...

Read matrix has 36 rows and 72 columns.

Input arrays: A (36, 72), B (72, 81600).

Output array: C (36, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 36, k= 72

lda= 81600, ldb= 72, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 11.269500 ms

xsmm-custom Time (libxsmm): 11.269500 ms

xsmm-custom No. of CPU cycles: 11269500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 11.269499999999999

xsmm-custom avg execution time: 11.269499999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 72, 'a_nonzero': 432, 'a_rows': 36, 'a_size': 2592, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9910614194655191, 'speedup_best_over_ref': 0.9910614194655191, 'xsmm_custom_avg': 11.269499999999999, 'xsmm_custom_best': 11.269499999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 11.168766666666667, 'xsmm_reference_best': 11.168766666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 81600).

Output array: C (72, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 11.035700 ms

xsmm-reference Time (libxsmm): 11.035700 ms

xsmm-reference No. of CPU cycles: 11035700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 11.0357

xsmm-reference avg execution time: 11.0357

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 223022508 cleaned_data/example_mats/quad/p5/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p5/gauss-legendre/m460.txt...

Read matrix has 72 rows and 36 columns.

Input arrays: A (72, 36), B (36, 81600).

Output array: C (72, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 72, k= 36

lda= 81600, ldb= 36, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 72

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 11.238000 ms

xsmm-custom Time (libxsmm): 11.238033 ms

xsmm-custom No. of CPU cycles: 11238033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 11.238

xsmm-custom avg execution time: 11.238

Freeing A

Freeing B

Freeing C

{'a_cols': 36, 'a_nonzero': 432, 'a_rows': 72, 'a_size': 2592, 'a_unique': 18, 'alpha': 1.0, 'beta': 0.0, 'density': 0.16666666666666666, 'mat_file': 'data/example_mats/quad/p5/gauss-legendre/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9819985762591209, 'speedup_best_over_ref': 0.9819985762591209, 'xsmm_custom_avg': 11.238, 'xsmm_custom_best': 11.238, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 11.0357, 'xsmm_reference_best': 11.0357, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 81600).

Output array: C (28, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.624567 ms

xsmm-reference Time (libxsmm): 6.624567 ms

xsmm-reference No. of CPU cycles: 6624566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.6245666666666665

xsmm-reference avg execution time: 6.6245666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1558945658 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 81600).

Output array: C (28, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 49

lda= 81600, ldb= 49, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.652533 ms

xsmm-custom Time (libxsmm): 6.652500 ms

xsmm-custom No. of CPU cycles: 6652500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.6525333333333334

xsmm-custom avg execution time: 6.6525333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 28, 'a_rows': 28, 'a_size': 1372, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.02040816326530612, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9957960877059365, 'speedup_best_over_ref': 0.9957960877059365, 'xsmm_custom_avg': 6.652533333333333, 'xsmm_custom_best': 6.652533333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.6245666666666665, 'xsmm_reference_best': 6.6245666666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 81600).

Output array: C (49, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.385667 ms

xsmm-reference Time (libxsmm): 6.385667 ms

xsmm-reference No. of CPU cycles: 6385666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.3856666666666682

xsmm-reference avg execution time: 6.3856666666666682

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 86100100 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 81600).

Output array: C (49, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 28

lda= 81600, ldb= 28, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.474100 ms

xsmm-custom Time (libxsmm): 6.474100 ms

xsmm-custom No. of CPU cycles: 6474100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.4741000000000009

xsmm-custom avg execution time: 6.4741000000000009

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 49, 'a_size': 1372, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14285714285714285, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9863404437167587, 'speedup_best_over_ref': 0.9863404437167587, 'xsmm_custom_avg': 6.474100000000001, 'xsmm_custom_best': 6.474100000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.385666666666668, 'xsmm_reference_best': 6.385666666666668, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 81600).

Output array: C (98, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 12.534967 ms

xsmm-reference Time (libxsmm): 12.534967 ms

xsmm-reference No. of CPU cycles: 12534966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 12.534966666666666

xsmm-reference avg execution time: 12.534966666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1612389063 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 81600).

Output array: C (98, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 28

lda= 81600, ldb= 28, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 12.541500 ms

xsmm-custom Time (libxsmm): 12.541467 ms

xsmm-custom No. of CPU cycles: 12541466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 12.541500000000001

xsmm-custom avg execution time: 12.541500000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 98, 'a_size': 2744, 'a_unique': 5, 'alpha': 1.0, 'beta': 0.0, 'density': 0.07142857142857142, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9994790628446888, 'speedup_best_over_ref': 0.9994790628446888, 'xsmm_custom_avg': 12.541500000000001, 'xsmm_custom_best': 12.541500000000001, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 12.534966666666666, 'xsmm_reference_best': 12.534966666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 81600).

Output array: C (49, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 19.846267 ms

xsmm-reference Time (libxsmm): 19.846267 ms

xsmm-reference No. of CPU cycles: 19846266

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 19.846266666666665

xsmm-reference avg execution time: 19.846266666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1112221559 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 81600).

Output array: C (49, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 98

lda= 81600, ldb= 98, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 19.890733 ms

xsmm-custom Time (libxsmm): 19.890733 ms

xsmm-custom No. of CPU cycles: 19890733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 19.890733333333333

xsmm-custom avg execution time: 19.890733333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 98, 'a_nonzero': 616, 'a_rows': 49, 'a_size': 4802, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1282798833819242, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9977644531289276, 'speedup_best_over_ref': 0.9977644531289276, 'xsmm_custom_avg': 19.890733333333333, 'xsmm_custom_best': 19.890733333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 19.846266666666665, 'xsmm_reference_best': 19.846266666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 81600).

Output array: C (98, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 22.401767 ms

xsmm-reference Time (libxsmm): 22.401767 ms

xsmm-reference No. of CPU cycles: 22401766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 22.401766666666667

xsmm-reference avg execution time: 22.401766666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1949961161 cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 81600).

Output array: C (98, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 49

lda= 81600, ldb= 49, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 23.288600 ms

xsmm-custom Time (libxsmm): 23.288567 ms

xsmm-custom No. of CPU cycles: 23288566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 23.288599999999999

xsmm-custom avg execution time: 23.288599999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 616, 'a_rows': 98, 'a_size': 4802, 'a_unique': 22, 'alpha': 1.0, 'beta': 0.0, 'density': 0.1282798833819242, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre-lobatto/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9619198520592336, 'speedup_best_over_ref': 0.9619198520592336, 'xsmm_custom_avg': 23.2886, 'xsmm_custom_best': 23.2886, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 22.401766666666667, 'xsmm_reference_best': 22.401766666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 81600).

Output array: C (28, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.615433 ms

xsmm-reference Time (libxsmm): 6.615467 ms

xsmm-reference No. of CPU cycles: 6615466

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.6154333333333328

xsmm-reference avg execution time: 6.6154333333333328

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 697593450 cleaned_data/example_mats/quad/p6/gauss-legendre/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m0.txt...

Read matrix has 28 rows and 49 columns.

Input arrays: A (28, 49), B (49, 81600).

Output array: C (28, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 49

lda= 81600, ldb= 49, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.652233 ms

xsmm-custom Time (libxsmm): 6.652233 ms

xsmm-custom No. of CPU cycles: 6652233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.6522333333333332

xsmm-custom avg execution time: 6.6522333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 196, 'a_rows': 28, 'a_size': 1372, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14285714285714285, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9944680232703803, 'speedup_best_over_ref': 0.9944680232703803, 'xsmm_custom_avg': 6.652233333333333, 'xsmm_custom_best': 6.652233333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.615433333333333, 'xsmm_reference_best': 6.615433333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 81600).

Output array: C (49, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.435833 ms

xsmm-reference Time (libxsmm): 6.435800 ms

xsmm-reference No. of CPU cycles: 6435800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.4358333333333331

xsmm-reference avg execution time: 6.4358333333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1744572379 cleaned_data/example_mats/quad/p6/gauss-legendre/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m3.txt...

Read matrix has 49 rows and 28 columns.

Input arrays: A (49, 28), B (28, 81600).

Output array: C (49, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 28

lda= 81600, ldb= 28, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.501667 ms

xsmm-custom Time (libxsmm): 6.501667 ms

xsmm-custom No. of CPU cycles: 6501666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.5016666666666669

xsmm-custom avg execution time: 6.5016666666666669

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 49, 'a_size': 1372, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.14285714285714285, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9898743911817481, 'speedup_best_over_ref': 0.9898743911817481, 'xsmm_custom_avg': 6.501666666666667, 'xsmm_custom_best': 6.501666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.435833333333333, 'xsmm_reference_best': 6.435833333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 81600).

Output array: C (98, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 12.507533 ms

xsmm-reference Time (libxsmm): 12.507533 ms

xsmm-reference No. of CPU cycles: 12507533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 12.507533333333333

xsmm-reference avg execution time: 12.507533333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1104761289 cleaned_data/example_mats/quad/p6/gauss-legendre/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m6.txt...

Read matrix has 98 rows and 28 columns.

Input arrays: A (98, 28), B (28, 81600).

Output array: C (98, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 28

lda= 81600, ldb= 28, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 12.523133 ms

xsmm-custom Time (libxsmm): 12.523000 ms

xsmm-custom No. of CPU cycles: 12523000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 12.523133333333334

xsmm-custom avg execution time: 12.523133333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 196, 'a_rows': 98, 'a_size': 2744, 'a_unique': 7, 'alpha': 1.0, 'beta': 0.0, 'density': 0.07142857142857142, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9987543053655368, 'speedup_best_over_ref': 0.9987543053655368, 'xsmm_custom_avg': 12.523133333333334, 'xsmm_custom_best': 12.523133333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 12.507533333333333, 'xsmm_reference_best': 12.507533333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 81600).

Output array: C (49, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 19.905133 ms

xsmm-reference Time (libxsmm): 19.905100 ms

xsmm-reference No. of CPU cycles: 19905100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 19.905133333333332

xsmm-reference avg execution time: 19.905133333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 825121902 cleaned_data/example_mats/quad/p6/gauss-legendre/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m132.txt...

Read matrix has 49 rows and 98 columns.

Input arrays: A (49, 98), B (98, 81600).

Output array: C (49, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 49, k= 98

lda= 81600, ldb= 98, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 19.857267 ms

xsmm-custom Time (libxsmm): 19.857233 ms

xsmm-custom No. of CPU cycles: 19857233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 19.857266666666668

xsmm-custom avg execution time: 19.857266666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 98, 'a_nonzero': 672, 'a_rows': 49, 'a_size': 4802, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.13994169096209913, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0024105365290288, 'speedup_best_over_ref': 1.0024105365290288, 'xsmm_custom_avg': 19.857266666666668, 'xsmm_custom_best': 19.857266666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 19.905133333333332, 'xsmm_reference_best': 19.905133333333332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 81600).

Output array: C (98, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 22.216567 ms

xsmm-reference Time (libxsmm): 22.216567 ms

xsmm-reference No. of CPU cycles: 22216566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 22.216566666666669

xsmm-reference avg execution time: 22.216566666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1030509976 cleaned_data/example_mats/quad/p6/gauss-legendre/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/quad/p6/gauss-legendre/m460.txt...

Read matrix has 98 rows and 49 columns.

Input arrays: A (98, 49), B (49, 81600).

Output array: C (98, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 98, k= 49

lda= 81600, ldb= 49, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 22.220167 ms

xsmm-custom Time (libxsmm): 22.220167 ms

xsmm-custom No. of CPU cycles: 22220166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 22.220166666666668

xsmm-custom avg execution time: 22.220166666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 49, 'a_nonzero': 672, 'a_rows': 98, 'a_size': 4802, 'a_unique': 24, 'alpha': 1.0, 'beta': 0.0, 'density': 0.13994169096209913, 'mat_file': 'data/example_mats/quad/p6/gauss-legendre/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9998379850136139, 'speedup_best_over_ref': 0.9998379850136139, 'xsmm_custom_avg': 22.220166666666668, 'xsmm_custom_best': 22.220166666666668, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 22.21656666666667, 'xsmm_reference_best': 22.21656666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m0.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 81600).

Output array: C (12, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.331367 ms

xsmm-reference Time (libxsmm): 0.331400 ms

xsmm-reference No. of CPU cycles: 331400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.3313666666666667

xsmm-reference avg execution time: 0.3313666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 861785561 cleaned_data/example_mats/tet/p1/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m0.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 81600).

Output array: C (12, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 4

lda= 81600, ldb= 4, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.344500 ms

xsmm-custom Time (libxsmm): 0.344500 ms

xsmm-custom No. of CPU cycles: 344500

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.34450000000000003

xsmm-custom avg execution time: 0.34450000000000003

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 48, 'a_rows': 12, 'a_size': 48, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9618771165940977, 'speedup_best_over_ref': 0.9618771165940977, 'xsmm_custom_avg': 0.34450000000000003, 'xsmm_custom_best': 0.34450000000000003, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.3313666666666667, 'xsmm_reference_best': 0.3313666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m3.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 81600).

Output array: C (4, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.268967 ms

xsmm-reference Time (libxsmm): 0.268967 ms

xsmm-reference No. of CPU cycles: 268966

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.26896666666666669

xsmm-reference avg execution time: 0.26896666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 957249614 cleaned_data/example_mats/tet/p1/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m3.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 81600).

Output array: C (4, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 12

lda= 81600, ldb= 12, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.283633 ms

xsmm-custom Time (libxsmm): 0.283633 ms

xsmm-custom No. of CPU cycles: 283633

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.28363333333333335

xsmm-custom avg execution time: 0.28363333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 48, 'a_rows': 4, 'a_size': 48, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.948290045833823, 'speedup_best_over_ref': 0.948290045833823, 'xsmm_custom_avg': 0.28363333333333335, 'xsmm_custom_best': 0.28363333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.2689666666666667, 'xsmm_reference_best': 0.2689666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m6.txt...

Read matrix has 12 rows and 12 columns.

Input arrays: A (12, 12), B (12, 81600).

Output array: C (12, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.632767 ms

xsmm-reference Time (libxsmm): 0.632767 ms

xsmm-reference No. of CPU cycles: 632766

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.6327666666666667

xsmm-reference avg execution time: 0.6327666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1943901694 cleaned_data/example_mats/tet/p1/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m6.txt...

Read matrix has 12 rows and 12 columns.

Input arrays: A (12, 12), B (12, 81600).

Output array: C (12, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 12

lda= 81600, ldb= 12, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.614933 ms

xsmm-custom Time (libxsmm): 0.614933 ms

xsmm-custom No. of CPU cycles: 614933

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.61493333333333333

xsmm-custom avg execution time: 0.61493333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 72, 'a_rows': 12, 'a_size': 144, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0290004336513443, 'speedup_best_over_ref': 1.0290004336513443, 'xsmm_custom_avg': 0.6149333333333333, 'xsmm_custom_best': 0.6149333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.6327666666666667, 'xsmm_reference_best': 0.6327666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m132.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 81600).

Output array: C (4, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.265633 ms

xsmm-reference Time (libxsmm): 0.265600 ms

xsmm-reference No. of CPU cycles: 265600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.26563333333333333

xsmm-reference avg execution time: 0.26563333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 291852740 cleaned_data/example_mats/tet/p1/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m132.txt...

Read matrix has 4 rows and 12 columns.

Input arrays: A (4, 12), B (12, 81600).

Output array: C (4, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 4, k= 12

lda= 81600, ldb= 12, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.292733 ms

xsmm-custom Time (libxsmm): 0.292767 ms

xsmm-custom No. of CPU cycles: 292766

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.29273333333333335

xsmm-custom avg execution time: 0.29273333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 24, 'a_rows': 4, 'a_size': 48, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9074242769300842, 'speedup_best_over_ref': 0.9074242769300842, 'xsmm_custom_avg': 0.29273333333333335, 'xsmm_custom_best': 0.29273333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.26563333333333333, 'xsmm_reference_best': 0.26563333333333333, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m460.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 81600).

Output array: C (12, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.337867 ms

xsmm-reference Time (libxsmm): 0.337867 ms

xsmm-reference No. of CPU cycles: 337866

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.33786666666666665

xsmm-reference avg execution time: 0.33786666666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1208770543 cleaned_data/example_mats/tet/p1/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p1/shunn-ham/m460.txt...

Read matrix has 12 rows and 4 columns.

Input arrays: A (12, 4), B (4, 81600).

Output array: C (12, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 4

lda= 81600, ldb= 4, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.368600 ms

xsmm-custom Time (libxsmm): 0.368633 ms

xsmm-custom No. of CPU cycles: 368633

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.36859999999999998

xsmm-custom avg execution time: 0.36859999999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 4, 'a_nonzero': 24, 'a_rows': 12, 'a_size': 48, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p1/shunn-ham/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9166214505335504, 'speedup_best_over_ref': 0.9166214505335504, 'xsmm_custom_avg': 0.3686, 'xsmm_custom_best': 0.3686, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.33786666666666665, 'xsmm_reference_best': 0.33786666666666665, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m0.txt...

Read matrix has 24 rows and 10 columns.

Input arrays: A (24, 10), B (10, 81600).

Output array: C (24, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.817100 ms

xsmm-reference Time (libxsmm): 1.817133 ms

xsmm-reference No. of CPU cycles: 1817133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.8170999999999999

xsmm-reference avg execution time: 1.8170999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1249604097 cleaned_data/example_mats/tet/p2/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m0.txt...

Read matrix has 24 rows and 10 columns.

Input arrays: A (24, 10), B (10, 81600).

Output array: C (24, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 24, k= 10

lda= 81600, ldb= 10, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 24

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.710400 ms

xsmm-custom Time (libxsmm): 1.710433 ms

xsmm-custom No. of CPU cycles: 1710433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.7103999999999999

xsmm-custom avg execution time: 1.7103999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 240, 'a_rows': 24, 'a_size': 240, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0623830682881197, 'speedup_best_over_ref': 1.0623830682881197, 'xsmm_custom_avg': 1.7104, 'xsmm_custom_best': 1.7104, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.8171, 'xsmm_reference_best': 1.8171, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m3.txt...

Read matrix has 10 rows and 24 columns.

Input arrays: A (10, 24), B (24, 81600).

Output array: C (10, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.071633 ms

xsmm-reference Time (libxsmm): 2.071667 ms

xsmm-reference No. of CPU cycles: 2071666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.0716333333333332

xsmm-reference avg execution time: 2.0716333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 2083238826 cleaned_data/example_mats/tet/p2/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m3.txt...

Read matrix has 10 rows and 24 columns.

Input arrays: A (10, 24), B (24, 81600).

Output array: C (10, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 24

lda= 81600, ldb= 24, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.810633 ms

xsmm-custom Time (libxsmm): 1.810633 ms

xsmm-custom No. of CPU cycles: 1810633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.8106333333333333

xsmm-custom avg execution time: 1.8106333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 240, 'a_rows': 10, 'a_size': 240, 'a_unique': 28, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.1441484563412434, 'speedup_best_over_ref': 1.1441484563412434, 'xsmm_custom_avg': 1.8106333333333333, 'xsmm_custom_best': 1.8106333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.071633333333333, 'xsmm_reference_best': 2.071633333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m6.txt...

Read matrix has 30 rows and 24 columns.

Input arrays: A (30, 24), B (24, 81600).

Output array: C (30, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.037500 ms

xsmm-reference Time (libxsmm): 4.037533 ms

xsmm-reference No. of CPU cycles: 4037533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.0374999999999996

xsmm-reference avg execution time: 4.0374999999999996

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1208711168 cleaned_data/example_mats/tet/p2/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m6.txt...

Read matrix has 30 rows and 24 columns.

Input arrays: A (30, 24), B (24, 81600).

Output array: C (30, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 24

lda= 81600, ldb= 24, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.261633 ms

xsmm-custom Time (libxsmm): 4.261633 ms

xsmm-custom No. of CPU cycles: 4261633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.2616333333333332

xsmm-custom avg execution time: 4.2616333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 24, 'a_nonzero': 360, 'a_rows': 30, 'a_size': 720, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9474067063488959, 'speedup_best_over_ref': 0.9474067063488959, 'xsmm_custom_avg': 4.261633333333333, 'xsmm_custom_best': 4.261633333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.0375, 'xsmm_reference_best': 4.0375, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m132.txt...

Read matrix has 10 rows and 30 columns.

Input arrays: A (10, 30), B (30, 81600).

Output array: C (10, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.421600 ms

xsmm-reference Time (libxsmm): 2.421633 ms

xsmm-reference No. of CPU cycles: 2421633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.4215999999999998

xsmm-reference avg execution time: 2.4215999999999998

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1384570037 cleaned_data/example_mats/tet/p2/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m132.txt...

Read matrix has 10 rows and 30 columns.

Input arrays: A (10, 30), B (30, 81600).

Output array: C (10, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 30

lda= 81600, ldb= 30, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.292100 ms

xsmm-custom Time (libxsmm): 2.292133 ms

xsmm-custom No. of CPU cycles: 2292133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.2921

xsmm-custom avg execution time: 2.2921

Freeing A

Freeing B

Freeing C

{'a_cols': 30, 'a_nonzero': 252, 'a_rows': 10, 'a_size': 300, 'a_unique': 23, 'alpha': 1.0, 'beta': 0.0, 'density': 0.84, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0564984075738404, 'speedup_best_over_ref': 1.0564984075738404, 'xsmm_custom_avg': 2.2921, 'xsmm_custom_best': 2.2921, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.4215999999999998, 'xsmm_reference_best': 2.4215999999999998, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m460.txt...

Read matrix has 30 rows and 10 columns.

Input arrays: A (30, 10), B (10, 81600).

Output array: C (30, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.049500 ms

xsmm-reference Time (libxsmm): 2.049533 ms

xsmm-reference No. of CPU cycles: 2049533

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.0495000000000005

xsmm-reference avg execution time: 2.0495000000000005

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 2029869392 cleaned_data/example_mats/tet/p2/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p2/shunn-ham/m460.txt...

Read matrix has 30 rows and 10 columns.

Input arrays: A (30, 10), B (10, 81600).

Output array: C (30, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 10

lda= 81600, ldb= 10, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.483700 ms

xsmm-custom Time (libxsmm): 2.483733 ms

xsmm-custom No. of CPU cycles: 2483733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.4836999999999998

xsmm-custom avg execution time: 2.4836999999999998

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 252, 'a_rows': 30, 'a_size': 300, 'a_unique': 23, 'alpha': 1.0, 'beta': 0.0, 'density': 0.84, 'mat_file': 'data/example_mats/tet/p2/shunn-ham/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.8251801747393005, 'speedup_best_over_ref': 0.8251801747393005, 'xsmm_custom_avg': 2.4837, 'xsmm_custom_best': 2.4837, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.0495000000000005, 'xsmm_reference_best': 2.0495000000000005, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m0.txt...

Read matrix has 40 rows and 20 columns.

Input arrays: A (40, 20), B (20, 81600).

Output array: C (40, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.473967 ms

xsmm-reference Time (libxsmm): 4.473967 ms

xsmm-reference No. of CPU cycles: 4473966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.4739666666666666

xsmm-reference avg execution time: 4.4739666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 351338774 cleaned_data/example_mats/tet/p3/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m0.txt...

Read matrix has 40 rows and 20 columns.

Input arrays: A (40, 20), B (20, 81600).

Output array: C (40, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 40, k= 20

lda= 81600, ldb= 20, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 40

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.466833 ms

xsmm-custom Time (libxsmm): 4.466867 ms

xsmm-custom No. of CPU cycles: 4466866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.4668333333333328

xsmm-custom avg execution time: 4.4668333333333328

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 800, 'a_rows': 40, 'a_size': 800, 'a_unique': 40, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0015969553374875, 'speedup_best_over_ref': 1.0015969553374875, 'xsmm_custom_avg': 4.466833333333333, 'xsmm_custom_best': 4.466833333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.473966666666667, 'xsmm_reference_best': 4.473966666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m3.txt...

Read matrix has 20 rows and 40 columns.

Input arrays: A (20, 40), B (40, 81600).

Output array: C (20, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.276300 ms

xsmm-reference Time (libxsmm): 4.276333 ms

xsmm-reference No. of CPU cycles: 4276333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.2763

xsmm-reference avg execution time: 4.2763

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 127441955 cleaned_data/example_mats/tet/p3/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m3.txt...

Read matrix has 20 rows and 40 columns.

Input arrays: A (20, 40), B (40, 81600).

Output array: C (20, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 40

lda= 81600, ldb= 40, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.316433 ms

xsmm-custom Time (libxsmm): 4.316433 ms

xsmm-custom No. of CPU cycles: 4316433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.3164333333333333

xsmm-custom avg execution time: 4.3164333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 40, 'a_nonzero': 800, 'a_rows': 20, 'a_size': 800, 'a_unique': 80, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9907022001189253, 'speedup_best_over_ref': 0.9907022001189253, 'xsmm_custom_avg': 4.316433333333333, 'xsmm_custom_best': 4.316433333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.2763, 'xsmm_reference_best': 4.2763, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m6.txt...

Read matrix has 60 rows and 40 columns.

Input arrays: A (60, 40), B (40, 81600).

Output array: C (60, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 10.756933 ms

xsmm-reference Time (libxsmm): 10.756900 ms

xsmm-reference No. of CPU cycles: 10756900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 10.756933333333334

xsmm-reference avg execution time: 10.756933333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1725841248 cleaned_data/example_mats/tet/p3/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m6.txt...

Read matrix has 60 rows and 40 columns.

Input arrays: A (60, 40), B (40, 81600).

Output array: C (60, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 60, k= 40

lda= 81600, ldb= 40, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 10.688700 ms

xsmm-custom Time (libxsmm): 10.688733 ms

xsmm-custom No. of CPU cycles: 10688733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 10.688699999999999

xsmm-custom avg execution time: 10.688699999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 40, 'a_nonzero': 1200, 'a_rows': 60, 'a_size': 2400, 'a_unique': 40, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0063836886930437, 'speedup_best_over_ref': 1.0063836886930437, 'xsmm_custom_avg': 10.688699999999999, 'xsmm_custom_best': 10.688699999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 10.756933333333334, 'xsmm_reference_best': 10.756933333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m132.txt...

Read matrix has 20 rows and 60 columns.

Input arrays: A (20, 60), B (60, 81600).

Output array: C (20, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.849733 ms

xsmm-reference Time (libxsmm): 6.849733 ms

xsmm-reference No. of CPU cycles: 6849733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.849733333333333

xsmm-reference avg execution time: 6.849733333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 430980443 cleaned_data/example_mats/tet/p3/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m132.txt...

Read matrix has 20 rows and 60 columns.

Input arrays: A (20, 60), B (60, 81600).

Output array: C (20, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 60

lda= 81600, ldb= 60, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.748333 ms

xsmm-custom Time (libxsmm): 6.748367 ms

xsmm-custom No. of CPU cycles: 6748366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.7483333333333331

xsmm-custom avg execution time: 6.7483333333333331

Freeing A

Freeing B

Freeing C

{'a_cols': 60, 'a_nonzero': 1092, 'a_rows': 20, 'a_size': 1200, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 0.91, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.01502593232897, 'speedup_best_over_ref': 1.01502593232897, 'xsmm_custom_avg': 6.748333333333333, 'xsmm_custom_best': 6.748333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.849733333333333, 'xsmm_reference_best': 6.849733333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m460.txt...

Read matrix has 60 rows and 20 columns.

Input arrays: A (60, 20), B (20, 81600).

Output array: C (60, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 6.200100 ms

xsmm-reference Time (libxsmm): 6.200067 ms

xsmm-reference No. of CPU cycles: 6200066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 6.2000999999999999

xsmm-reference avg execution time: 6.2000999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 121521547 cleaned_data/example_mats/tet/p3/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p3/shunn-ham/m460.txt...

Read matrix has 60 rows and 20 columns.

Input arrays: A (60, 20), B (20, 81600).

Output array: C (60, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 60, k= 20

lda= 81600, ldb= 20, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 6.118967 ms

xsmm-custom Time (libxsmm): 6.118933 ms

xsmm-custom No. of CPU cycles: 6118933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 6.1189666666666662

xsmm-custom avg execution time: 6.1189666666666662

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 1092, 'a_rows': 60, 'a_size': 1200, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 0.91, 'mat_file': 'data/example_mats/tet/p3/shunn-ham/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0132593193839918, 'speedup_best_over_ref': 1.0132593193839918, 'xsmm_custom_avg': 6.118966666666666, 'xsmm_custom_best': 6.118966666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 6.2001, 'xsmm_reference_best': 6.2001, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m0.txt...

Read matrix has 60 rows and 35 columns.

Input arrays: A (60, 35), B (35, 81600).

Output array: C (60, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 9.318933 ms

xsmm-reference Time (libxsmm): 9.318967 ms

xsmm-reference No. of CPU cycles: 9318966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 9.318933333333332

xsmm-reference avg execution time: 9.318933333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 789321791 cleaned_data/example_mats/tet/p4/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m0.txt...

Read matrix has 60 rows and 35 columns.

Input arrays: A (60, 35), B (35, 81600).

Output array: C (60, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 60, k= 35

lda= 81600, ldb= 35, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 9.555300 ms

xsmm-custom Time (libxsmm): 9.555300 ms

xsmm-custom No. of CPU cycles: 9555300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 9.555299999999999

xsmm-custom avg execution time: 9.555299999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 35, 'a_nonzero': 2100, 'a_rows': 60, 'a_size': 2100, 'a_unique': 101, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9752632919252491, 'speedup_best_over_ref': 0.9752632919252491, 'xsmm_custom_avg': 9.555299999999999, 'xsmm_custom_best': 9.555299999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 9.318933333333332, 'xsmm_reference_best': 9.318933333333332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m3.txt...

Read matrix has 35 rows and 60 columns.

Input arrays: A (35, 60), B (60, 81600).

Output array: C (35, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 9.805000 ms

xsmm-reference Time (libxsmm): 9.804967 ms

xsmm-reference No. of CPU cycles: 9804966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 9.8049999999999997

xsmm-reference avg execution time: 9.8049999999999997

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 486907134 cleaned_data/example_mats/tet/p4/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m3.txt...

Read matrix has 35 rows and 60 columns.

Input arrays: A (35, 60), B (60, 81600).

Output array: C (35, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 35, k= 60

lda= 81600, ldb= 60, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 9.802567 ms

xsmm-custom Time (libxsmm): 9.802567 ms

xsmm-custom No. of CPU cycles: 9802566

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 9.8025666666666673

xsmm-custom avg execution time: 9.8025666666666673

Freeing A

Freeing B

Freeing C

{'a_cols': 60, 'a_nonzero': 2100, 'a_rows': 35, 'a_size': 2100, 'a_unique': 202, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.000248234305981, 'speedup_best_over_ref': 1.000248234305981, 'xsmm_custom_avg': 9.802566666666667, 'xsmm_custom_best': 9.802566666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 9.805, 'xsmm_reference_best': 9.805, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m6.txt...

Read matrix has 105 rows and 60 columns.

Input arrays: A (105, 60), B (60, 81600).

Output array: C (105, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 30.354067 ms

xsmm-reference Time (libxsmm): 30.354067 ms

xsmm-reference No. of CPU cycles: 30354066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 30.354066666666665

xsmm-reference avg execution time: 30.354066666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1037472181 cleaned_data/example_mats/tet/p4/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m6.txt...

Read matrix has 105 rows and 60 columns.

Input arrays: A (105, 60), B (60, 81600).

Output array: C (105, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 105, k= 60

lda= 81600, ldb= 60, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 30.797733 ms

xsmm-custom Time (libxsmm): 30.797733 ms

xsmm-custom No. of CPU cycles: 30797733

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 30.797733333333333

xsmm-custom avg execution time: 30.797733333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 60, 'a_nonzero': 3150, 'a_rows': 105, 'a_size': 6300, 'a_unique': 101, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.985594177926514, 'speedup_best_over_ref': 0.985594177926514, 'xsmm_custom_avg': 30.797733333333333, 'xsmm_custom_best': 30.797733333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 30.354066666666665, 'xsmm_reference_best': 30.354066666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m132.txt...

Read matrix has 35 rows and 105 columns.

Input arrays: A (35, 105), B (105, 81600).

Output array: C (35, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 16.537333 ms

xsmm-reference Time (libxsmm): 16.537367 ms

xsmm-reference No. of CPU cycles: 16537366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 16.537333333333333

xsmm-reference avg execution time: 16.537333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 184888579 cleaned_data/example_mats/tet/p4/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m132.txt...

Read matrix has 35 rows and 105 columns.

Input arrays: A (35, 105), B (105, 81600).

Output array: C (35, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 35, k= 105

lda= 81600, ldb= 105, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 16.439333 ms

xsmm-custom Time (libxsmm): 16.439300 ms

xsmm-custom No. of CPU cycles: 16439300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 16.439333333333334

xsmm-custom avg execution time: 16.439333333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 105, 'a_nonzero': 3432, 'a_rows': 35, 'a_size': 3675, 'a_unique': 304, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9338775510204081, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0059613122997688, 'speedup_best_over_ref': 1.0059613122997688, 'xsmm_custom_avg': 16.439333333333334, 'xsmm_custom_best': 16.439333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 16.537333333333333, 'xsmm_reference_best': 16.537333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m460.txt...

Read matrix has 105 rows and 35 columns.

Input arrays: A (105, 35), B (35, 81600).

Output array: C (105, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 16.234033 ms

xsmm-reference Time (libxsmm): 16.234033 ms

xsmm-reference No. of CPU cycles: 16234033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 16.234033333333333

xsmm-reference avg execution time: 16.234033333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 200104269 cleaned_data/example_mats/tet/p4/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p4/shunn-ham/m460.txt...

Read matrix has 105 rows and 35 columns.

Input arrays: A (105, 35), B (35, 81600).

Output array: C (105, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 105, k= 35

lda= 81600, ldb= 35, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 16.191800 ms

xsmm-custom Time (libxsmm): 16.191867 ms

xsmm-custom No. of CPU cycles: 16191866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 16.191800000000001

xsmm-custom avg execution time: 16.191800000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 35, 'a_nonzero': 3432, 'a_rows': 105, 'a_size': 3675, 'a_unique': 304, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9338775510204081, 'mat_file': 'data/example_mats/tet/p4/shunn-ham/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0026083161435624, 'speedup_best_over_ref': 1.0026083161435624, 'xsmm_custom_avg': 16.1918, 'xsmm_custom_best': 16.1918, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 16.234033333333333, 'xsmm_reference_best': 16.234033333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m0.txt...

Read matrix has 84 rows and 56 columns.

Input arrays: A (84, 56), B (56, 81600).

Output array: C (84, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 21.147033 ms

xsmm-reference Time (libxsmm): 21.147033 ms

xsmm-reference No. of CPU cycles: 21147033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 21.147033333333336

xsmm-reference avg execution time: 21.147033333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 844543080 cleaned_data/example_mats/tet/p5/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m0.txt...

Read matrix has 84 rows and 56 columns.

Input arrays: A (84, 56), B (56, 81600).

Output array: C (84, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 84, k= 56

lda= 81600, ldb= 56, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 21.050400 ms

xsmm-custom Time (libxsmm): 21.050400 ms

xsmm-custom No. of CPU cycles: 21050400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 21.0504

xsmm-custom avg execution time: 21.0504

Freeing A

Freeing B

Freeing C

{'a_cols': 56, 'a_nonzero': 4704, 'a_rows': 84, 'a_size': 4704, 'a_unique': 214, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0045905699337465, 'speedup_best_over_ref': 1.0045905699337465, 'xsmm_custom_avg': 21.0504, 'xsmm_custom_best': 21.0504, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 21.147033333333336, 'xsmm_reference_best': 21.147033333333336, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m3.txt...

Read matrix has 56 rows and 84 columns.

Input arrays: A (56, 84), B (84, 81600).

Output array: C (56, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 20.981967 ms

xsmm-reference Time (libxsmm): 20.981967 ms

xsmm-reference No. of CPU cycles: 20981966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 20.981966666666665

xsmm-reference avg execution time: 20.981966666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1196779843 cleaned_data/example_mats/tet/p5/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m3.txt...

Read matrix has 56 rows and 84 columns.

Input arrays: A (56, 84), B (84, 81600).

Output array: C (56, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 84

lda= 81600, ldb= 84, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 20.248333 ms

xsmm-custom Time (libxsmm): 20.248300 ms

xsmm-custom No. of CPU cycles: 20248300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 20.248333333333335

xsmm-custom avg execution time: 20.248333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 4704, 'a_rows': 56, 'a_size': 4704, 'a_unique': 428, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.036231788624578, 'speedup_best_over_ref': 1.036231788624578, 'xsmm_custom_avg': 20.248333333333335, 'xsmm_custom_best': 20.248333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 20.981966666666665, 'xsmm_reference_best': 20.981966666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m6.txt...

Read matrix has 168 rows and 84 columns.

Input arrays: A (168, 84), B (84, 81600).

Output array: C (168, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 60.188867 ms

xsmm-reference Time (libxsmm): 60.188867 ms

xsmm-reference No. of CPU cycles: 60188866

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 60.188866666666662

xsmm-reference avg execution time: 60.188866666666662

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1191474420 cleaned_data/example_mats/tet/p5/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m6.txt...

Read matrix has 168 rows and 84 columns.

Input arrays: A (168, 84), B (84, 81600).

Output array: C (168, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 168, k= 84

lda= 81600, ldb= 84, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 168

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 60.270733 ms

xsmm-custom Time (libxsmm): 60.270700 ms

xsmm-custom No. of CPU cycles: 60270700

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 60.270733333333332

xsmm-custom avg execution time: 60.270733333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 7056, 'a_rows': 168, 'a_size': 14112, 'a_unique': 214, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9986416845765937, 'speedup_best_over_ref': 0.9986416845765937, 'xsmm_custom_avg': 60.27073333333333, 'xsmm_custom_best': 60.27073333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 60.18886666666666, 'xsmm_reference_best': 60.18886666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m132.txt...

Read matrix has 56 rows and 168 columns.

Input arrays: A (56, 168), B (168, 81600).

Output array: C (56, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 51.502067 ms

xsmm-reference Time (libxsmm): 51.502033 ms

xsmm-reference No. of CPU cycles: 51502033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 51.502066666666664

xsmm-reference avg execution time: 51.502066666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 785425633 cleaned_data/example_mats/tet/p5/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m132.txt...

Read matrix has 56 rows and 168 columns.

Input arrays: A (56, 168), B (168, 81600).

Output array: C (56, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 168

lda= 81600, ldb= 168, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 43.663833 ms

xsmm-custom Time (libxsmm): 43.663800 ms

xsmm-custom No. of CPU cycles: 43663800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 43.663833333333329

xsmm-custom avg execution time: 43.663833333333329

Freeing A

Freeing B

Freeing C

{'a_cols': 168, 'a_nonzero': 8976, 'a_rows': 56, 'a_size': 9408, 'a_unique': 784, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9540816326530612, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.1795131745189573, 'speedup_best_over_ref': 1.1795131745189573, 'xsmm_custom_avg': 43.66383333333333, 'xsmm_custom_best': 43.66383333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 51.502066666666664, 'xsmm_reference_best': 51.502066666666664, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m460.txt...

Read matrix has 168 rows and 56 columns.

Input arrays: A (168, 56), B (56, 81600).

Output array: C (168, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 45.093267 ms

xsmm-reference Time (libxsmm): 45.093233 ms

xsmm-reference No. of CPU cycles: 45093233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 45.093266666666665

xsmm-reference avg execution time: 45.093266666666665

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 530702816 cleaned_data/example_mats/tet/p5/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p5/shunn-ham/m460.txt...

Read matrix has 168 rows and 56 columns.

Input arrays: A (168, 56), B (56, 81600).

Output array: C (168, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 168, k= 56

lda= 81600, ldb= 56, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 168

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 45.052233 ms

xsmm-custom Time (libxsmm): 45.052200 ms

xsmm-custom No. of CPU cycles: 45052200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 45.052233333333334

xsmm-custom avg execution time: 45.052233333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 56, 'a_nonzero': 8976, 'a_rows': 168, 'a_size': 9408, 'a_unique': 784, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9540816326530612, 'mat_file': 'data/example_mats/tet/p5/shunn-ham/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0009107946553888, 'speedup_best_over_ref': 1.0009107946553888, 'xsmm_custom_avg': 45.052233333333334, 'xsmm_custom_best': 45.052233333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 45.093266666666665, 'xsmm_reference_best': 45.093266666666665, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m0.txt...

Read matrix has 112 rows and 84 columns.

Input arrays: A (112, 84), B (84, 81600).

Output array: C (112, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 42.663033 ms

xsmm-reference Time (libxsmm): 42.663067 ms

xsmm-reference No. of CPU cycles: 42663066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 42.663033333333338

xsmm-reference avg execution time: 42.663033333333338

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 834849615 cleaned_data/example_mats/tet/p6/shunn-ham/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m0.txt...

Read matrix has 112 rows and 84 columns.

Input arrays: A (112, 84), B (84, 81600).

Output array: C (112, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 112, k= 84

lda= 81600, ldb= 84, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 112

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 41.994700 ms

xsmm-custom Time (libxsmm): 41.994667 ms

xsmm-custom No. of CPU cycles: 41994666

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 41.994699999999995

xsmm-custom avg execution time: 41.994699999999995

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 9408, 'a_rows': 112, 'a_size': 9408, 'a_unique': 425, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0159147066971153, 'speedup_best_over_ref': 1.0159147066971153, 'xsmm_custom_avg': 41.994699999999995, 'xsmm_custom_best': 41.994699999999995, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 42.66303333333334, 'xsmm_reference_best': 42.66303333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m3.txt...

Read matrix has 84 rows and 112 columns.

Input arrays: A (84, 112), B (112, 81600).

Output array: C (84, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 42.693633 ms

xsmm-reference Time (libxsmm): 42.693600 ms

xsmm-reference No. of CPU cycles: 42693600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 42.693633333333331

xsmm-reference avg execution time: 42.693633333333331

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1795143922 cleaned_data/example_mats/tet/p6/shunn-ham/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m3.txt...

Read matrix has 84 rows and 112 columns.

Input arrays: A (84, 112), B (112, 81600).

Output array: C (84, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 84, k= 112

lda= 81600, ldb= 112, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 42.384200 ms

xsmm-custom Time (libxsmm): 42.384167 ms

xsmm-custom No. of CPU cycles: 42384166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 42.384199999999993

xsmm-custom avg execution time: 42.384199999999993

Freeing A

Freeing B

Freeing C

{'a_cols': 112, 'a_nonzero': 9408, 'a_rows': 84, 'a_size': 9408, 'a_unique': 850, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0073006765099575, 'speedup_best_over_ref': 1.0073006765099575, 'xsmm_custom_avg': 42.38419999999999, 'xsmm_custom_best': 42.38419999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 42.69363333333333, 'xsmm_reference_best': 42.69363333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m6.txt...

Read matrix has 252 rows and 112 columns.

Input arrays: A (252, 112), B (112, 81600).

Output array: C (252, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 111.056367 ms

xsmm-reference Time (libxsmm): 111.056367 ms

xsmm-reference No. of CPU cycles: 111056366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 111.05636666666666

xsmm-reference avg execution time: 111.05636666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 704173632 cleaned_data/example_mats/tet/p6/shunn-ham/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m6.txt...

Read matrix has 252 rows and 112 columns.

Input arrays: A (252, 112), B (112, 81600).

Output array: C (252, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 252, k= 112

lda= 81600, ldb= 112, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 111.230833 ms

xsmm-custom Time (libxsmm): 111.230800 ms

xsmm-custom No. of CPU cycles: 111230800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 111.23083333333334

xsmm-custom avg execution time: 111.23083333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 112, 'a_nonzero': 14112, 'a_rows': 252, 'a_size': 28224, 'a_unique': 425, 'alpha': 1.0, 'beta': 0.0, 'density': 0.5, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9984314900694501, 'speedup_best_over_ref': 0.9984314900694501, 'xsmm_custom_avg': 111.23083333333334, 'xsmm_custom_best': 111.23083333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 111.05636666666666, 'xsmm_reference_best': 111.05636666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m132.txt...

Read matrix has 84 rows and 252 columns.

Input arrays: A (84, 252), B (252, 81600).

Output array: C (84, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 98.510567 ms

xsmm-reference Time (libxsmm): 98.510600 ms

xsmm-reference No. of CPU cycles: 98510600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 98.510566666666662

xsmm-reference avg execution time: 98.510566666666662

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1471481837 cleaned_data/example_mats/tet/p6/shunn-ham/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m132.txt...

Read matrix has 84 rows and 252 columns.

Input arrays: A (84, 252), B (252, 81600).

Output array: C (84, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 84, k= 252

lda= 81600, ldb= 252, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 99.183233 ms

xsmm-custom Time (libxsmm): 99.183200 ms

xsmm-custom No. of CPU cycles: 99183200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 99.183233333333334

xsmm-custom avg execution time: 99.183233333333334

Freeing A

Freeing B

Freeing C

{'a_cols': 252, 'a_nonzero': 20400, 'a_rows': 84, 'a_size': 21168, 'a_unique': 1760, 'alpha': 1.0, 'beta': 0.0, 'density': 0.963718820861678, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9932179397256996, 'speedup_best_over_ref': 0.9932179397256996, 'xsmm_custom_avg': 99.18323333333333, 'xsmm_custom_best': 99.18323333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 98.51056666666666, 'xsmm_reference_best': 98.51056666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m460.txt...

Read matrix has 252 rows and 84 columns.

Input arrays: A (252, 84), B (84, 81600).

Output array: C (252, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 89.010033 ms

xsmm-reference Time (libxsmm): 89.010000 ms

xsmm-reference No. of CPU cycles: 89010000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 89.010033333333325

xsmm-reference avg execution time: 89.010033333333325

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 62086217 cleaned_data/example_mats/tet/p6/shunn-ham/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tet/p6/shunn-ham/m460.txt...

Read matrix has 252 rows and 84 columns.

Input arrays: A (252, 84), B (84, 81600).

Output array: C (252, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 252, k= 84

lda= 81600, ldb= 84, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 87.129167 ms

xsmm-custom Time (libxsmm): 87.129133 ms

xsmm-custom No. of CPU cycles: 87129133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 87.129166666666663

xsmm-custom avg execution time: 87.129166666666663

Freeing A

Freeing B

Freeing C

{'a_cols': 84, 'a_nonzero': 20400, 'a_rows': 252, 'a_size': 21168, 'a_unique': 1760, 'alpha': 1.0, 'beta': 0.0, 'density': 0.963718820861678, 'mat_file': 'data/example_mats/tet/p6/shunn-ham/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0215871072641194, 'speedup_best_over_ref': 1.0215871072641194, 'xsmm_custom_avg': 87.12916666666666, 'xsmm_custom_best': 87.12916666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 89.01003333333333, 'xsmm_reference_best': 89.01003333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m0.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 81600).

Output array: C (6, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.168167 ms

xsmm-reference Time (libxsmm): 0.168167 ms

xsmm-reference No. of CPU cycles: 168166

CPU clock speed (GHz): 0.999996

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.16816666666666666

xsmm-reference avg execution time: 0.16816666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 2106181752 cleaned_data/example_mats/tri/p1/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m0.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 81600).

Output array: C (6, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 3

lda= 81600, ldb= 3, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.192967 ms

xsmm-custom Time (libxsmm): 0.192967 ms

xsmm-custom No. of CPU cycles: 192966

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.19296666666666665

xsmm-custom avg execution time: 0.19296666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 3, 'a_nonzero': 18, 'a_rows': 6, 'a_size': 18, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.871480393850406, 'speedup_best_over_ref': 0.871480393850406, 'xsmm_custom_avg': 0.19296666666666665, 'xsmm_custom_best': 0.19296666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.16816666666666666, 'xsmm_reference_best': 0.16816666666666666, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m3.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 81600).

Output array: C (3, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.156800 ms

xsmm-reference Time (libxsmm): 0.156800 ms

xsmm-reference No. of CPU cycles: 156800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.15679999999999999

xsmm-reference avg execution time: 0.15679999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 297864100 cleaned_data/example_mats/tri/p1/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m3.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 81600).

Output array: C (3, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 3, k= 6

lda= 81600, ldb= 6, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.187100 ms

xsmm-custom Time (libxsmm): 0.187100 ms

xsmm-custom No. of CPU cycles: 187100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.18710000000000002

xsmm-custom avg execution time: 0.18710000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 18, 'a_rows': 3, 'a_size': 18, 'a_unique': 6, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.838054516301443, 'speedup_best_over_ref': 0.838054516301443, 'xsmm_custom_avg': 0.18710000000000002, 'xsmm_custom_best': 0.18710000000000002, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.1568, 'xsmm_reference_best': 0.1568, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m6.txt...

Read matrix has 6 rows and 6 columns.

Input arrays: A (6, 6), B (6, 81600).

Output array: C (6, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.227267 ms

xsmm-reference Time (libxsmm): 0.227267 ms

xsmm-reference No. of CPU cycles: 227266

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.22726666666666664

xsmm-reference avg execution time: 0.22726666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 595286767 cleaned_data/example_mats/tri/p1/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m6.txt...

Read matrix has 6 rows and 6 columns.

Input arrays: A (6, 6), B (6, 81600).

Output array: C (6, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 6

lda= 81600, ldb= 6, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.252567 ms

xsmm-custom Time (libxsmm): 0.252567 ms

xsmm-custom No. of CPU cycles: 252566

CPU clock speed (GHz): 0.999997

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.25256666666666666

xsmm-custom avg execution time: 0.25256666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 24, 'a_rows': 6, 'a_size': 36, 'a_unique': 3, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.8998284281377853, 'speedup_best_over_ref': 0.8998284281377853, 'xsmm_custom_avg': 0.25256666666666666, 'xsmm_custom_best': 0.25256666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.22726666666666664, 'xsmm_reference_best': 0.22726666666666664, 'xsmm_reference_cpu_freq': 0.999997, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m132.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 81600).

Output array: C (3, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.148333 ms

xsmm-reference Time (libxsmm): 0.148300 ms

xsmm-reference No. of CPU cycles: 148300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.14833333333333334

xsmm-reference avg execution time: 0.14833333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 2117989216 cleaned_data/example_mats/tri/p1/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m132.txt...

Read matrix has 3 rows and 6 columns.

Input arrays: A (3, 6), B (6, 81600).

Output array: C (3, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 3, k= 6

lda= 81600, ldb= 6, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.184333 ms

xsmm-custom Time (libxsmm): 0.184333 ms

xsmm-custom No. of CPU cycles: 184333

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.18433333333333335

xsmm-custom avg execution time: 0.18433333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 12, 'a_rows': 3, 'a_size': 18, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.8047016274864376, 'speedup_best_over_ref': 0.8047016274864376, 'xsmm_custom_avg': 0.18433333333333335, 'xsmm_custom_best': 0.18433333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.14833333333333334, 'xsmm_reference_best': 0.14833333333333334, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m460.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 81600).

Output array: C (6, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.170733 ms

xsmm-reference Time (libxsmm): 0.170733 ms

xsmm-reference No. of CPU cycles: 170733

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.17073333333333332

xsmm-reference avg execution time: 0.17073333333333332

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 299377490 cleaned_data/example_mats/tri/p1/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p1/williams-shunn/m460.txt...

Read matrix has 6 rows and 3 columns.

Input arrays: A (6, 3), B (3, 81600).

Output array: C (6, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 3

lda= 81600, ldb= 3, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.204867 ms

xsmm-custom Time (libxsmm): 0.204900 ms

xsmm-custom No. of CPU cycles: 204900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.20486666666666667

xsmm-custom avg execution time: 0.20486666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 3, 'a_nonzero': 12, 'a_rows': 6, 'a_size': 18, 'a_unique': 1, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p1/williams-shunn/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.833387569150667, 'speedup_best_over_ref': 0.833387569150667, 'xsmm_custom_avg': 0.20486666666666667, 'xsmm_custom_best': 0.20486666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.17073333333333332, 'xsmm_reference_best': 0.17073333333333332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m0.txt...

Read matrix has 9 rows and 6 columns.

Input arrays: A (9, 6), B (6, 81600).

Output array: C (9, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.342733 ms

xsmm-reference Time (libxsmm): 0.342733 ms

xsmm-reference No. of CPU cycles: 342733

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.34273333333333333

xsmm-reference avg execution time: 0.34273333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 985283914 cleaned_data/example_mats/tri/p2/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m0.txt...

Read matrix has 9 rows and 6 columns.

Input arrays: A (9, 6), B (6, 81600).

Output array: C (9, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 9, k= 6

lda= 81600, ldb= 6, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.361900 ms

xsmm-custom Time (libxsmm): 0.361900 ms

xsmm-custom No. of CPU cycles: 361900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.3619

xsmm-custom avg execution time: 0.3619

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 54, 'a_rows': 9, 'a_size': 54, 'a_unique': 10, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9470387768260109, 'speedup_best_over_ref': 0.9470387768260109, 'xsmm_custom_avg': 0.3619, 'xsmm_custom_best': 0.3619, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.34273333333333333, 'xsmm_reference_best': 0.34273333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m3.txt...

Read matrix has 6 rows and 9 columns.

Input arrays: A (6, 9), B (9, 81600).

Output array: C (6, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.296533 ms

xsmm-reference Time (libxsmm): 0.296533 ms

xsmm-reference No. of CPU cycles: 296533

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.29653333333333337

xsmm-reference avg execution time: 0.29653333333333337

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1815218846 cleaned_data/example_mats/tri/p2/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m3.txt...

Read matrix has 6 rows and 9 columns.

Input arrays: A (6, 9), B (9, 81600).

Output array: C (6, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 9

lda= 81600, ldb= 9, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.317667 ms

xsmm-custom Time (libxsmm): 0.317667 ms

xsmm-custom No. of CPU cycles: 317666

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.31766666666666665

xsmm-custom avg execution time: 0.31766666666666665

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 54, 'a_rows': 6, 'a_size': 54, 'a_unique': 20, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9334732423924451, 'speedup_best_over_ref': 0.9334732423924451, 'xsmm_custom_avg': 0.31766666666666665, 'xsmm_custom_best': 0.31766666666666665, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.29653333333333337, 'xsmm_reference_best': 0.29653333333333337, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m6.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 81600).

Output array: C (12, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.488367 ms

xsmm-reference Time (libxsmm): 0.488367 ms

xsmm-reference No. of CPU cycles: 488366

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.48836666666666667

xsmm-reference avg execution time: 0.48836666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1245711790 cleaned_data/example_mats/tri/p2/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m6.txt...

Read matrix has 12 rows and 9 columns.

Input arrays: A (12, 9), B (9, 81600).

Output array: C (12, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 9

lda= 81600, ldb= 9, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.482300 ms

xsmm-custom Time (libxsmm): 0.482300 ms

xsmm-custom No. of CPU cycles: 482300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.48230000000000001

xsmm-custom avg execution time: 0.48230000000000001

Freeing A

Freeing B

Freeing C

{'a_cols': 9, 'a_nonzero': 72, 'a_rows': 12, 'a_size': 108, 'a_unique': 10, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0125786163522013, 'speedup_best_over_ref': 1.0125786163522013, 'xsmm_custom_avg': 0.4823, 'xsmm_custom_best': 0.4823, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.48836666666666667, 'xsmm_reference_best': 0.48836666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m132.txt...

Read matrix has 6 rows and 12 columns.

Input arrays: A (6, 12), B (12, 81600).

Output array: C (6, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.371767 ms

xsmm-reference Time (libxsmm): 0.371767 ms

xsmm-reference No. of CPU cycles: 371766

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.37176666666666669

xsmm-reference avg execution time: 0.37176666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 862443872 cleaned_data/example_mats/tri/p2/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m132.txt...

Read matrix has 6 rows and 12 columns.

Input arrays: A (6, 12), B (12, 81600).

Output array: C (6, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 6, k= 12

lda= 81600, ldb= 12, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.361233 ms

xsmm-custom Time (libxsmm): 0.361233 ms

xsmm-custom No. of CPU cycles: 361233

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.36123333333333335

xsmm-custom avg execution time: 0.36123333333333335

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 64, 'a_rows': 6, 'a_size': 72, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 0.8888888888888888, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.029159361446895, 'speedup_best_over_ref': 1.029159361446895, 'xsmm_custom_avg': 0.36123333333333335, 'xsmm_custom_best': 0.36123333333333335, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.3717666666666667, 'xsmm_reference_best': 0.3717666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m460.txt...

Read matrix has 12 rows and 6 columns.

Input arrays: A (12, 6), B (6, 81600).

Output array: C (12, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.404100 ms

xsmm-reference Time (libxsmm): 0.404100 ms

xsmm-reference No. of CPU cycles: 404100

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.40409999999999996

xsmm-reference avg execution time: 0.40409999999999996

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 626533937 cleaned_data/example_mats/tri/p2/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p2/williams-shunn/m460.txt...

Read matrix has 12 rows and 6 columns.

Input arrays: A (12, 6), B (6, 81600).

Output array: C (12, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 6

lda= 81600, ldb= 6, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.409467 ms

xsmm-custom Time (libxsmm): 0.409467 ms

xsmm-custom No. of CPU cycles: 409466

CPU clock speed (GHz): 0.999998

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.4094666666666667

xsmm-custom avg execution time: 0.4094666666666667

Freeing A

Freeing B

Freeing C

{'a_cols': 6, 'a_nonzero': 64, 'a_rows': 12, 'a_size': 72, 'a_unique': 14, 'alpha': 1.0, 'beta': 0.0, 'density': 0.8888888888888888, 'mat_file': 'data/example_mats/tri/p2/williams-shunn/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.98689352002605, 'speedup_best_over_ref': 0.98689352002605, 'xsmm_custom_avg': 0.4094666666666667, 'xsmm_custom_best': 0.4094666666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.40409999999999996, 'xsmm_reference_best': 0.40409999999999996, 'xsmm_reference_cpu_freq': 0.999998, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m0.txt...

Read matrix has 12 rows and 10 columns.

Input arrays: A (12, 10), B (10, 81600).

Output array: C (12, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.523967 ms

xsmm-reference Time (libxsmm): 0.523967 ms

xsmm-reference No. of CPU cycles: 523966

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.52396666666666669

xsmm-reference avg execution time: 0.52396666666666669

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 852480319 cleaned_data/example_mats/tri/p3/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m0.txt...

Read matrix has 12 rows and 10 columns.

Input arrays: A (12, 10), B (10, 81600).

Output array: C (12, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 12, k= 10

lda= 81600, ldb= 10, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.522700 ms

xsmm-custom Time (libxsmm): 0.522667 ms

xsmm-custom No. of CPU cycles: 522666

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.52269999999999994

xsmm-custom avg execution time: 0.52269999999999994

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 120, 'a_rows': 12, 'a_size': 120, 'a_unique': 20, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.0024233148396149, 'speedup_best_over_ref': 1.0024233148396149, 'xsmm_custom_avg': 0.5226999999999999, 'xsmm_custom_best': 0.5226999999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5239666666666667, 'xsmm_reference_best': 0.5239666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m3.txt...

Read matrix has 10 rows and 12 columns.

Input arrays: A (10, 12), B (12, 81600).

Output array: C (10, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.501967 ms

xsmm-reference Time (libxsmm): 0.501967 ms

xsmm-reference No. of CPU cycles: 501966

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.50196666666666667

xsmm-reference avg execution time: 0.50196666666666667

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 2070567227 cleaned_data/example_mats/tri/p3/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m3.txt...

Read matrix has 10 rows and 12 columns.

Input arrays: A (10, 12), B (12, 81600).

Output array: C (10, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 12

lda= 81600, ldb= 12, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 0.512733 ms

xsmm-custom Time (libxsmm): 0.512733 ms

xsmm-custom No. of CPU cycles: 512733

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 0.51273333333333337

xsmm-custom avg execution time: 0.51273333333333337

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 120, 'a_rows': 10, 'a_size': 120, 'a_unique': 40, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9790014302431412, 'speedup_best_over_ref': 0.9790014302431412, 'xsmm_custom_avg': 0.5127333333333334, 'xsmm_custom_best': 0.5127333333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.5019666666666667, 'xsmm_reference_best': 0.5019666666666667, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m6.txt...

Read matrix has 20 rows and 12 columns.

Input arrays: A (20, 12), B (12, 81600).

Output array: C (20, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.190467 ms

xsmm-reference Time (libxsmm): 1.190467 ms

xsmm-reference No. of CPU cycles: 1190466

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.1904666666666666

xsmm-reference avg execution time: 1.1904666666666666

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 700179147 cleaned_data/example_mats/tri/p3/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m6.txt...

Read matrix has 20 rows and 12 columns.

Input arrays: A (20, 12), B (12, 81600).

Output array: C (20, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 12

lda= 81600, ldb= 12, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.201833 ms

xsmm-custom Time (libxsmm): 1.201833 ms

xsmm-custom No. of CPU cycles: 1201833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.2018333333333318

xsmm-custom avg execution time: 1.2018333333333318

Freeing A

Freeing B

Freeing C

{'a_cols': 12, 'a_nonzero': 160, 'a_rows': 20, 'a_size': 240, 'a_unique': 20, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9905422271529619, 'speedup_best_over_ref': 0.9905422271529619, 'xsmm_custom_avg': 1.2018333333333318, 'xsmm_custom_best': 1.2018333333333318, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.1904666666666666, 'xsmm_reference_best': 1.1904666666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m132.txt...

Read matrix has 10 rows and 20 columns.

Input arrays: A (10, 20), B (20, 81600).

Output array: C (10, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.949000 ms

xsmm-reference Time (libxsmm): 0.948967 ms

xsmm-reference No. of CPU cycles: 948966

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.94899999999999995

xsmm-reference avg execution time: 0.94899999999999995

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1312754400 cleaned_data/example_mats/tri/p3/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m132.txt...

Read matrix has 10 rows and 20 columns.

Input arrays: A (10, 20), B (20, 81600).

Output array: C (10, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 10, k= 20

lda= 81600, ldb= 20, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.020800 ms

xsmm-custom Time (libxsmm): 1.020800 ms

xsmm-custom No. of CPU cycles: 1020800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.0207999999999999

xsmm-custom avg execution time: 1.0207999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 20, 'a_nonzero': 192, 'a_rows': 10, 'a_size': 200, 'a_unique': 48, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9296630094043887, 'speedup_best_over_ref': 0.9296630094043887, 'xsmm_custom_avg': 1.0208, 'xsmm_custom_best': 1.0208, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.949, 'xsmm_reference_best': 0.949, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m460.txt...

Read matrix has 20 rows and 10 columns.

Input arrays: A (20, 10), B (10, 81600).

Output array: C (20, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.971167 ms

xsmm-reference Time (libxsmm): 0.971167 ms

xsmm-reference No. of CPU cycles: 971166

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.97116666666666673

xsmm-reference avg execution time: 0.97116666666666673

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1164748637 cleaned_data/example_mats/tri/p3/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p3/williams-shunn/m460.txt...

Read matrix has 20 rows and 10 columns.

Input arrays: A (20, 10), B (10, 81600).

Output array: C (20, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 20, k= 10

lda= 81600, ldb= 10, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.024233 ms

xsmm-custom Time (libxsmm): 1.024233 ms

xsmm-custom No. of CPU cycles: 1024233

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.0242333333333333

xsmm-custom avg execution time: 1.0242333333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 10, 'a_nonzero': 192, 'a_rows': 20, 'a_size': 200, 'a_unique': 48, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p3/williams-shunn/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9481888892504964, 'speedup_best_over_ref': 0.9481888892504964, 'xsmm_custom_avg': 1.0242333333333333, 'xsmm_custom_best': 1.0242333333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.9711666666666667, 'xsmm_reference_best': 0.9711666666666667, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m0.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 81600).

Output array: C (15, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 1.031633 ms

xsmm-reference Time (libxsmm): 1.031633 ms

xsmm-reference No. of CPU cycles: 1031633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 1.0316333333333334

xsmm-reference avg execution time: 1.0316333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1698766857 cleaned_data/example_mats/tri/p4/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m0.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 81600).

Output array: C (15, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 15, k= 15

lda= 81600, ldb= 15, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.017300 ms

xsmm-custom Time (libxsmm): 1.017200 ms

xsmm-custom No. of CPU cycles: 1017200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.0172999999999999

xsmm-custom avg execution time: 1.0172999999999999

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 225, 'a_rows': 15, 'a_size': 225, 'a_unique': 39, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.014089583538124, 'speedup_best_over_ref': 1.014089583538124, 'xsmm_custom_avg': 1.0172999999999999, 'xsmm_custom_best': 1.0172999999999999, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 1.0316333333333334, 'xsmm_reference_best': 1.0316333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m3.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 81600).

Output array: C (15, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 0.978800 ms

xsmm-reference Time (libxsmm): 0.978800 ms

xsmm-reference No. of CPU cycles: 978800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 0.9788

xsmm-reference avg execution time: 0.9788

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 299067283 cleaned_data/example_mats/tri/p4/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m3.txt...

Read matrix has 15 rows and 15 columns.

Input arrays: A (15, 15), B (15, 81600).

Output array: C (15, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 15, k= 15

lda= 81600, ldb= 15, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 1.028567 ms

xsmm-custom Time (libxsmm): 1.028567 ms

xsmm-custom No. of CPU cycles: 1028566

CPU clock speed (GHz): 0.999999

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 1.0285666666666666

xsmm-custom avg execution time: 1.0285666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 225, 'a_rows': 15, 'a_size': 225, 'a_unique': 78, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9516155167385034, 'speedup_best_over_ref': 0.9516155167385034, 'xsmm_custom_avg': 1.0285666666666666, 'xsmm_custom_best': 1.0285666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 0.9788, 'xsmm_reference_best': 0.9788, 'xsmm_reference_cpu_freq': 0.999999, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m6.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 81600).

Output array: C (30, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.524967 ms

xsmm-reference Time (libxsmm): 2.524967 ms

xsmm-reference No. of CPU cycles: 2524966

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.5249666666666664

xsmm-reference avg execution time: 2.5249666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1149282954 cleaned_data/example_mats/tri/p4/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m6.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 81600).

Output array: C (30, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 15

lda= 81600, ldb= 15, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.641833 ms

xsmm-custom Time (libxsmm): 2.641833 ms

xsmm-custom No. of CPU cycles: 2641833

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.641833333333333

xsmm-custom avg execution time: 2.641833333333333

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 300, 'a_rows': 30, 'a_size': 450, 'a_unique': 39, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9557630433411142, 'speedup_best_over_ref': 0.9557630433411142, 'xsmm_custom_avg': 2.641833333333333, 'xsmm_custom_best': 2.641833333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.5249666666666664, 'xsmm_reference_best': 2.5249666666666664, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m132.txt...

Read matrix has 15 rows and 30 columns.

Input arrays: A (15, 30), B (30, 81600).

Output array: C (15, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.586833 ms

xsmm-reference Time (libxsmm): 2.586800 ms

xsmm-reference No. of CPU cycles: 2586800

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.5868333333333333

xsmm-reference avg execution time: 2.5868333333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 725573862 cleaned_data/example_mats/tri/p4/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m132.txt...

Read matrix has 15 rows and 30 columns.

Input arrays: A (15, 30), B (30, 81600).

Output array: C (15, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 15, k= 30

lda= 81600, ldb= 30, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.639200 ms

xsmm-custom Time (libxsmm): 2.639167 ms

xsmm-custom No. of CPU cycles: 2639166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.6392000000000002

xsmm-custom avg execution time: 2.6392000000000002

Freeing A

Freeing B

Freeing C

{'a_cols': 30, 'a_nonzero': 432, 'a_rows': 15, 'a_size': 450, 'a_unique': 108, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9801581287258765, 'speedup_best_over_ref': 0.9801581287258765, 'xsmm_custom_avg': 2.6392, 'xsmm_custom_best': 2.6392, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.5868333333333333, 'xsmm_reference_best': 2.5868333333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m460.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 81600).

Output array: C (30, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.537200 ms

xsmm-reference Time (libxsmm): 2.537200 ms

xsmm-reference No. of CPU cycles: 2537200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.5371999999999999

xsmm-reference avg execution time: 2.5371999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 253448015 cleaned_data/example_mats/tri/p4/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p4/williams-shunn/m460.txt...

Read matrix has 30 rows and 15 columns.

Input arrays: A (30, 15), B (15, 81600).

Output array: C (30, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 30, k= 15

lda= 81600, ldb= 15, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.690367 ms

xsmm-custom Time (libxsmm): 2.690367 ms

xsmm-custom No. of CPU cycles: 2690366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.6903666666666668

xsmm-custom avg execution time: 2.6903666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 15, 'a_nonzero': 432, 'a_rows': 30, 'a_size': 450, 'a_unique': 108, 'alpha': 1.0, 'beta': 0.0, 'density': 0.96, 'mat_file': 'data/example_mats/tri/p4/williams-shunn/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9430684788938309, 'speedup_best_over_ref': 0.9430684788938309, 'xsmm_custom_avg': 2.690366666666667, 'xsmm_custom_best': 2.690366666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.5372, 'xsmm_reference_best': 2.5372, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m0.txt...

Read matrix has 18 rows and 21 columns.

Input arrays: A (18, 21), B (21, 81600).

Output array: C (18, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.016900 ms

xsmm-reference Time (libxsmm): 2.016900 ms

xsmm-reference No. of CPU cycles: 2016900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.0169000000000001

xsmm-reference avg execution time: 2.0169000000000001

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 344561071 cleaned_data/example_mats/tri/p5/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m0.txt...

Read matrix has 18 rows and 21 columns.

Input arrays: A (18, 21), B (21, 81600).

Output array: C (18, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 18, k= 21

lda= 81600, ldb= 21, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.112033 ms

xsmm-custom Time (libxsmm): 2.112033 ms

xsmm-custom No. of CPU cycles: 2112033

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.1120333333333332

xsmm-custom avg execution time: 2.1120333333333332

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 378, 'a_rows': 18, 'a_size': 378, 'a_unique': 63, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9549565189943342, 'speedup_best_over_ref': 0.9549565189943342, 'xsmm_custom_avg': 2.112033333333333, 'xsmm_custom_best': 2.112033333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.0169, 'xsmm_reference_best': 2.0169, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m3.txt...

Read matrix has 21 rows and 18 columns.

Input arrays: A (21, 18), B (18, 81600).

Output array: C (21, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 2.092233 ms

xsmm-reference Time (libxsmm): 2.092200 ms

xsmm-reference No. of CPU cycles: 2092200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 2.0922333333333336

xsmm-reference avg execution time: 2.0922333333333336

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 737394886 cleaned_data/example_mats/tri/p5/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m3.txt...

Read matrix has 21 rows and 18 columns.

Input arrays: A (21, 18), B (18, 81600).

Output array: C (21, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 21, k= 18

lda= 81600, ldb= 18, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 2.179867 ms

xsmm-custom Time (libxsmm): 2.179900 ms

xsmm-custom No. of CPU cycles: 2179900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 2.1798666666666668

xsmm-custom avg execution time: 2.1798666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 378, 'a_rows': 21, 'a_size': 378, 'a_unique': 126, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9597987644504251, 'speedup_best_over_ref': 0.9597987644504251, 'xsmm_custom_avg': 2.179866666666667, 'xsmm_custom_best': 2.179866666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 2.0922333333333336, 'xsmm_reference_best': 2.0922333333333336, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m6.txt...

Read matrix has 42 rows and 18 columns.

Input arrays: A (42, 18), B (18, 81600).

Output array: C (42, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.839433 ms

xsmm-reference Time (libxsmm): 3.839433 ms

xsmm-reference No. of CPU cycles: 3839433

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.839433333333333

xsmm-reference avg execution time: 3.839433333333333

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1791739496 cleaned_data/example_mats/tri/p5/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m6.txt...

Read matrix has 42 rows and 18 columns.

Input arrays: A (42, 18), B (18, 81600).

Output array: C (42, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 42, k= 18

lda= 81600, ldb= 18, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.958200 ms

xsmm-custom Time (libxsmm): 3.958167 ms

xsmm-custom No. of CPU cycles: 3958166

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.9581999999999997

xsmm-custom avg execution time: 3.9581999999999997

Freeing A

Freeing B

Freeing C

{'a_cols': 18, 'a_nonzero': 504, 'a_rows': 42, 'a_size': 756, 'a_unique': 63, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9699947787714954, 'speedup_best_over_ref': 0.9699947787714954, 'xsmm_custom_avg': 3.9581999999999997, 'xsmm_custom_best': 3.9581999999999997, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.839433333333333, 'xsmm_reference_best': 3.839433333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m132.txt...

Read matrix has 21 rows and 42 columns.

Input arrays: A (21, 42), B (42, 81600).

Output array: C (21, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.380433 ms

xsmm-reference Time (libxsmm): 4.380400 ms

xsmm-reference No. of CPU cycles: 4380400

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.3804333333333334

xsmm-reference avg execution time: 4.3804333333333334

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 721794398 cleaned_data/example_mats/tri/p5/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m132.txt...

Read matrix has 21 rows and 42 columns.

Input arrays: A (21, 42), B (42, 81600).

Output array: C (21, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 21, k= 42

lda= 81600, ldb= 42, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.421033 ms

xsmm-custom Time (libxsmm): 4.421000 ms

xsmm-custom No. of CPU cycles: 4421000

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.4210333333333329

xsmm-custom avg execution time: 4.4210333333333329

Freeing A

Freeing B

Freeing C

{'a_cols': 42, 'a_nonzero': 864, 'a_rows': 21, 'a_size': 882, 'a_unique': 216, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.990816626580513, 'speedup_best_over_ref': 0.990816626580513, 'xsmm_custom_avg': 4.421033333333333, 'xsmm_custom_best': 4.421033333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.380433333333333, 'xsmm_reference_best': 4.380433333333333, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m460.txt...

Read matrix has 42 rows and 21 columns.

Input arrays: A (42, 21), B (21, 81600).

Output array: C (42, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 4.370333 ms

xsmm-reference Time (libxsmm): 4.370333 ms

xsmm-reference No. of CPU cycles: 4370333

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 4.3703333333333338

xsmm-reference avg execution time: 4.3703333333333338

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1933370020 cleaned_data/example_mats/tri/p5/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p5/williams-shunn/m460.txt...

Read matrix has 42 rows and 21 columns.

Input arrays: A (42, 21), B (21, 81600).

Output array: C (42, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 42, k= 21

lda= 81600, ldb= 21, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 4.479033 ms

xsmm-custom Time (libxsmm): 4.478933 ms

xsmm-custom No. of CPU cycles: 4478933

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 4.4790333333333336

xsmm-custom avg execution time: 4.4790333333333336

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 864, 'a_rows': 42, 'a_size': 882, 'a_unique': 216, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p5/williams-shunn/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9757313706082414, 'speedup_best_over_ref': 0.9757313706082414, 'xsmm_custom_avg': 4.479033333333334, 'xsmm_custom_best': 4.479033333333334, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 4.370333333333334, 'xsmm_reference_best': 4.370333333333334, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m0.txt...

Read matrix has 21 rows and 28 columns.

Input arrays: A (21, 28), B (28, 81600).

Output array: C (21, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.118667 ms

xsmm-reference Time (libxsmm): 3.118633 ms

xsmm-reference No. of CPU cycles: 3118633

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.1186666666666647

xsmm-reference avg execution time: 3.1186666666666647

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 2102729436 cleaned_data/example_mats/tri/p6/williams-shunn/m0.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m0.txt...

Read matrix has 21 rows and 28 columns.

Input arrays: A (21, 28), B (28, 81600).

Output array: C (21, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 21, k= 28

lda= 81600, ldb= 28, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.234767 ms

xsmm-custom Time (libxsmm): 3.234767 ms

xsmm-custom No. of CPU cycles: 3234766

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.2347666666666668

xsmm-custom avg execution time: 3.2347666666666668

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 588, 'a_rows': 21, 'a_size': 588, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m0.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9641086940840652, 'speedup_best_over_ref': 0.9641086940840652, 'xsmm_custom_avg': 3.234766666666667, 'xsmm_custom_best': 3.234766666666667, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.1186666666666647, 'xsmm_reference_best': 3.1186666666666647, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m3.txt...

Read matrix has 28 rows and 21 columns.

Input arrays: A (28, 21), B (21, 81600).

Output array: C (28, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 3.152300 ms

xsmm-reference Time (libxsmm): 3.152300 ms

xsmm-reference No. of CPU cycles: 3152300

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 3.1522999999999999

xsmm-reference avg execution time: 3.1522999999999999

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1796448729 cleaned_data/example_mats/tri/p6/williams-shunn/m3.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m3.txt...

Read matrix has 28 rows and 21 columns.

Input arrays: A (28, 21), B (21, 81600).

Output array: C (28, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 21

lda= 81600, ldb= 21, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 3.177200 ms

xsmm-custom Time (libxsmm): 3.177200 ms

xsmm-custom No. of CPU cycles: 3177200

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 3.1772

xsmm-custom avg execution time: 3.1772

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 588, 'a_rows': 28, 'a_size': 588, 'a_unique': 200, 'alpha': 1.0, 'beta': 0.0, 'density': 1.0, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m3.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9921629107390154, 'speedup_best_over_ref': 0.9921629107390154, 'xsmm_custom_avg': 3.1772, 'xsmm_custom_best': 3.1772, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 3.1523, 'xsmm_reference_best': 3.1523, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m6.txt...

Read matrix has 56 rows and 21 columns.

Input arrays: A (56, 21), B (21, 81600).

Output array: C (56, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 5.817600 ms

xsmm-reference Time (libxsmm): 5.817600 ms

xsmm-reference No. of CPU cycles: 5817600

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 5.8175999999999997

xsmm-reference avg execution time: 5.8175999999999997

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1578345534 cleaned_data/example_mats/tri/p6/williams-shunn/m6.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m6.txt...

Read matrix has 56 rows and 21 columns.

Input arrays: A (56, 21), B (21, 81600).

Output array: C (56, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 21

lda= 81600, ldb= 21, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 5.807467 ms

xsmm-custom Time (libxsmm): 5.807367 ms

xsmm-custom No. of CPU cycles: 5807366

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 5.8074666666666666

xsmm-custom avg execution time: 5.8074666666666666

Freeing A

Freeing B

Freeing C

{'a_cols': 21, 'a_nonzero': 784, 'a_rows': 56, 'a_size': 1176, 'a_unique': 100, 'alpha': 1.0, 'beta': 0.0, 'density': 0.6666666666666666, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m6.txt', 'size_n': 81600, 'speedup_avg_over_ref': 1.001744880154284, 'speedup_best_over_ref': 1.001744880154284, 'xsmm_custom_avg': 5.8074666666666666, 'xsmm_custom_best': 5.8074666666666666, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 5.8176, 'xsmm_reference_best': 5.8176, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m132.txt...

Read matrix has 28 rows and 56 columns.

Input arrays: A (28, 56), B (56, 81600).

Output array: C (28, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 7.355167 ms

xsmm-reference Time (libxsmm): 7.355133 ms

xsmm-reference No. of CPU cycles: 7355133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 7.3551666666666664

xsmm-reference avg execution time: 7.3551666666666664

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 1152452069 cleaned_data/example_mats/tri/p6/williams-shunn/m132.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m132.txt...

Read matrix has 28 rows and 56 columns.

Input arrays: A (28, 56), B (56, 81600).

Output array: C (28, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 28, k= 56

lda= 81600, ldb= 56, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 7.445933 ms

xsmm-custom Time (libxsmm): 7.445900 ms

xsmm-custom No. of CPU cycles: 7445900

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 7.4459333333333326

xsmm-custom avg execution time: 7.4459333333333326

Freeing A

Freeing B

Freeing C

{'a_cols': 56, 'a_nonzero': 1536, 'a_rows': 28, 'a_size': 1568, 'a_unique': 384, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m132.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9878099007064259, 'speedup_best_over_ref': 0.9878099007064259, 'xsmm_custom_avg': 7.445933333333333, 'xsmm_custom_best': 7.445933333333333, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 7.355166666666666, 'xsmm_reference_best': 7.355166666666666, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
run 0

Preparing ref

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m460.txt...

Read matrix has 56 rows and 28 columns.

Input arrays: A (56, 28), B (28, 81600).

Output array: C (56, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

xsmm-reference kernel type: dense

Benchmarking ref

xsmm-reference Time (gettimeofday): 7.290133 ms

xsmm-reference Time (libxsmm): 7.290133 ms

xsmm-reference No. of CPU cycles: 7290133

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-reference best execution time: 7.2901333333333316

xsmm-reference avg execution time: 7.2901333333333316

Freeing A ref

Freeing B ref

Freeing C ref

about to run "sudo nice -n -20 bin/benchmark_xsmm_custom 81600 521135804 cleaned_data/example_mats/tri/p6/williams-shunn/m460.txt"

Preparing

alpha = 1.000000, beta = 0.000000

Loading matrix from path cleaned_data/example_mats/tri/p6/williams-shunn/m460.txt...

Read matrix has 56 rows and 28 columns.

Input arrays: A (56, 28), B (28, 81600).

Output array: C (56, 81600).

Array B width (N): 81600

Randomly generating B matrix...

Running XSMM Reference MM...

Checking matrices for AMX

m= 8, n= 56, k= 28

lda= 81600, ldb= 28, ldc= 81600

Byte per val is 8

AMX vec length is 8

M is vec length divisible at 8

N is vec length divisible at 56

A flags are good

Prepared

xsmm-custom kernel type: dense

Benchmarking

xsmm-custom Time (gettimeofday): 7.470100 ms

xsmm-custom Time (libxsmm): 7.470067 ms

xsmm-custom No. of CPU cycles: 7470066

CPU clock speed (GHz): 1.000000

Done.

---------------------------------------------------------------

xsmm-custom best execution time: 7.4701000000000004

xsmm-custom avg execution time: 7.4701000000000004

Freeing A

Freeing B

Freeing C

{'a_cols': 28, 'a_nonzero': 1536, 'a_rows': 56, 'a_size': 1568, 'a_unique': 384, 'alpha': 1.0, 'beta': 0.0, 'density': 0.9795918367346939, 'mat_file': 'data/example_mats/tri/p6/williams-shunn/m460.txt', 'size_n': 81600, 'speedup_avg_over_ref': 0.9759083992628387, 'speedup_best_over_ref': 0.9759083992628387, 'xsmm_custom_avg': 7.4701, 'xsmm_custom_best': 7.4701, 'xsmm_custom_kernel_type': 'dense', 'xsmm_reference_avg': 7.290133333333332, 'xsmm_reference_best': 7.290133333333332, 'xsmm_reference_cpu_freq': 1.0, 'xsmm_reference_kernel_type': 'dense'}
Average speedup (best) of custom over reference 0.9830807897468973
Average speedup (iqr avg) of custom over reference 0.9830807897468973
